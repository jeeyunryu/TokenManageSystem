{
  "manifest": {
    "name": "@libp2p/peer-id-factory",
    "version": "2.0.3",
    "description": "Create PeerId instances",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/libp2p/js-libp2p-peer-id/tree/master/packages/libp2p-peer-id-factory#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/libp2p/js-libp2p-peer-id.git"
    },
    "bugs": {
      "url": "https://github.com/libp2p/js-libp2p-peer-id/issues"
    },
    "keywords": [
      "IPFS"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      },
      "ignorePatterns": [
        "proto.d.ts"
      ]
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "generate": "protons src/proto.proto",
      "build": "aegir build",
      "test": "aegir test",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:node": "aegir test -t node --cov",
      "test:electron-main": "aegir test -t electron-main",
      "release": "aegir release"
    },
    "dependencies": {
      "@libp2p/crypto": "^1.0.0",
      "@libp2p/interface-keys": "^1.0.2",
      "@libp2p/interface-peer-id": "^2.0.0",
      "@libp2p/peer-id": "^2.0.0",
      "multiformats": "^11.0.0",
      "protons-runtime": "^5.0.0",
      "uint8arraylist": "^2.0.0",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "aegir": "^38.1.0",
      "protons": "^7.0.2",
      "util": "^0.12.4"
    },
    "typedoc": {
      "entryPoint": "./src/index.ts"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@libp2p-peer-id-factory-2.0.3-d841989494c4900e01f6e3929ef06b8cc4e56f8f-integrity/node_modules/@libp2p/peer-id-factory/package.json",
    "readmeFilename": "README.md",
    "readme": "# @libp2p/peer-id-factory <!-- omit in toc -->\n\n[![libp2p.io](https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square)](http://libp2p.io/)\n[![Discuss](https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg?style=flat-square)](https://discuss.libp2p.io)\n[![codecov](https://img.shields.io/codecov/c/github/libp2p/js-libp2p-peer-id.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-peer-id)\n[![CI](https://img.shields.io/github/actions/workflow/status/libp2p/js-libp2p-peer-id/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/libp2p/js-libp2p-peer-id/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> Create PeerId instances\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n  - [Browser `<script>` tag](#browser-script-tag)\n- [Description](#description)\n- [Example](#example)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribute](#contribute)\n\n## Install\n\n```console\n$ npm i @libp2p/peer-id-factory\n```\n\n### Browser `<script>` tag\n\nLoading this module through a script tag will make it's exports available as `Libp2PPeerIdFactory` in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/@libp2p/peer-id-factory/dist/index.min.js\"></script>\n```\n\n## Description\n\nGenerate, import, and export PeerIDs, for use with [IPFS](https://github.com/ipfs/ipfs).\n\nA Peer ID is the SHA-256 [multihash](https://github.com/multiformats/multihash) of a public key.\n\nThe public key is a base64 encoded string of a protobuf containing an RSA DER buffer. This uses a node buffer to pass the base64 encoded public key protobuf to the multihash for ID generation.\n\n## Example\n\n```JavaScript\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory'\n\nconst peerId = await createEd25519PeerId()\nconsole.log(id.toString())\n```\n\n```bash\n12D3KooWRm8J3iL796zPFi2EtGGtUJn58AG67gcqzMFHZnnsTzqD\n```\n\n## API Docs\n\n- <https://libp2p.github.io/js-libp2p-peer-id/modules/_libp2p_peer_id_factory.html>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@libp2p/peer-id-factory/-/peer-id-factory-2.0.3.tgz#d841989494c4900e01f6e3929ef06b8cc4e56f8f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@libp2p/peer-id-factory/-/peer-id-factory-2.0.3.tgz",
    "hash": "d841989494c4900e01f6e3929ef06b8cc4e56f8f",
    "integrity": "sha512-9pwVbfghiKuiC76Pue/+tI4PD7gnw1jGVcxYD+nhcRs8ABE7NLaB7nCm99cCtvmMNRnl2JqaGgZJXt8mnvAEuQ==",
    "registry": "npm",
    "packageName": "@libp2p/peer-id-factory",
    "cacheIntegrity": "sha512-9pwVbfghiKuiC76Pue/+tI4PD7gnw1jGVcxYD+nhcRs8ABE7NLaB7nCm99cCtvmMNRnl2JqaGgZJXt8mnvAEuQ== sha1-2EGYlJTEkA4B9uOSnvBrjMTlb48="
  },
  "registry": "npm",
  "hash": "d841989494c4900e01f6e3929ef06b8cc4e56f8f"
}