{
  "manifest": {
    "name": "multicodec",
    "version": "1.0.4",
    "description": "JavaScript implementation of the multicodec specification",
    "leadMaintainer": "Henrique Dias <hacdias@gmail.com>",
    "main": "src/index.js",
    "scripts": {
      "lint": "aegir lint",
      "test": "aegir test",
      "test:node": "aegir test --target node",
      "test:browser": "aegir test --target browser",
      "build": "aegir build",
      "docs": "aegir docs",
      "release": "aegir release",
      "release-minor": "aegir release --type minor",
      "release-major": "aegir release --type major",
      "coverage": "aegir coverage",
      "coverage-publish": "aegir coverage --provider coveralls",
      "update-table": "node tools/update-table.js"
    },
    "pre-push": [
      "lint",
      "test"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/multiformats/js-multicodec.git"
    },
    "keywords": [
      "IPFS",
      "multiformats",
      "multicodec",
      "binary",
      "packed",
      "the",
      "data!"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/multiformats/js-multicodec/issues"
    },
    "homepage": "https://github.com/multiformats/js-multicodec#readme",
    "dependencies": {
      "buffer": "^5.6.0",
      "varint": "^5.0.0"
    },
    "devDependencies": {
      "aegir": "^23.0.0",
      "bent": "^7.3.4",
      "chai": "^4.2.0",
      "dirty-chai": "^2.0.1",
      "pre-push": "~0.1.1"
    },
    "contributors": [
      {
        "name": "David Dias",
        "email": "daviddias.p@gmail.com"
      },
      {
        "name": "Henrique Dias",
        "email": "hacdias@gmail.com"
      },
      {
        "name": "Volker Mische",
        "email": "volker.mische@gmail.com"
      },
      {
        "name": "Mikeal Rogers",
        "email": "mikeal.rogers@gmail.com"
      },
      {
        "name": "Richard Littauer",
        "email": "richard.littauer@gmail.com"
      },
      {
        "name": "wanderer",
        "email": "mjbecze@gmail.com"
      },
      {
        "name": "Friedel Ziegelmayer",
        "email": "dignifiedquire@gmail.com"
      },
      {
        "name": "Rod Vagg",
        "email": "rod@vagg.org"
      },
      {
        "name": "ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ",
        "email": "victorbjelkholm@gmail.com"
      },
      {
        "name": "Filip Š",
        "email": "filip.stamcar@hotmail.com"
      },
      {
        "name": "Hugo Dias",
        "email": "hugomrdias@gmail.com"
      },
      {
        "name": "Joel Thorstensson",
        "email": "oed@3box.io"
      },
      {
        "name": "Marcin Rataj",
        "email": "lidel@lidel.org"
      },
      {
        "name": "Vasco Santos",
        "email": "vasco.santos@moxy.studio"
      },
      {
        "name": "achingbrain",
        "email": "alex@achingbrain.net"
      },
      {
        "name": "Carson Farmer",
        "email": "carson.farmer@gmail.com"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-multicodec-1.0.4-46ac064657c40380c28367c90304d8ed175a714f-integrity/node_modules/multicodec/package.json",
    "readmeFilename": "README.md",
    "readme": "# js-multicodec\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](https://protocol.ai)\n[![](https://img.shields.io/badge/project-multiformats-blue.svg?style=flat-square)](https://github.com/multiformats/multiformats)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](https://webchat.freenode.net/?channels=%23ipfs)\n[![](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n[![Travis CI](https://flat.badgen.net/travis/multiformats/js-multicodec)](https://travis-ci.com/multiformats/js-multicodec)\n[![Coverage Status](https://coveralls.io/repos/github/multiformats/js-multicodec/badge.svg?branch=master)](https://coveralls.io/github/multiformats/js-multiformats?branch=master)\n\n> JavaScript implementation of the multicodec specification\n\n## Lead Maintainer\n\n[Henrique Dias](http://github.com/hacdias)\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Updating the lookup table](#updating-the-lookup-table)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Install\n\n```sh\n> npm install multicodec\n```\n\nThe type definitions for this package are available on http://definitelytyped.org/. To install just use:\n\n ```sh\n $ npm install -D @types/multicodec\n ```\n\n## Usage\n\n### Example\n\n```JavaScript\n\nconst multicodec = require('multicodec')\n\nconst prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n// prefixedProtobuf 0x50...\n\n// The multicodec codec values can be accessed directly:\nconsole.log(multicodec.DAG_CBOR)\n// 113\n\n// To get the string representation of a codec, e.g. for error messages:\nconsole.log(multicodec.print[113])\n// dag-cbor\n```\n\n### API\n\nhttps://multiformats.github.io/js-multicodec/\n\n[multicodec default table](https://github.com/multiformats/multicodec/blob/master/table.csv)\n\n## Updating the lookup table\n\nUpdating the lookup table is done with a script. The source of truth is the\n[multicodec default table](https://github.com/multiformats/multicodec/blob/master/table.csv).\nUpdate the table with running:\n\n    npm run update-table\n\n## Contribute\n\nContributions welcome. Please check out [the issues](https://github.com/multiformats/js-multicodec/issues).\n\nCheck out our [contributing document](https://github.com/multiformats/multiformats/blob/master/contributing.md) for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nSmall note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\n\n[MIT](LICENSE) © 2016 Protocol Labs Inc.\n",
    "licenseText": "MIT License\n\nCopyright © 2016 Multiformats\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/multicodec/-/multicodec-1.0.4.tgz#46ac064657c40380c28367c90304d8ed175a714f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/multicodec/-/multicodec-1.0.4.tgz",
    "hash": "46ac064657c40380c28367c90304d8ed175a714f",
    "integrity": "sha512-NDd7FeS3QamVtbgfvu5h7fd1IlbaC4EQ0/pgU4zqE2vdHCmBGsUa0TiM8/TdSeG6BMPC92OOCf8F1ocE/Wkrrg==",
    "registry": "npm",
    "packageName": "multicodec",
    "cacheIntegrity": "sha512-NDd7FeS3QamVtbgfvu5h7fd1IlbaC4EQ0/pgU4zqE2vdHCmBGsUa0TiM8/TdSeG6BMPC92OOCf8F1ocE/Wkrrg== sha1-RqwGRlfEA4DCg2fJAwTY7RdacU8="
  },
  "registry": "npm",
  "hash": "46ac064657c40380c28367c90304d8ed175a714f"
}