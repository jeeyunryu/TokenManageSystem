{
  "manifest": {
    "name": "promise-call-limit",
    "version": "1.0.2",
    "files": [
      "index.js"
    ],
    "description": "Call an array of promise-returning functions, restricting concurrency to a specified limit.",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/isaacs/promise-call-limit"
    },
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "https://izs.me"
    },
    "license": "ISC",
    "scripts": {
      "test": "tap",
      "preversion": "npm test",
      "postversion": "npm publish",
      "prepublishOnly": "git push origin --follow-tags"
    },
    "tap": {
      "check-coverage": true
    },
    "devDependencies": {
      "tap": "^16.0.0"
    },
    "funding": {
      "url": "https://github.com/sponsors/isaacs"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-promise-call-limit-1.0.2-integrity/node_modules/promise-call-limit/package.json",
    "readmeFilename": "README.md",
    "readme": "# promise-call-limit\n\nCall an array of promise-returning functions, restricting concurrency to a\nspecified limit.\n\n## USAGE\n\n```js\nconst promiseCallLimit = require('promise-call-limit')\nconst things = getLongListOfThingsToFrobulate()\n\n// frobulate no more than 4 things in parallel\npromiseCallLimit(things.map(thing => () => frobulateThing(thing)), 4)\n  .then(results => console.log('frobulated 4 at a time', results))\n```\n\n## API\n\n### promiseCallLimit(queue Array<() => Promise>, limit = defaultLimit)\n\nThe default limit is the number of CPUs on the system - 1, or 1.\n\nThe reason for subtracting one is that presumably the main thread is taking\nup a CPU as well, so let's not be greedy.\n\nNote that the array should be a list of Promise-_returning_ functions, not\nPromises themselves.  If you have a bunch of Promises already, you're best\noff just calling `Promise.all()`.\n\nThe functions in the queue are called without any arguments.\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/promise-call-limit/-/promise-call-limit-1.0.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/promise-call-limit/-/promise-call-limit-1.0.2.tgz",
    "hash": "",
    "integrity": "sha512-1vTUnfI2hzui8AEIixbdAJlFY4LFDXqQswy/2eOlThAscXCY4It8FdVuI0fMJGAB2aWGbdQf/gv0skKYXmdrHA==",
    "registry": "npm",
    "packageName": "promise-call-limit",
    "cacheIntegrity": "sha512-1vTUnfI2hzui8AEIixbdAJlFY4LFDXqQswy/2eOlThAscXCY4It8FdVuI0fMJGAB2aWGbdQf/gv0skKYXmdrHA== sha1-9kuN2e92k8nHYT59/o1tJN4wMeo="
  },
  "registry": "npm",
  "hash": "d6f4d49df236873ba2f001088b16dd0099456382c50d7a90b30cbfd9e3a54e102c717098e08b7c15d56e2347cc246001d9a5866dd41ffe0bf4b242985e676b1c"
}