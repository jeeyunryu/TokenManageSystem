{
  "manifest": {
    "name": "libnpmhook",
    "version": "9.0.3",
    "description": "programmatic API for managing npm registry hooks",
    "main": "lib/index.js",
    "files": [
      "bin/",
      "lib/"
    ],
    "scripts": {
      "test": "tap",
      "lint": "eslint \"**/*.js\"",
      "postlint": "template-oss-check",
      "lintfix": "node ../.. run lint -- --fix",
      "snap": "tap",
      "posttest": "node ../.. run lint",
      "template-oss-apply": "template-oss-apply --force"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/cli.git",
      "directory": "workspaces/libnpmhook"
    },
    "keywords": [
      "npm",
      "hooks",
      "registry",
      "npm api"
    ],
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "dependencies": {
      "aproba": "^2.0.0",
      "npm-registry-fetch": "^14.0.3"
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.11.4",
      "nock": "^13.3.0",
      "tap": "^16.3.4"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.11.4",
      "content": "../../scripts/template-oss/index.js"
    },
    "tap": {
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-libnpmhook-9.0.3-5dbd6a146feb7e11993d36a26f750ae2347bb1d9-integrity/node_modules/libnpmhook/package.json",
    "readmeFilename": "README.md",
    "readme": "# libnpmhook\n\n[![npm version](https://img.shields.io/npm/v/libnpmhook.svg)](https://npm.im/libnpmhook)\n[![license](https://img.shields.io/npm/l/libnpmhook.svg)](https://npm.im/libnpmhook)\n[![CI - libnpmhook](https://github.com/npm/cli/actions/workflows/ci-libnpmhook.yml/badge.svg)](https://github.com/npm/cli/actions/workflows/ci-libnpmhook.yml)\n\n[`libnpmhook`](https://github.com/npm/libnpmhook) is a Node.js library for\nprogrammatically managing the npm registry's server-side hooks.\n\nFor a more general introduction to managing hooks, see [the introductory blog\npost](https://blog.npmjs.org/post/145260155635/introducing-hooks-get-notifications-of-npm).\n\n## Table of Contents\n\n* [Example](#example)\n* [Install](#install)\n* [Contributing](#contributing)\n* [API](#api)\n  * [hook opts](#opts)\n  * [`add()`](#add)\n  * [`rm()`](#rm)\n  * [`ls()`](#ls)\n  * [`ls.stream()`](#ls-stream)\n  * [`update()`](#update)\n\n## Example\n\n```js\nconst hooks = require('libnpmhook')\n\nconsole.log(await hooks.ls('mypkg', {token: 'deadbeef'}))\n// array of hook objects on `mypkg`.\n```\n\n## Install\n\n`$ npm install libnpmhook`\n\n### API\n\n#### <a name=\"opts\"></a> `opts` for `libnpmhook` commands\n\n`libnpmhook` uses [`npm-registry-fetch`](https://npm.im/npm-registry-fetch).\nAll options are passed through directly to that library, so please refer to [its\nown `opts`\ndocumentation](https://www.npmjs.com/package/npm-registry-fetch#fetch-options)\nfor options that can be passed in.\n\nA couple of options of note for those in a hurry:\n\n* `opts.token` - can be passed in and will be used as the authentication token for the registry. For other ways to pass in auth details, see the n-r-f docs.\n* `opts.otp` - certain operations will require an OTP token to be passed in. If a `libnpmhook` command fails with `err.code === EOTP`, please retry the request with `{otp: <2fa token>}`\n\n#### <a name=\"add\"></a> `> hooks.add(name, endpoint, secret, [opts]) -> Promise`\n\n`name` is the name of the package, org, or user/org scope to watch. The type is\ndetermined by the name syntax: `'@foo/bar'` and `'foo'` are treated as packages,\n`@foo` is treated as a scope, and `~user` is treated as an org name or scope.\nEach type will attach to different events.\n\nThe `endpoint` should be a fully-qualified http URL for the endpoint the hook\nwill send its payload to when it fires. `secret` is a shared secret that the\nhook will send to that endpoint to verify that it's actually coming from the\nregistry hook.\n\nThe returned Promise resolves to the full hook object that was created,\nincluding its generated `id`.\n\nSee also: [`POST\n/v1/hooks/hook`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#post-v1hookshook)\n\n##### Example\n\n```javascript\nawait hooks.add('~zkat', 'https://example.com/api/added', 'supersekrit', {\n  token: 'myregistrytoken',\n  otp: '694207'\n})\n\n=>\n\n{ id: '16f7xoal',\n  username: 'zkat',\n  name: 'zkat',\n  endpoint: 'https://example.com/api/added',\n  secret: 'supersekrit',\n  type: 'owner',\n  created: '2018-08-21T20:05:25.125Z',\n  updated: '2018-08-21T20:05:25.125Z',\n  deleted: false,\n  delivered: false,\n  last_delivery: null,\n  response_code: 0,\n  status: 'active' }\n```\n\n#### <a name=\"find\"></a> `> hooks.find(id, [opts]) -> Promise`\n\nReturns the hook identified by `id`.\n\nThe returned Promise resolves to the full hook object that was found, or error\nwith `err.code` of `'E404'` if it didn't exist.\n\nSee also: [`GET\n/v1/hooks/hook/:id`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#get-v1hookshookid)\n\n##### Example\n\n```javascript\nawait hooks.find('16f7xoal', {token: 'myregistrytoken'})\n\n=>\n\n{ id: '16f7xoal',\n  username: 'zkat',\n  name: 'zkat',\n  endpoint: 'https://example.com/api/added',\n  secret: 'supersekrit',\n  type: 'owner',\n  created: '2018-08-21T20:05:25.125Z',\n  updated: '2018-08-21T20:05:25.125Z',\n  deleted: false,\n  delivered: false,\n  last_delivery: null,\n  response_code: 0,\n  status: 'active' }\n```\n\n#### <a name=\"rm\"></a> `> hooks.rm(id, [opts]) -> Promise`\n\nRemoves the hook identified by `id`.\n\nThe returned Promise resolves to the full hook object that was removed, if it\nexisted, or `null` if no such hook was there (instead of erroring).\n\nSee also: [`DELETE\n/v1/hooks/hook/:id`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#delete-v1hookshookid)\n\n##### Example\n\n```javascript\nawait hooks.rm('16f7xoal', {\n  token: 'myregistrytoken',\n  otp: '694207'\n})\n\n=>\n\n{ id: '16f7xoal',\n  username: 'zkat',\n  name: 'zkat',\n  endpoint: 'https://example.com/api/added',\n  secret: 'supersekrit',\n  type: 'owner',\n  created: '2018-08-21T20:05:25.125Z',\n  updated: '2018-08-21T20:05:25.125Z',\n  deleted: true,\n  delivered: false,\n  last_delivery: null,\n  response_code: 0,\n  status: 'active' }\n\n// Repeat it...\nawait hooks.rm('16f7xoal', {\n  token: 'myregistrytoken',\n  otp: '694207'\n})\n\n=> null\n```\n\n#### <a name=\"update\"></a> `> hooks.update(id, endpoint, secret, [opts]) -> Promise`\n\nThe `id` should be a hook ID from a previously-created hook.\n\nThe `endpoint` should be a fully-qualified http URL for the endpoint the hook\nwill send its payload to when it fires. `secret` is a shared secret that the\nhook will send to that endpoint to verify that it's actually coming from the\nregistry hook.\n\nThe returned Promise resolves to the full hook object that was updated, if it\nexisted. Otherwise, it will error with an `'E404'` error code.\n\nSee also: [`PUT\n/v1/hooks/hook/:id`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#put-v1hookshookid)\n\n##### Example\n\n```javascript\nawait hooks.update('16fxoal', 'https://example.com/api/other', 'newsekrit', {\n  token: 'myregistrytoken',\n  otp: '694207'\n})\n\n=>\n\n{ id: '16f7xoal',\n  username: 'zkat',\n  name: 'zkat',\n  endpoint: 'https://example.com/api/other',\n  secret: 'newsekrit',\n  type: 'owner',\n  created: '2018-08-21T20:05:25.125Z',\n  updated: '2018-08-21T20:14:41.964Z',\n  deleted: false,\n  delivered: false,\n  last_delivery: null,\n  response_code: 0,\n  status: 'active' }\n```\n\n#### <a name=\"ls\"></a> `> hooks.ls([opts]) -> Promise`\n\nResolves to an array of hook objects associated with the account you're\nauthenticated as.\n\nResults can be further filtered with three values that can be passed in through\n`opts`:\n\n* `opts.package` - filter results by package name\n* `opts.limit` - maximum number of hooks to return\n* `opts.offset` - pagination offset for results (use with `opts.limit`)\n\nSee also:\n  * [`hooks.ls.stream()`](#ls-stream)\n  * [`GET\n/v1/hooks`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#get-v1hooks)\n\n##### Example\n\n```javascript\nawait hooks.ls({token: 'myregistrytoken'})\n\n=>\n[\n  { id: '16f7xoal', ... },\n  { id: 'wnyf98a1', ... },\n  ...\n]\n```\n\n#### <a name=\"ls-stream\"></a> `> hooks.ls.stream([opts]) -> Stream`\n\nReturns a stream of hook objects associated with the account you're\nauthenticated as. The returned stream is a valid `Symbol.asyncIterator` on\n`node@>=10`.\n\nResults can be further filtered with three values that can be passed in through\n`opts`:\n\n* `opts.package` - filter results by package name\n* `opts.limit` - maximum number of hooks to return\n* `opts.offset` - pagination offset for results (use with `opts.limit`)\n\nSee also:\n  * [`hooks.ls()`](#ls)\n  * [`GET\n/v1/hooks`](https://github.com/npm/registry/blob/master/docs/hooks/endpoints.md#get-v1hooks)\n\n##### Example\n\n```javascript\nfor await (let hook of hooks.ls.stream({token: 'myregistrytoken'})) {\n  console.log('found hook:', hook.id)\n}\n\n=>\n// outputs:\n// found hook: 16f7xoal\n// found hook: wnyf98a1\n```\n",
    "licenseText": "ISC License\n\nCopyright (c) npm, Inc.\n\nPermission to use, copy, modify, and/or distribute this software for\nany purpose with or without fee is hereby granted, provided that the\nabove copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE COPYRIGHT HOLDER DISCLAIMS\nALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\nOR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\nUSE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/libnpmhook/-/libnpmhook-9.0.3.tgz#5dbd6a146feb7e11993d36a26f750ae2347bb1d9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/libnpmhook/-/libnpmhook-9.0.3.tgz",
    "hash": "5dbd6a146feb7e11993d36a26f750ae2347bb1d9",
    "integrity": "sha512-wMZe58sI7KLhg0+nUWZW5KdMfjNNcOIIbkoP19BDHYoUF9El7eeUWkGNxUGzpHkPKiGoQ1z/v6CYin4deebeuw==",
    "registry": "npm",
    "packageName": "libnpmhook",
    "cacheIntegrity": "sha512-wMZe58sI7KLhg0+nUWZW5KdMfjNNcOIIbkoP19BDHYoUF9El7eeUWkGNxUGzpHkPKiGoQ1z/v6CYin4deebeuw== sha1-Xb1qFG/rfhGZPTaib3UK4jR7sdk="
  },
  "registry": "npm",
  "hash": "5dbd6a146feb7e11993d36a26f750ae2347bb1d9"
}