{
  "manifest": {
    "name": "hamt-sharding",
    "version": "3.0.2",
    "description": "JavaScript implementation of sharding using hash array mapped tries",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipfs/js-hamt-sharding#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-hamt-sharding.git"
    },
    "bugs": {
      "url": "https://github.com/ipfs/js-hamt-sharding/issues"
    },
    "keywords": [
      "IPFS",
      "hamt",
      "sharding"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist/src",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "build": "aegir build",
      "test": "aegir test",
      "test:node": "aegir test -t node --cov",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:electron-main": "aegir test -t electron-main",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "release": "aegir release"
    },
    "dependencies": {
      "sparse-array": "^1.3.1",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "aegir": "^37.5.0",
      "it-length": "^2.0.0",
      "multihashing-async": "^2.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-hamt-sharding-3.0.2-a3fba1e4e6b58469388a0e1458768c78c0cd95f6-integrity/node_modules/hamt-sharding/package.json",
    "readmeFilename": "README.md",
    "readme": "# hamt-sharding <!-- omit in toc -->\n\n[![ipfs.tech](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](https://ipfs.tech)\n[![Discuss](https://img.shields.io/discourse/https/discuss.ipfs.tech/posts.svg?style=flat-square)](https://discuss.ipfs.tech)\n[![codecov](https://img.shields.io/codecov/c/github/ipfs/js-hamt-sharding.svg?style=flat-square)](https://codecov.io/gh/ipfs/js-hamt-sharding)\n[![CI](https://img.shields.io/github/workflow/status/ipfs/js-hamt-sharding/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/ipfs/js-hamt-sharding/actions/workflows/js-test-and-release.yml)\n\n> JavaScript implementation of sharding using hash array mapped tries\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Example](#example)\n- [API](#api)\n  - [`bucket.put(key, value)`](#bucketputkey-value)\n  - [`bucket.get(key)`](#bucketgetkey)\n  - [`bucket.del(key)`](#bucketdelkey)\n  - [`bucket.leafCount()`](#bucketleafcount)\n  - [`bucket.childrenCount()`](#bucketchildrencount)\n  - [`bucket.onlyChild()`](#bucketonlychild)\n  - [`bucket.eachLeafSeries()`](#bucketeachleafseries)\n  - [`bucket.serialize(map, reduce)`](#bucketserializemap-reduce)\n  - [`bucket.asyncTransform(asyncMap, asyncReduce)`](#bucketasynctransformasyncmap-asyncreduce)\n  - [`bucket.toJSON()`](#buckettojson)\n  - [`bucket.prettyPrint()`](#bucketprettyprint)\n  - [`bucket.tableSize()`](#buckettablesize)\n- [Contribute](#contribute)\n- [License](#license)\n- [Contribute](#contribute-1)\n\n## Install\n\n```console\n$ npm i hamt-sharding\n```\n\n## Usage\n\n### Example\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nimport crypto from 'crypto-promise'\n\n// decide how to hash buffers made from keys, can return a Promise\nconst hashFn = async (buf) => {\n  return crypto\n    .createHash('sha256')\n    .update(buf)\n    .digest()\n}\n\nconst bucket = createHAMT({\n  hashFn: hashFn\n})\n\nawait bucket.put('key', 'value')\n\nconst output = await bucket.get('key')\n// output === 'value'\n```\n\n## API\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\n```\n\n### `bucket.put(key, value)`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nawait bucket.put('key', 'value')\n```\n\n### `bucket.get(key)`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nawait bucket.put('key', 'value')\n\nconsole.info(await bucket.get('key')) // 'value'\n```\n\n### `bucket.del(key)`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nawait bucket.put('key', 'value')\nawait bucket.del('key', 'value')\n\nconsole.info(await bucket.get('key')) // undefined\n```\n\n### `bucket.leafCount()`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nconsole.info(bucket.leafCount()) // 0\n\nawait bucket.put('key', 'value')\n\nconsole.info(bucket.leafCount()) // 1\n```\n\n### `bucket.childrenCount()`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nconsole.info(bucket.childrenCount()) // 0\n\nawait bucket.put('key', 'value')\n\nconsole.info(bucket.childrenCount()) // 234 -- dependent on hashing algorithm\n```\n\n### `bucket.onlyChild()`\n\n### `bucket.eachLeafSeries()`\n\n```javascript\nimport { createHAMT } from 'hamt-sharding'\nconst bucket = createHAMT({...})\n\nawait bucket.put('key', 'value')\n\nfor await (const child of bucket.eachLeafSeries()) {\n  console.info(child.value) // 'value'\n}\n```\n\n### `bucket.serialize(map, reduce)`\n\n### `bucket.asyncTransform(asyncMap, asyncReduce)`\n\n### `bucket.toJSON()`\n\n### `bucket.prettyPrint()`\n\n### `bucket.tableSize()`\n\n## Contribute\n\nFeel free to join in. All welcome. Open an [issue](https://github.com/ipfs-shipyard/js-hamt-sharding/issues)!\n\nThis repository falls under the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/contributing.md)\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nContributions welcome! Please check out [the issues](https://github.com/ipfs/js-hamt-sharding/issues).\n\nAlso see our [contributing document](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md) for more information on how we work, and about contributing in general.\n\nPlease be aware that all interactions related to this repo are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hamt-sharding/-/hamt-sharding-3.0.2.tgz#a3fba1e4e6b58469388a0e1458768c78c0cd95f6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hamt-sharding/-/hamt-sharding-3.0.2.tgz",
    "hash": "a3fba1e4e6b58469388a0e1458768c78c0cd95f6",
    "integrity": "sha512-f0DzBD2tSmLFdFsLAvOflIBqFPjerbA7BfmwO8mVho/5hXwgyyYhv+ijIzidQf/DpDX3bRjAQvhGoBFj+DBvPw==",
    "registry": "npm",
    "packageName": "hamt-sharding",
    "cacheIntegrity": "sha512-f0DzBD2tSmLFdFsLAvOflIBqFPjerbA7BfmwO8mVho/5hXwgyyYhv+ijIzidQf/DpDX3bRjAQvhGoBFj+DBvPw== sha1-o/uh5Oa1hGk4ig4UWHaMeMDNlfY="
  },
  "registry": "npm",
  "hash": "a3fba1e4e6b58469388a0e1458768c78c0cd95f6"
}