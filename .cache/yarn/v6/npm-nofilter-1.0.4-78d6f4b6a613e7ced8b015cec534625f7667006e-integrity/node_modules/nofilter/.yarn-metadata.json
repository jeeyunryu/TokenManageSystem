{
  "manifest": {
    "name": "nofilter",
    "version": "1.0.4",
    "description": "Read and write a growable buffer as a stream",
    "main": "lib/index.js",
    "scripts": {
      "clean": "rm -rf coverage doc **/.DS_Store",
      "lint": "eslint lib/*.js test/*.js",
      "coverage": "nyc -r html npm test",
      "test": "mocha test/*.js",
      "doc": "jsdoc -c .jsdoc.conf",
      "release": "npm version patch && git push --follow-tags && npm publish",
      "coveralls": "nyc report --reporter=text-lcov | coveralls"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/hildjj/nofilter.git"
    },
    "keywords": [
      "buffer",
      "stream",
      "duplex",
      "transform",
      "#nofilter",
      "no-filter",
      "concat"
    ],
    "author": {
      "name": "Joe Hildebrand",
      "email": "joe-github@cursive.net"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/hildjj/nofilter/issues"
    },
    "homepage": "https://github.com/hildjj/nofilter#readme",
    "devDependencies": {
      "@types/node": "^14.0.27",
      "chai": "^4.2",
      "coveralls": "^3.1.0",
      "jsdoc": "^3.6.5",
      "minami": "^1.2.3",
      "mocha": "^7.2.0",
      "nyc": "^15.1.0"
    },
    "engines": {
      "node": ">=8"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-nofilter-1.0.4-78d6f4b6a613e7ced8b015cec534625f7667006e-integrity/node_modules/nofilter/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/hildjj/nofilter.svg?branch=master)](https://travis-ci.org/hildjj/nofilter)\n[![Coverage Status](https://coveralls.io/repos/hildjj/nofilter/badge.svg?branch=master&service=github)](https://coveralls.io/github/hildjj/nofilter?branch=master)\n\n# NoFilter\n\nA node.js package to read and write a stream of data into or out of what looks\nlike a growable [Buffer](https://nodejs.org/api/buffer.html).\n\nI kept needing this, and none of the existing packages seemed to have enough\nfeatures, test coverage, etc.\n\n# Examples\n\nAs a data sink:\n```javascript\nvar NoFilter = require('nofilter');\nnf = new NoFilter();\nnf.on('finish', function() {\n  console.log(nf.toString('base64'));\n});\nprocess.stdin.pipe(nf);\n```\n\nAs a data source:\n```javascript\nvar NoFilter = require('nofilter');\nnf = new NoFilter('010203', 'hex');\nnf.pipe(process.stdout);\n```\n\nRead the [API Docs](http://hildjj.github.io/nofilter/).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Joe Hildebrand\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/nofilter/-/nofilter-1.0.4.tgz#78d6f4b6a613e7ced8b015cec534625f7667006e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/nofilter/-/nofilter-1.0.4.tgz",
    "hash": "78d6f4b6a613e7ced8b015cec534625f7667006e",
    "integrity": "sha512-N8lidFp+fCz+TD51+haYdbDGrcBWwuHX40F5+z0qkUjMJ5Tp+rdSuAkMJ9N9eoolDlEVTf6u5icM+cNKkKW2mA==",
    "registry": "npm",
    "packageName": "nofilter",
    "cacheIntegrity": "sha512-N8lidFp+fCz+TD51+haYdbDGrcBWwuHX40F5+z0qkUjMJ5Tp+rdSuAkMJ9N9eoolDlEVTf6u5icM+cNKkKW2mA== sha1-eNb0tqYT587YsBXOxTRiX3ZnAG4="
  },
  "registry": "npm",
  "hash": "78d6f4b6a613e7ced8b015cec534625f7667006e"
}