{
  "manifest": {
    "name": "dns-over-http-resolver",
    "version": "1.2.3",
    "description": "DNS over HTTP resolver",
    "main": "src/index.js",
    "author": {
      "name": "Vasco Santos"
    },
    "scripts": {
      "test": "aegir test -t node -t browser",
      "test:browser": "aegir test -t browser",
      "test:node": "aegir test -t node",
      "lint": "aegir lint",
      "release": "aegir release --docs",
      "release-minor": "aegir release --type minor --docs",
      "release-major": "aegir release -t node -t browser --type major --docs",
      "build": "aegir build"
    },
    "files": [
      "src",
      "dist"
    ],
    "devDependencies": {
      "aegir": "^33.1.0",
      "sinon": "^10.0.0",
      "util": "^0.12.3"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vasco-santos/dns-over-http-resolver.git"
    },
    "keywords": [
      "doh",
      "dns",
      "http"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vasco-santos/dns-over-http-resolver/issues"
    },
    "homepage": "https://github.com/vasco-santos/dns-over-http-resolver#readme",
    "dependencies": {
      "debug": "^4.3.1",
      "native-fetch": "^3.0.0",
      "receptacle": "^1.3.2"
    },
    "contributors": [
      {
        "name": "Vasco Santos",
        "email": "vasco.santos@moxy.studio"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-dns-over-http-resolver-1.2.3-194d5e140a42153f55bb79ac5a64dd2768c36af9-integrity/node_modules/dns-over-http-resolver/package.json",
    "readmeFilename": "README.md",
    "readme": "# dns-over-http-resolver\n\n[![Build Status](https://travis-ci.org/vasco-santos/dns-over-http-resolver.svg?branch=master)](https://travis-ci.org/vasco-santos/dns-over-http-resolver)\n[![dependencies Status](https://david-dm.org/vasco-santos/dns-over-http-resolver/status.svg)](https://david-dm.org/vasco-santos/dns-over-http-resolver)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![Downloads](https://img.shields.io/npm/dm/dns-over-http-resolver.svg)](https://www.npmjs.com/package/dns-over-http-resolver)\n[![Minzipped size](https://badgen.net/bundlephobia/minzip/dns-over-http-resolver)](https://bundlephobia.com/result?p=dns-over-http-resolver)\n[![codecov](https://img.shields.io/codecov/c/github/vasco-santos/dns-over-http-resolver.svg?style=flat-square)](https://codecov.io/gh/vasco-santos/dns-over-http-resolver)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/vasco-santos/dns-over-http-resolver/ci?label=ci&style=flat-square)](https://github.com/vasco-santos/dns-over-http-resolver/actions?query=branch%3Amaster+workflow%3Aci+)\n\n> DNS over HTTP resolver\n\nIsomorphic DNS over HTTP resolver using fetch.\n\nAPI based on [Node.js' dns promises API](https://nodejs.org/dist/latest-v14.x/docs/api/dns.html#dns_dns_promises_api), allowing the native `dns` module to be used if available when relying on this API.\n\n## Install\n\n```sh\nnpm i dns-over-http-resolver\n```\n\n## Usage\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\n\nconst dohResolver = new DnsOverHttpResolver(options)\n```\n\n[Cloudflare](https://cloudflare-dns.com/dns-query) and [Google](https://dns.google/resolve) DNS servers are used by default. They can be replaced via the API. \n\nYou can also use `require('dns').promises` in Node.js in lieu of this module.\n\n### options\n\nYou can provide the following options for the DnsOverHttpResolver:\n\n| Name | Type | Description | Default |\n|------|------|-------------|---------|\n| maxCache | `number` | maximum number of cached dns records | 100 |\n\n## API\n\n### resolve(hostname, rrType)\n\nUses the DNS protocol to resolve the given host name into a DNS record.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| hostname | `string` | host name to resolve |\n| [rrType] | `string` | resource record type (default: 'A') |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `Promise<Array<string>>` | returns a Promise resolving a DNS record according to its type |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\nconst resolver = new DnsOverHttpResolver()\n\nconst hostname = 'google.com'\nconst recordType = 'TXT'\n\nconst dnsRecord = await resolver.resolve(hostname, recordType)\n```\n\n### resolve4(hostname)\n\nUses the DNS protocol to resolve the given host name into IPv4 addresses.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| hostname | `string` | host name to resolve |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `Promise<Array<string>>` | returns a Promise resolving IPv4 addresses |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\nconst resolver = new DnsOverHttpResolver()\n\nconst hostname = 'google.com'\n\nconst address = await resolver.resolve4(hostname) // ['216.58.212.142']\n```\n\n### resolve6(hostname)\n\nUses the DNS protocol to resolve the given host name into IPv6 addresses.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| hostname | `string` | host name to resolve |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `Promise<Array<string>>` | returns a Promise resolving IPv6 addresses |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\nconst resolver = new DnsOverHttpResolver()\n\nconst hostname = 'google.com'\n\nconst address = await resolver.resolve6(hostname) // ['2a00:1450:4001:801::200e']\n```\n\n### resolveTxt(hostname)\n\nUses the DNS protocol to resolve the given host name into a Text Record.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| hostname | `string` | host name to resolve |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `Promise<Array<Array<string>>>` | returns a Promise resolving a Text Record |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\nconst resolver = new DnsOverHttpResolver()\n\nconst hostname = 'google.com'\n\nconst address = await resolver.resolveTxt(hostname) // [['v=spf1 -all']]\n```\n\n### getServers()\n\nGet an array of the IP addresses currently configured for DNS resolution.\nThese addresses are formatted according to RFC 5952. It can include a custom port.\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `Array<string>` | returns array of DNS servers used |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\n\nconst resolver = new DnsOverHttpResolver()\nconst servers = resolver.getServers()\n```\n\n### setServers(servers)\n\nSets the IP address and port of servers to be used when performing DNS resolution.\nNote that the servers order will be randomized on each request for load distribution.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| servers | `Array<string>` | Array of RFC 5952 formatted addresses. |\n\n#### Example\n\n```js\nconst DnsOverHttpResolver = require('dns-over-http-resolver')\n\nconst resolver = new DnsOverHttpResolver()\nresolver.setServers(['https://cloudflare-dns.com/dns-query'])\n```\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/vasco-santos/dns-over-http-resolver/issues/new) or submit PRs.\n\n## License\n\n[MIT](LICENSE) Â© Vasco Santos\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Vasco Santos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dns-over-http-resolver/-/dns-over-http-resolver-1.2.3.tgz#194d5e140a42153f55bb79ac5a64dd2768c36af9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dns-over-http-resolver/-/dns-over-http-resolver-1.2.3.tgz",
    "hash": "194d5e140a42153f55bb79ac5a64dd2768c36af9",
    "integrity": "sha512-miDiVSI6KSNbi4SVifzO/reD8rMnxgrlnkrlkugOLQpWQTe2qMdHsZp5DmfKjxNE+/T3VAAYLQUZMv9SMr6+AA==",
    "registry": "npm",
    "packageName": "dns-over-http-resolver",
    "cacheIntegrity": "sha512-miDiVSI6KSNbi4SVifzO/reD8rMnxgrlnkrlkugOLQpWQTe2qMdHsZp5DmfKjxNE+/T3VAAYLQUZMv9SMr6+AA== sha1-GU1eFApCFT9Vu3msWmTdJ2jDavk="
  },
  "registry": "npm",
  "hash": "194d5e140a42153f55bb79ac5a64dd2768c36af9"
}