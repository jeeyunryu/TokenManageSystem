{
  "manifest": {
    "name": "xsalsa20",
    "version": "1.2.0",
    "description": "XSalsa20 implemented in Javascript and WebAssembly",
    "main": "index.js",
    "devDependencies": {
      "b4a": "^1.1.3",
      "tape": "^4.6.3",
      "wasm-tools": "^0.2.0"
    },
    "scripts": {
      "test": "tape test.js",
      "compile": "wasm-to-js -sf cjs xsalsa20.wat > xsalsa20.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mafintosh/xsalsa20.git"
    },
    "author": {
      "name": "Mathias Buus",
      "url": "@mafintosh"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mafintosh/xsalsa20/issues"
    },
    "homepage": "https://github.com/mafintosh/xsalsa20",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-xsalsa20-1.2.0-e5a05cb26f8cef723f94a559102ed50c1b44c25c-integrity/node_modules/xsalsa20/package.json",
    "readmeFilename": "README.md",
    "readme": "# xsalsa20\n\nXSalsa20 implemented in Javascript and WebAssembly.\n\n```\nnpm install xsalsa20\n```\n\n[![build status](https://travis-ci.org/mafintosh/xsalsa20.svg?branch=master)](https://travis-ci.org/mafintosh/xsalsa20)\n\n\n## Usage\n\n``` js\nvar crypto = require('crypto')\nvar xsalsa20 = require('xsalsa20')\nvar key = crypto.randomBytes(32)\nvar nonce = crypto.randomBytes(24)\n\nvar xor = xsalsa20(nonce, key)\n\nconsole.log(xor.update(Buffer.from('hello')))\nconsole.log(xor.update(Buffer.from('world')))\n\nxor.finalize()\n```\n\n## API\n\n#### `var xor = xsalsa20(nonce, key)`\n\nCreate a new xor instance.\n\nNonce should be a 24 byte buffer/uint8array and key should be 32 bytes.\n\n#### `var output = xor.update(input, [output])`\n\nUpdate the xor instance with a new input buffer. Optionally you can pass in an output buffer.\n\n#### `xor.finalize()`\n\nCall this method last. Clears internal state.\n\n## Contributing\n\nThe bulk of this module is implemented in WebAssembly in the [xsalsa20.wat](xsalsa20.wat) file. To build the thin Javascript wrapper do:\n\n```\nnpm run compile\n```\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Mathias Buus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/xsalsa20/-/xsalsa20-1.2.0.tgz#e5a05cb26f8cef723f94a559102ed50c1b44c25c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/xsalsa20/-/xsalsa20-1.2.0.tgz",
    "hash": "e5a05cb26f8cef723f94a559102ed50c1b44c25c",
    "integrity": "sha512-FIr/DEeoHfj7ftfylnoFt3rAIRoWXpx2AoDfrT2qD2wtp7Dp+COajvs/Icb7uHqRW9m60f5iXZwdsJJO3kvb7w==",
    "registry": "npm",
    "packageName": "xsalsa20",
    "cacheIntegrity": "sha512-FIr/DEeoHfj7ftfylnoFt3rAIRoWXpx2AoDfrT2qD2wtp7Dp+COajvs/Icb7uHqRW9m60f5iXZwdsJJO3kvb7w== sha1-5aBcsm+M73I/lKVZEC7VDBtEwlw="
  },
  "registry": "npm",
  "hash": "e5a05cb26f8cef723f94a559102ed50c1b44c25c"
}