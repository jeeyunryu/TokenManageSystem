{
  "manifest": {
    "name": "@ensdomains/ens",
    "version": "0.4.5",
    "description": "Implementations for registrars and local resolvers for the Ethereum Name Service",
    "scripts": {
      "test": "truffle test",
      "lint": "solium --dir ./contracts",
      "prepublishOnly": "truffle compile && truffle networks --clean",
      "pub": "npm run prepublishOnly && npm publish"
    },
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ensdomains/ens.git"
    },
    "author": {
      "name": "Nick Johnson",
      "email": "nick@ethereum.org"
    },
    "license": "CC0-1.0",
    "bugs": {
      "url": "https://github.com/ensdomains/ens/issues"
    },
    "homepage": "https://github.com/ensdomains/ens#readme",
    "dependencies": {
      "bluebird": "^3.5.2",
      "eth-ens-namehash": "^2.0.8",
      "solc": "^0.4.20",
      "testrpc": "0.0.1",
      "web3-utils": "^1.0.0-beta.31"
    },
    "devDependencies": {
      "@ensdomains/test-utils": "1.3.0",
      "solidity-coverage": "^0.3.5",
      "solium": "^1.0.4",
      "truffle": "5.0.19"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@ensdomains-ens-0.4.5-e0aebc005afdc066447c6e22feb4eda89a5edbfc-integrity/node_modules/@ensdomains/ens/package.json",
    "readmeFilename": "README.md",
    "readme": "# ENS\n\n[![Build Status](https://travis-ci.org/ensdomains/ens.svg?branch=master)](https://travis-ci.org/ensdomains/ens)\n\nImplementations for registrars and local resolvers for the Ethereum Name Service.\n\nFor documentation of the ENS system, see [docs.ens.domains](https://docs.ens.domains/).\n\nTo run unit tests, clone this repository, and run:\n\n    $ npm install\n    $ npm test\n\n# npm package\n\nThis repo doubles as an npm package with the compiled JSON contracts\n\n```js\nimport {\n  Deed,\n  DeedImplementation,\n  ENS,\n  ENSRegistry,\n  FIFSRegistrar,\n  HashRegistrar,\n  Migrations,\n  Registrar,\n  ReverseRegistrar,\n  TestRegistrar\n} from '@ensdomains/ens'\n```\n\n## ENSRegistry.sol\n\nImplementation of the ENS Registry, the central contract used to look up resolvers and owners for domains.\n\n## FIFSRegistrar.sol\n\nImplementation of a simple first-in-first-served registrar, which issues (sub-)domains to the first account to request them.\n\n## HashRegistrar.sol\n\nImplementation of a registrar based on second-price blind auctions and funds held on deposit, with a renewal process that weights renewal costs according to the change in mean price of registering a domain. Largely untested!\n\n## HashRegistrarSimplified.sol\n\nSimplified version of the above, with no support for renewals. This is the current proposal for interim registrar of the ENS system until a permanent registrar is decided on.\n\n# ENS Registry interface\n\nThe ENS registry is a single central contract that provides a mapping from domain names to owners and resolvers, as described in [EIP 137](https://github.com/ethereum/EIPs/issues/137).\n\nThe ENS operates on 'nodes' instead of human-readable names; a human readable name is converted to a node using the namehash algorithm, which is as follows:\n\n    def namehash(name):\n      if name == '':\n        return '\\0' * 32\n      else:\n        label, _, remainder = name.partition('.')\n        return sha3(namehash(remainder) + sha3(label))\n\nThe registry's interface is as follows:\n\n## owner(bytes32 node) constant returns (address)\n\nReturns the owner of the specified node.\n\n## resolver(bytes32 node) constant returns (address)\n\nReturns the resolver for the specified node.\n\n## setOwner(bytes32 node, address owner)\n\nUpdates the owner of a node. Only the current owner may call this function.\n\n## setSubnodeOwner(bytes32 node, bytes32 label, address owner)\n\nUpdates the owner of a subnode. For instance, the owner of \"foo.com\" may change the owner of \"bar.foo.com\" by calling `setSubnodeOwner(namehash(\"foo.com\"), sha3(\"bar\"), newowner)`. Only callable by the owner of `node`.\n\n## setResolver(bytes32 node, address resolver)\n\nSets the resolver address for the specified node.\n\n# Resolvers\n\nResolvers can be found in the resolver specific [repository](https://github.com/ensdomains/resolvers).\n\n# Generating LLL ABI and binary data\n\nENS.lll.bin was generated with the following command, using the lllc packaged with Solidity 0.4.4:\n\n    $ lllc ENS.lll > ENS.lll.bin\n\nThe files in the abi directory were generated with the following command:\n\n    $ solc --abi -o abi AbstractENS.sol FIFSRegistrar.sol HashRegistrarSimplified.sol\n\n# Getting started\n\nInstall Truffle\n\n    $ npm install -g truffle\n\nLaunch the RPC client, for example TestRPC:\n\n    $ testrpc\n\nDeploy `ENS` and `FIFSRegistrar` to the private network, the deployment process is defined at [here](migrations/2_deploy_contracts.js):\n\n    $ truffle migrate --network dev.fifs\n\nalternatively, deploy the `HashRegistrar`:\n\n    $ truffle migrate --network dev.auction\n\nCheck the truffle [documentation](http://truffleframework.com/docs/) for more information.\n",
    "licenseText": "BSD 2-Clause License\n\nCopyright (c) 2018, True Names Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@ensdomains/ens/-/ens-0.4.5.tgz#e0aebc005afdc066447c6e22feb4eda89a5edbfc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@ensdomains/ens/-/ens-0.4.5.tgz",
    "hash": "e0aebc005afdc066447c6e22feb4eda89a5edbfc",
    "integrity": "sha512-JSvpj1iNMFjK6K+uVl4unqMoa9rf5jopb8cya5UGBWz23Nw8hSNT7efgUx4BTlAPAgpNlEioUfeTyQ6J9ZvTVw==",
    "registry": "npm",
    "packageName": "@ensdomains/ens",
    "cacheIntegrity": "sha512-JSvpj1iNMFjK6K+uVl4unqMoa9rf5jopb8cya5UGBWz23Nw8hSNT7efgUx4BTlAPAgpNlEioUfeTyQ6J9ZvTVw== sha1-4K68AFr9wGZEfG4i/rTtqJpe2/w="
  },
  "registry": "npm",
  "hash": "e0aebc005afdc066447c6e22feb4eda89a5edbfc"
}