{
  "manifest": {
    "name": "stream-to-it",
    "version": "0.2.4",
    "description": "Convert Node.js streams to streaming iterables",
    "main": "index.js",
    "files": [
      "duplex.js",
      "sink.js",
      "source.js",
      "transform.js"
    ],
    "scripts": {
      "test": "ava test/*.test.js --verbose",
      "lint": "standard",
      "coverage": "nyc --reporter=text --reporter=lcov npm test"
    },
    "keywords": [
      "stream",
      "readablestream",
      "iterable",
      "iterator",
      "async"
    ],
    "author": {
      "name": "Alan Shaw"
    },
    "license": "MIT",
    "dependencies": {
      "get-iterator": "^1.0.2"
    },
    "devDependencies": {
      "ava": "^3.10.1",
      "bl": "^5.0.0",
      "delay": "^5.0.0",
      "it-pipe": "^1.1.0",
      "nyc": "^15.1.0",
      "p-fifo": "^1.0.0",
      "standard": "^16.0.3",
      "streaming-iterables": "^6.0.0"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/alanshaw/stream-to-it.git"
    },
    "bugs": {
      "url": "https://github.com/alanshaw/stream-to-it/issues"
    },
    "homepage": "https://github.com/alanshaw/stream-to-it#readme",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-stream-to-it-0.2.4-integrity/node_modules/stream-to-it/package.json",
    "readmeFilename": "README.md",
    "readme": "# stream-to-it\n\n[![Build Status](https://travis-ci.org/alanshaw/stream-to-it.svg?branch=master)](https://travis-ci.org/alanshaw/stream-to-it)\n[![dependencies Status](https://status.david-dm.org/gh/alanshaw/stream-to-it.svg)](https://david-dm.org/alanshaw/stream-to-it)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> Convert Node.js streams to streaming iterables\n\n## Install\n\n```sh\nnpm i stream-to-it\n```\n\n## Usage\n\n```js\nconst toIterable = require('stream-to-it')\n```\n\n### Convert readable stream to source iterable\n\n```js\nconst readable = fs.createReadStream('/path/to/file')\n// Node.js streams are already async iterable so this is just s => s\nconst source = toIterable.source(readable)\n\nfor await (const chunk of source) {\n  console.log(chunk.toString())\n}\n```\n\nAlso works with browser [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream):\n\n```js\nconst res = fetch('http://example.org/file.jpg')\n\nfor await (const chunk of toIterable.source(res.body)) {\n  console.log(chunk.toString())\n}\n```\n\n### Convert writable stream to sink iterable\n\n```js\nconst pipe = require('it-pipe')\n\nconst source = [Buffer.from('Hello '), Buffer.from('World!')]\nconst sink = toIterable.sink(fs.createWriteStream('/path/to/file'))\n\nawait pipe(source, sink)\n```\n\n### Convert transform stream to transform iterable\n\n```js\nconst { Transform } = require('stream')\n\nconst output = await pipe(\n  [true, false, true, true],\n  toIterable.transform(new Transform({ // Inverter transform :)\n    transform (chunk, enc, cb) {\n      cb(null, !chunk)\n    }\n  })),\n  // Collect and return the chunks\n  source => {\n    const chunks = []\n    for await (chunk of source) chunks.push(chunk)\n    return chunks\n  }\n)\n\nconsole.log(output) // [ false, true, false, false ]\n```\n\n## API\n\n```js\nconst toIterable = require('stream-to-it')\n```\n\n### `toIterable.source(readable): Function`\n\nConvert a [`Readable`](https://nodejs.org/dist/latest/docs/api/stream.html#stream_readable_streams) stream or a browser [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream) to a [source](https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#source-it) iterable.\n\n### `toIterable.sink(writable): Function`\n\nConvert a [`Writable`](https://nodejs.org/dist/latest/docs/api/stream.html#stream_writable_streams) stream to a [sink](https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#sink-it) iterable.\n\n### `toIterable.transform(transform): Function`\n\nConvert a [`Transform`](https://nodejs.org/dist/latest/docs/api/stream.html#stream_duplex_and_transform_streams) stream to a [transform](https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#transform-it) iterable.\n\n### `toIterable.duplex(duplex): { sink: Function, source: Function }`\n\nConvert a [`Duplex`](https://nodejs.org/dist/latest/docs/api/stream.html#stream_duplex_and_transform_streams) stream to a [duplex](https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#duplex-it) iterable.\n\n## Related\n\n* [`it-to-stream`](https://www.npmjs.com/package/it-to-stream) Convert streaming iterables to Node.js streams\n* [`it-pipe`](https://www.npmjs.com/package/it-pipe) Utility to \"pipe\" async iterables together\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/alanshaw/stream-to-it/issues/new) or submit PRs.\n\n## License\n\n[MIT](LICENSE) Â© Alan Shaw\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Alan Shaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/stream-to-it/-/stream-to-it-0.2.4.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/stream-to-it/-/stream-to-it-0.2.4.tgz",
    "hash": "",
    "integrity": "sha512-4vEbkSs83OahpmBybNJXlJd7d6/RxzkkSdT3I0mnGt79Xd2Kk+e1JqbvAvsQfCeKj3aKb0QIWkyK3/n0j506vQ==",
    "registry": "npm",
    "packageName": "stream-to-it",
    "cacheIntegrity": "sha512-4vEbkSs83OahpmBybNJXlJd7d6/RxzkkSdT3I0mnGt79Xd2Kk+e1JqbvAvsQfCeKj3aKb0QIWkyK3/n0j506vQ== sha1-0v17+9SombTA1qfmpTNyOvV0m9A="
  },
  "registry": "npm",
  "hash": "e2f11b912b3cdce6a1a660726cd25794977b77afd1c7392449d4f72349a71adefd5ddd8a93e7b526a6ef02fb107c278a8f768a6f44085a4c8adff9f48f9d3abd"
}