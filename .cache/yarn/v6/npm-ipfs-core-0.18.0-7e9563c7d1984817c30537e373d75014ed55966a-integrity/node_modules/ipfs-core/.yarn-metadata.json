{
  "manifest": {
    "name": "ipfs-core",
    "version": "0.18.0",
    "description": "JavaScript implementation of the IPFS specification",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-core#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-ipfs.git"
    },
    "bugs": {
      "url": "https://github.com/ipfs/js-ipfs/issues"
    },
    "keywords": [
      "IPFS"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./src/index.js"
      },
      "./config/profiles": {
        "types": "./src/components/config/profiles.d.ts",
        "import": "./src/components/config/profiles.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "scripts": {
      "build": "aegir build",
      "prepublishOnly": "node scripts/update-version.js",
      "lint": "aegir lint",
      "test": "aegir test",
      "test:node": "aegir test -t node --cov",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:electron-main": "aegir test -t electron-main",
      "test:bootstrapers": "IPFS_TEST=bootstrapers aegir test -t browser -f test/bootstrappers.js",
      "clean": "aegir clean",
      "dep-check": "aegir dep-check -i interface-ipfs-core -i ipfs-core-types --i interface-blockstore -i @libp2p/interface-dht -i @libp2p/interface-keys -i @libp2p/interface-transport -i @libp2p/interfaces"
    },
    "dependencies": {
      "@chainsafe/libp2p-noise": "^11.0.0",
      "@ipld/car": "^5.0.0",
      "@ipld/dag-cbor": "^9.0.0",
      "@ipld/dag-json": "^10.0.0",
      "@ipld/dag-pb": "^4.0.0",
      "@libp2p/bootstrap": "^6.0.0",
      "@libp2p/crypto": "^1.0.0",
      "@libp2p/delegated-content-routing": "^4.0.0",
      "@libp2p/delegated-peer-routing": "^4.0.0",
      "@libp2p/interface-dht": "^2.0.0",
      "@libp2p/interface-keys": "^1.0.6",
      "@libp2p/interface-peer-id": "^2.0.0",
      "@libp2p/interface-transport": "^2.1.0",
      "@libp2p/interfaces": "^3.2.0",
      "@libp2p/kad-dht": "^7.0.0",
      "@libp2p/logger": "^2.0.5",
      "@libp2p/mplex": "^7.1.1",
      "@libp2p/peer-id": "^2.0.0",
      "@libp2p/peer-id-factory": "^2.0.0",
      "@libp2p/record": "^3.0.0",
      "@libp2p/websockets": "^5.0.0",
      "@multiformats/mafmt": "^11.0.2",
      "@multiformats/multiaddr": "^11.1.5",
      "@multiformats/multiaddr-to-uri": "^9.0.1",
      "@multiformats/murmur3": "^2.0.0",
      "any-signal": "^3.0.0",
      "array-shuffle": "^3.0.0",
      "blockstore-core": "^3.0.0",
      "browser-readablestream-to-it": "^2.0.0",
      "dag-jose": "^4.0.0",
      "datastore-core": "^8.0.1",
      "datastore-pubsub": "^7.0.0",
      "dlv": "^1.1.3",
      "err-code": "^3.0.1",
      "hamt-sharding": "^3.0.0",
      "hashlru": "^2.3.0",
      "interface-blockstore": "^4.0.0",
      "interface-datastore": "^7.0.0",
      "ipfs-bitswap": "^15.0.0",
      "ipfs-core-config": "^0.7.0",
      "ipfs-core-types": "^0.14.0",
      "ipfs-core-utils": "^0.18.0",
      "ipfs-http-client": "^60.0.0",
      "ipfs-repo": "^17.0.0",
      "ipfs-unixfs": "^9.0.0",
      "ipfs-unixfs-exporter": "^10.0.0",
      "ipfs-unixfs-importer": "^12.0.0",
      "ipfs-utils": "^9.0.9",
      "ipns": "^5.0.1",
      "is-domain-name": "^1.0.1",
      "is-ipfs": "^8.0.0",
      "it-drain": "^2.0.0",
      "it-filter": "^2.0.0",
      "it-first": "^2.0.0",
      "it-last": "^2.0.0",
      "it-map": "^2.0.0",
      "it-merge": "^2.0.0",
      "it-parallel": "^3.0.0",
      "it-peekable": "^2.0.0",
      "it-pipe": "^2.0.3",
      "it-pushable": "^3.0.0",
      "it-tar": "^6.0.0",
      "it-to-buffer": "^3.0.0",
      "just-safe-set": "^4.0.2",
      "libp2p": "^0.42.0",
      "merge-options": "^3.0.4",
      "mortice": "^3.0.0",
      "multiformats": "^11.0.0",
      "pako": "^2.0.4",
      "parse-duration": "^1.0.0",
      "timeout-abort-controller": "^3.0.0",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "@chainsafe/libp2p-gossipsub": "^6.0.0",
      "@types/dlv": "^1.1.2",
      "@types/pako": "^2.0.0",
      "@types/rimraf": "^3.0.1",
      "aegir": "^37.11.0",
      "blockstore-datastore-adapter": "^5.0.0",
      "delay": "^5.0.0",
      "go-ipfs": "^0.12.0",
      "interface-blockstore-tests": "^4.0.0",
      "interface-ipfs-core": "^0.158.0",
      "ipfsd-ctl": "^12.0.3",
      "iso-url": "^1.0.0",
      "it-all": "^2.0.0",
      "nanoid": "^4.0.0",
      "p-defer": "^4.0.0",
      "rimraf": "^3.0.2",
      "sinon": "^15.0.1"
    },
    "gitHead": "",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-ipfs-core-0.18.0-7e9563c7d1984817c30537e373d75014ed55966a-integrity/node_modules/ipfs-core/package.json",
    "readmeFilename": "README.md",
    "readme": "# ipfs-core <!-- omit in toc -->\n\n[![ipfs.io](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io)\n[![IRC](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Discord](https://img.shields.io/discord/806902334369824788?style=flat-square)](https://discord.gg/ipfs)\n[![codecov](https://img.shields.io/codecov/c/github/ipfs/js-ipfs.svg?style=flat-square)](https://codecov.io/gh/ipfs/js-ipfs)\n[![CI](https://img.shields.io/github/workflow/status/ipfs/js-ipfs/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/ipfs/js-ipfs/actions/workflows/js-test-and-release.yml)\n\n> JavaScript implementation of the IPFS specification\n\n## Table of contents <!-- omit in toc -->\n\n- - [Install](#install)\n- [ipfs-core <!-- omit in toc -->](#ipfs-core----omit-in-toc---)\n  - [Getting Started](#getting-started)\n  - [Next Steps](#next-steps)\n    - [Browser CDN](#browser-cdn)\n    - [Browser bundle](#browser-bundle)\n  - [Want to hack on IPFS?](#want-to-hack-on-ipfs)\n  - [License](#license)\n  - [Contribute](#contribute)\n\n## Install\n\n```console\n$ npm i ipfs-core\n```\n\n<p align=\"center\">\n<a href=\"https://js.ipfs.io\" title=\"JS IPFS\">\n  <img src=\"https://ipfs.io/ipfs/Qme6KJdKcp85TYbLxuLV7oQzMiLremD7HMoXLZEmgo6Rnh/js-ipfs-sticker.png\" alt=\"IPFS in JavaScript logo\" width=\"244\" />\n</a>\n</p>\n\n<h3 align=\"center\">The JavaScript implementation of the IPFS protocol</h3>\n\n<p align=\"center\">\n<a href=\"https://github.com/ipfs/js-ipfs/tree/master/packages/interface-ipfs-core\"><img src=\"https://img.shields.io/badge/interface--ipfs--core-API%20Docs-blue.svg\"></a>\n<a href=\"https://travis-ci.com/ipfs/js-ipfs?branch=master\"><img src=\"https://badgen.net/travis/ipfs/js-ipfs?branch=master\" /></a>\n<a href=\"https://codecov.io/gh/ipfs/js-ipfs\"><img src=\"https://badgen.net/codecov/c/github/ipfs/js-ipfs\" /></a>\n<a href=\"https://bundlephobia.com/result?p=ipfs\"><img src=\"https://badgen.net/bundlephobia/minzip/ipfs\"></a>\n<a href=\"https://david-dm.org/ipfs/js-ipfs?path=packages/ipfs-core\"><img src=\"https://david-dm.org/ipfs/js-ipfs.svg?style=flat&path=packages/ipfs-core\" /></a>\n<a href=\"https://github.com/feross/standard\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat\"></a>\n<a href=\"\"><img src=\"https://img.shields.io/badge/npm-%3E%3D6.0.0-orange.svg?style=flat\" /></a>\n<a href=\"\"><img src=\"https://img.shields.io/badge/Node.js-%3E%3D10.0.0-orange.svg?style=flat\" /></a>\n<a href=\"https://www.npmjs.com/package/ipfs\"><img src=\"https://img.shields.io/npm/dm/ipfs.svg\" /></a>\n<a href=\"https://www.jsdelivr.com/package/npm/ipfs\"><img src=\"https://data.jsdelivr.com/v1/package/npm/ipfs/badge\"/></a>\n<br>\n</p>\n\n# ipfs-core <!-- omit in toc -->\n\n`ipfs-core` is the implementation of the IPFS Core API written in JavaScript without depending on other languages/implementations. It contains all you need to integrate IPFS into your application.\n\nIf you want to run IPFS as a standalone daemon process, see the [ipfs](https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs) module.\n\n## Getting Started\n\nThe `ipfs-core` package contains all the features of `ipfs` but in a lighter package without the CLI or HTTP servers:\n\n```console\n$ npm install ipfs-core\n```\n\nThen start a node in your app:\n\n```javascript\nimport * as IPFS from 'ipfs-core'\n\nconst ipfs = await IPFS.create()\nconst { cid } = await ipfs.add('Hello world')\nconsole.info(cid)\n// QmXXY5ZxbtuYj6DnfApLiGstzPN7fvSyigrRee3hDWPCaf\n```\n\n## Next Steps\n\n- Look into the [js-ipfs-examples](https://github.com/ipfs-examples/js-ipfs-examples) to learn how to spawn an IPFS node in Node.js and in the Browser\n- Read the [Core API docs](https://github.com/ipfs/js-ipfs/tree/master/docs/core-api) to see what you can do with an IPFS node\n- Head over to <https://proto.school> to take interactive tutorials that cover core IPFS APIs\n- Check out <https://docs.ipfs.io> for tips, how-tos and more\n- See <https://blog.ipfs.io> for news and more\n- Need help? Please ask 'How do I?' questions on <https://discuss.ipfs.io>\n\n### Browser CDN\n\nYou can load IPFS right in your browser by adding the following to your page using the super fast [jsdelivr](https://www.jsdelivr.com) CDN:\n\n```html\n<!-- loading the minified version using jsDelivr -->\n<script src=\"https://cdn.jsdelivr.net/npm/ipfs-core/dist/index.min.js\"></script>\n\n<!-- loading the human-readable (not minified) version jsDelivr -->\n<script src=\"https://cdn.jsdelivr.net/npm/ipfs-core/dist/index.min.js\"></script>\n```\n\nInserting one of the above lines will make an `IpfsCore` object available in the global namespace:\n\n```html\n<script>\nasync function main () {\nconst node = await window.IpfsCore.create()\n// Ready to use!\n// See https://github.com/ipfs/js-ipfs#core-api\n}\nmain()\n</script>\n```\n\n### Browser bundle\n\nLearn how to bundle IPFS into your application with webpack, parceljs and browserify in the [examples](https://github.com/ipfs/js-ipfs/tree/master/examples).\n\n## Want to hack on IPFS?\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n\nThe IPFS implementation in JavaScript needs your help!  There are a few things you can do right now to help out:\n\nRead the [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md) and [JavaScript Contributing Guidelines](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md).\n\n- **Check out existing issues** The [issue list](https://github.com/ipfs/js-ipfs/issues) has many that are marked as ['help wanted'](https://github.com/ipfs/js-ipfs/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22help+wanted%22) or ['difficulty:easy'](https://github.com/ipfs/js-ipfs/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Adifficulty%3Aeasy) which make great starting points for development, many of which can be tackled with no prior IPFS knowledge\n- **Perform code reviews** More eyes will help\n  a. speed the project along\n  b. ensure quality, and\n  c. reduce possible future bugs.\n- **Add tests**. There can never be enough tests.\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nContributions welcome! Please check out [the issues](https://github.com/ipfs/js-ipfs/issues).\n\nAlso see our [contributing document](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md) for more information on how we work, and about contributing in general.\n\nPlease be aware that all interactions related to this repo are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ipfs-core/-/ipfs-core-0.18.0.tgz#7e9563c7d1984817c30537e373d75014ed55966a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ipfs-core/-/ipfs-core-0.18.0.tgz",
    "hash": "7e9563c7d1984817c30537e373d75014ed55966a",
    "integrity": "sha512-VkBTXT77pRFN0/mQ3OB6PmTlRIA2rKRjRZ4Tgh+pWwzAZiTj6Qz/TLO862vKflncOWG7Znq6oYxW1GQdhx1dbg==",
    "registry": "npm",
    "packageName": "ipfs-core",
    "cacheIntegrity": "sha512-VkBTXT77pRFN0/mQ3OB6PmTlRIA2rKRjRZ4Tgh+pWwzAZiTj6Qz/TLO862vKflncOWG7Znq6oYxW1GQdhx1dbg== sha1-fpVjx9GYSBfDBTfjc9dQFO1Vlmo="
  },
  "registry": "npm",
  "hash": "7e9563c7d1984817c30537e373d75014ed55966a"
}