{
  "manifest": {
    "name": "it-parallel-batch",
    "version": "1.0.11",
    "description": "Takes an async iterator that emits promise-returning functions, invokes them in parallel and emits the results in the same order as the input",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/achingbrain/it.git"
    },
    "homepage": "https://github.com/achingbrain/it/tree/master/packages/it-parallel-batch#readme",
    "bugs": {
      "url": "https://github.com/achingbrain/it/issues"
    },
    "scripts": {
      "test": "ava",
      "lint": "standard",
      "coverage": "nyc --reporter html --reporter lcov ava",
      "clean": "rm -rf .nyc_output coverage dist",
      "check": "npm run build:dep:types && tsc --noEmit",
      "build": "npm run build:types",
      "build:dep:types": "cd node_modules/it-batch && npm run build:types",
      "build:types": "npm run build:dep:types && tsc --emitDeclarationOnly --declarationDir dist",
      "prepublishOnly": "npm run build"
    },
    "author": {
      "name": "Alex Potsides",
      "email": "alex@achingbrain.net"
    },
    "license": "ISC",
    "devDependencies": {
      "ava": "^3.12.1",
      "delay": "^4.3.0",
      "it-all": "^1.0.6",
      "nyc": "^15.1.0",
      "standard": "^16.0.3",
      "typescript": "^4.0.2"
    },
    "dependencies": {
      "it-batch": "^1.0.9"
    },
    "typesVersions": {
      "*": {
        "*": [
          ".",
          "dist/*"
        ]
      }
    },
    "gitHead": "b621056a11c9bfe991d1040b22a46651fa907a3c",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-it-parallel-batch-1.0.11-f889b4e1c7a62ef24111dbafbaaa010b33d00f69-integrity/node_modules/it-parallel-batch/package.json",
    "readmeFilename": "README.md",
    "readme": "# it-parallel-batch\n\n[![Build status](https://github.com/achingbrain/it/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/achingbrain/it/actions/workflows/test.yml) [![Coverage Status](https://coveralls.io/repos/github/achingbrain/it/badge.svg?branch=master)](https://coveralls.io/github/achingbrain/it?branch=master) [![Dependencies Status](https://david-dm.org/achingbrain/it/status.svg?path=packages/it-parallel-batch)](https://david-dm.org/achingbrain/it?path=packages/it-parallel-batch)\n\n> Takes an (async) iterable that emits promise-returning functions, invokes them in parallel and emits the results as they become available but in the same order as the input\n\nThe final batch may be smaller than the batch size.\n\n## Install\n\n```sh\n$ npm install --save it-parallel-batch\n```\n\n## Usage\n\n```javascript\nconst parallelBatch = require('it-parallel-batch')\nconst all = require('it-all')\nconst delay = require('delay')\n\n// This can also be an iterator, async iterator, generator, etc\nconst input = [\n  async () => {\n    await delay(500)\n\n    return 1\n  },\n  async () => {\n    await delay(200)\n\n    return 2\n  },\n  async () => {\n    await delay(100)\n\n    return 3\n  }\n]\n\nconst batchSize = 2\n\nconst result = await all(parallelBatch(input, batchSize))\n\nconsole.info(result) // [1, 2, 3]\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/it-parallel-batch/-/it-parallel-batch-1.0.11.tgz#f889b4e1c7a62ef24111dbafbaaa010b33d00f69",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/it-parallel-batch/-/it-parallel-batch-1.0.11.tgz",
    "hash": "f889b4e1c7a62ef24111dbafbaaa010b33d00f69",
    "integrity": "sha512-UWsWHv/kqBpMRmyZJzlmZeoAMA0F3SZr08FBdbhtbe+MtoEBgr/ZUAKrnenhXCBrsopy76QjRH2K/V8kNdupbQ==",
    "registry": "npm",
    "packageName": "it-parallel-batch",
    "cacheIntegrity": "sha512-UWsWHv/kqBpMRmyZJzlmZeoAMA0F3SZr08FBdbhtbe+MtoEBgr/ZUAKrnenhXCBrsopy76QjRH2K/V8kNdupbQ== sha1-+Im04cemLvJBEduvuqoBCzPQD2k="
  },
  "registry": "npm",
  "hash": "f889b4e1c7a62ef24111dbafbaaa010b33d00f69"
}