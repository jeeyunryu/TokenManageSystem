{
  "manifest": {
    "name": "@multiformats/multiaddr-to-uri",
    "version": "9.0.4",
    "description": "Convert a Multiaddr to a URI /dnsaddr/ipfs.io/http -> http://ipfs.io",
    "author": {
      "name": "Alan Shaw"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/multiformats/js-multiaddr-to-uri#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/multiformats/js-multiaddr-to-uri.git"
    },
    "bugs": {
      "url": "https://github.com/multiformats/js-multiaddr-to-uri/issues"
    },
    "keywords": [
      "URL",
      "multiaddr",
      "toString"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "generate": "protons src/pb/peer.proto src/pb/tags.proto",
      "build": "aegir build",
      "test": "aegir test",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:node": "aegir test -t node --cov",
      "test:electron-main": "aegir test -t electron-main",
      "release": "aegir release",
      "docs": "aegir docs"
    },
    "dependencies": {
      "@multiformats/multiaddr": "^12.0.0"
    },
    "devDependencies": {
      "aegir": "^38.1.7"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@multiformats-multiaddr-to-uri-9.0.4-d739e1bfed8d060553f2b63aaedeba26b017efce-integrity/node_modules/@multiformats/multiaddr-to-uri/package.json",
    "readmeFilename": "README.md",
    "readme": "# @multiformats/multiaddr-to-uri <!-- omit in toc -->\n\n[![multiformats.io](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://multiformats.io)\n[![codecov](https://img.shields.io/codecov/c/github/multiformats/js-multiaddr-to-uri.svg?style=flat-square)](https://codecov.io/gh/multiformats/js-multiaddr-to-uri)\n[![CI](https://img.shields.io/github/actions/workflow/status/multiformats/js-multiaddr-to-uri/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/multiformats/js-multiaddr-to-uri/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> Convert a Multiaddr to a URI /dnsaddr/ipfs.io/http -> <http://ipfs.io>\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n  - [Browser `<script>` tag](#browser-script-tag)\n- [Usage](#usage)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribution](#contribution)\n\n## Install\n\n```console\n$ npm i @multiformats/multiaddr-to-uri\n```\n\n### Browser `<script>` tag\n\nLoading this module through a script tag will make it's exports available as `MultiformatsMultiaddrToUri` in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/@multiformats/multiaddr-to-uri/dist/index.min.js\"></script>\n```\n\n## Usage\n\n```js\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\nconsole.log(multiaddrToUri('/dnsaddr/protocol.ai/https'))\n// -> https://protocol.ai\n\nconsole.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080'))\n// -> http://127.0.0.1:8080\n\nconsole.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080', { assumeHttp: false }))\n// -> tcp://127.0.0.1:8080\n```\n\nNote:\n\n- When `/tcp` is the last (terminating) protocol HTTP is assumed by default (implicit `assumeHttp: true`)\n  - this means produced URIs will start with `http://` instead of `tcp://`\n  - passing `{ assumeHttp: false }` disables this behavior\n- Might be lossy - e.g. a DNSv6 multiaddr\n- Can throw if the passed multiaddr:\n  - is not a valid multiaddr\n  - is not supported as a URI e.g. circuit\n\n## API Docs\n\n- <https://multiformats.github.io/js-multiaddr-to-uri>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@multiformats/multiaddr-to-uri/-/multiaddr-to-uri-9.0.4.tgz#d739e1bfed8d060553f2b63aaedeba26b017efce",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@multiformats/multiaddr-to-uri/-/multiaddr-to-uri-9.0.4.tgz",
    "hash": "d739e1bfed8d060553f2b63aaedeba26b017efce",
    "integrity": "sha512-y2XDH/h6U1hnkFNyt3NeJhUv+9PiXJlzC6RZOOzK2OY3JgM6l6RrPrOJ1Tc2Sn4Aw6b2aUKY4C6nN4h6j9/+Vg==",
    "registry": "npm",
    "packageName": "@multiformats/multiaddr-to-uri",
    "cacheIntegrity": "sha512-y2XDH/h6U1hnkFNyt3NeJhUv+9PiXJlzC6RZOOzK2OY3JgM6l6RrPrOJ1Tc2Sn4Aw6b2aUKY4C6nN4h6j9/+Vg== sha1-1znhv+2NBgVT8rY6rt66JrAX784="
  },
  "registry": "npm",
  "hash": "d739e1bfed8d060553f2b63aaedeba26b017efce"
}