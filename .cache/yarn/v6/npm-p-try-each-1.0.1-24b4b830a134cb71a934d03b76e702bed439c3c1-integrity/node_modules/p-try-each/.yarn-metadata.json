{
  "manifest": {
    "name": "p-try-each",
    "version": "1.0.1",
    "description": "Runs promise-returning functions in series but stops whenever any of the functions were successful",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "scripts": {
      "build": "tsc",
      "format": "prettier --write \"src/**/*.ts\" \"src/**/*.js\"",
      "lint": "tslint -p tsconfig.json",
      "test": "jest --config jestconfig.json",
      "prepare": "npm run build",
      "prepublishOnly": "npm test && npm run lint",
      "preversion": "npm run lint",
      "version": "npm run format && git add -A src",
      "postversion": "git push && git push --tags"
    },
    "files": [
      "lib/**/*"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/PedroMiguelSS/p-try-each.git"
    },
    "keywords": [
      "sequential",
      "promises",
      "promise",
      "series",
      "async",
      "await",
      "array",
      "tasks"
    ],
    "author": {},
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/PedroMiguelSS/p-try-each/issues"
    },
    "homepage": "https://github.com/PedroMiguelSS/p-try-each#readme",
    "devDependencies": {
      "@types/jest": "^24.0.18",
      "jest": "^24.9.0",
      "prettier": "^1.18.2",
      "ts-jest": "^24.1.0",
      "tslint": "^5.20.0",
      "tslint-config-prettier": "^1.18.0",
      "typescript": "^3.6.4"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-p-try-each-1.0.1-24b4b830a134cb71a934d03b76e702bed439c3c1-integrity/node_modules/p-try-each/package.json",
    "readmeFilename": "README.md",
    "readme": "# p-try-each [![Build Status](https://travis-ci.org/PedroMiguelSS/p-try-each.svg?branch=master)](https://travis-ci.org/PedroMiguelSS/p-try-each)\n\n> Runs promise-returning functions in series but stops whenever any of the functions were successful. If all functions reject, the promise will be rejected with the error of the final task\n\nSimilar to [`async/tryEach`](https://caolan.github.io/async/v3/docs.html#tryEach).\n\n## Install\n\n```\nnpm install --save p-try-each\n```\n\n## Usage\n\n```js\nconst pTryEach = require('p-try-each');\n\nconst tasks = [\n  () => Promise.resolve('foo'),\n  () => Promise.resolve('bar'),\n  () => Promise.resolve('baz')\n]\n\n(async () => {\n  const res = await pTryEach(tasks);\n  console.log(res);\n  // Logs:\n  // 'foo'\n})();\n```\n\n## API\n\n### pTryEach(tasks)\n\nReturns a `Promise` that is fulfilled with the value of the first fulfilled promise returned from calling the functions in `tasks`. If none is fulfilled, the promise will be rejected with the error of the final task.\n\n#### tasks\n\nType: `Iterable<Function>`\n\nFunctions must return a value. In case of a returned promise, it will be awaited before starting with the next task.\n\n## License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Pedro Santos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/p-try-each/-/p-try-each-1.0.1.tgz#24b4b830a134cb71a934d03b76e702bed439c3c1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/p-try-each/-/p-try-each-1.0.1.tgz",
    "hash": "24b4b830a134cb71a934d03b76e702bed439c3c1",
    "integrity": "sha512-WyUjRAvK4CG9DUW21ZsNYcBj6guN7pgZAOFR8mUtyNXyPC5WUo3L48nxI5TsGEZ+VJhZXzyeH/Sxi2lxYcPp3A==",
    "registry": "npm",
    "packageName": "p-try-each",
    "cacheIntegrity": "sha512-WyUjRAvK4CG9DUW21ZsNYcBj6guN7pgZAOFR8mUtyNXyPC5WUo3L48nxI5TsGEZ+VJhZXzyeH/Sxi2lxYcPp3A== sha1-JLS4MKE0y3GpNNA7ducCvtQ5w8E="
  },
  "registry": "npm",
  "hash": "24b4b830a134cb71a934d03b76e702bed439c3c1"
}