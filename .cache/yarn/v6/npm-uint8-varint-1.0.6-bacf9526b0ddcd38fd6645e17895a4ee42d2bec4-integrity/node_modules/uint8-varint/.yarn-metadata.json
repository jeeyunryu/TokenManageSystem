{
  "manifest": {
    "name": "uint8-varint",
    "version": "1.0.6",
    "description": "Read/write varints from Uint8Arrays and Uint8ArrayLists",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/achingbrain/uint8-varint#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/achingbrain/uint8-varint.git"
    },
    "bugs": {
      "url": "https://github.com/achingbrain/uint8-varint/issues"
    },
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      },
      "./big": {
        "types": "./dist/src/big.d.ts",
        "import": "./dist/src/big.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "build": "aegir build",
      "test": "aegir test",
      "test:node": "aegir test -t node --cov",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:electron-main": "aegir test -t electron-main",
      "release": "aegir release",
      "docs": "aegir docs"
    },
    "dependencies": {
      "byte-access": "^1.0.0",
      "longbits": "^1.1.0",
      "uint8arraylist": "^2.0.0",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "@types/varint": "^6.0.0",
      "aegir": "^38.1.8",
      "benchmark": "^2.1.4",
      "varint": "^6.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-uint8-varint-1.0.6-bacf9526b0ddcd38fd6645e17895a4ee42d2bec4-integrity/node_modules/uint8-varint/package.json",
    "readmeFilename": "README.md",
    "readme": "# uint8-varint <!-- omit in toc -->\n\n[![codecov](https://img.shields.io/codecov/c/github/achingbrain/uint8-varint.svg?style=flat-square)](https://codecov.io/gh/achingbrain/uint8-varint)\n[![CI](https://img.shields.io/github/actions/workflow/status/achingbrain/uint8-varint/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/achingbrain/uint8-varint/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> Read/write varints from Uint8Arrays and Uint8ArrayLists\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n  - [Browser `<script>` tag](#browser-script-tag)\n- [Usage](#usage)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribution](#contribution)\n\n## Install\n\n```console\n$ npm i uint8-varint\n```\n\n### Browser `<script>` tag\n\nLoading this module through a script tag will make it's exports available as `Uint8Varint` in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/uint8-varint/dist/index.min.js\"></script>\n```\n\n## Usage\n\n```js\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport * as varint from 'uint8-varint'\n\nconst value = 12345\n\nconst buf = new Uint8ArrayList(\n  new Uint8Array(2)\n)\nvarint.signed.encode(value, buf)\n\nvarint.signed.decode(buf) // 12345\n```\n\n`BigInt`s are also supported:\n\n```js\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport * as varint from 'uint8-varint/big'\n\nconst value = 12345n\n\nconst buf = new Uint8ArrayList(\n  new Uint8Array(2)\n)\nvarint.signed.encode(value, buf)\n\nvarint.signed.decode(buf) // 12345n\n```\n\n## API Docs\n\n- <https://achingbrain.github.io/uint8-varint>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/uint8-varint/-/uint8-varint-1.0.6.tgz#bacf9526b0ddcd38fd6645e17895a4ee42d2bec4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/uint8-varint/-/uint8-varint-1.0.6.tgz",
    "hash": "bacf9526b0ddcd38fd6645e17895a4ee42d2bec4",
    "integrity": "sha512-Z0ujO4rxPwxTdLsSI5ke+bdl9hjJ1xiOakBPZeWUI/u6YBGCEGTW6b90SMlhxSGButKVPkL9fMFUDnqThQYTGg==",
    "registry": "npm",
    "packageName": "uint8-varint",
    "cacheIntegrity": "sha512-Z0ujO4rxPwxTdLsSI5ke+bdl9hjJ1xiOakBPZeWUI/u6YBGCEGTW6b90SMlhxSGButKVPkL9fMFUDnqThQYTGg== sha1-us+VJrDdzTj9ZkXheJWk7kLSvsQ="
  },
  "registry": "npm",
  "hash": "bacf9526b0ddcd38fd6645e17895a4ee42d2bec4"
}