{
  "manifest": {
    "name": "content-hash",
    "version": "2.5.2",
    "description": "simple tool to encode/decode content hash for EIP 1577 compliant ENS Resolvers",
    "main": "./src/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/pldespaigne/content-hash"
    },
    "scripts": {
      "build": "browserify ./src/index.js --s contentHash > ./dist/index.js",
      "demo": "static .",
      "deploy-demo": "echo \"surge demo https://content-hash.surge.sh\"",
      "test": "mocha",
      "lint": "npx eslint ."
    },
    "author": {
      "name": "pldespaigne"
    },
    "license": "ISC",
    "dependencies": {
      "cids": "^0.7.1",
      "multicodec": "^0.5.5",
      "multihashes": "^0.4.15"
    },
    "devDependencies": {
      "browserify": "^16.5.0",
      "chai": "^4.2.0",
      "eslint": "^5.16.0",
      "mocha": "^5.2.0",
      "node-static": "^0.7.11"
    },
    "keywords": [
      "ethereum",
      "ens",
      "eip-1577",
      "resolver",
      "ipfs",
      "swarm",
      "content-hash",
      "content",
      "hash",
      "contenthash",
      "contentHash"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-content-hash-2.5.2-bbc2655e7c21f14fd3bfc7b7d4bfe6e454c9e211-integrity/node_modules/content-hash/package.json",
    "readmeFilename": "README.md",
    "readme": "\n\n# content-hash\n\n[![npm package](https://img.shields.io/npm/v/content-hash.svg)](https://www.npmjs.com/package/content-hash)[![CircleCI](https://circleci.com/gh/pldespaigne/content-hash.svg?style=svg)](https://circleci.com/gh/pldespaigne/content-hash)![licence](https://img.shields.io/npm/l/content-hash.svg)[![Gitter chat](https://badges.gitter.im/content-hash/lobby.png)](https://gitter.im/content-hash/lobby)[![Beerpay](https://beerpay.io/pldespaigne/content-hash/badge.svg)](https://beerpay.io/pldespaigne/content-hash)\n\n>This is a simple package made for encoding and decoding content hashes as specified in the [EIP 1577](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md).\nThis package will be useful for every [Ethereum](https://www.ethereum.org/) developer wanting to interact with [EIP 1577](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md) compliant [ENS resolvers](http://docs.ens.domains/en/latest/introduction.html).\n\nHere you can find a [live demo](https://content-hash.surge.sh/) of this package.\n* link to [npm](https://www.npmjs.com/package/content-hash)\n* link to [Github](https://github.com/pldespaigne/content-hash)\n\n## 🔠 Supported Codec\n- `swarm-ns`\n- `ipfs-ns`\n- `ipns-ns`\n- Every other codec supported by [multicodec](https://github.com/multiformats/multicodec) will be encoded by default in `utf-8`.\n> You can see the full list of codec supported [here](https://github.com/multiformats/multicodec/blob/master/table.csv)\n\n## 📥 Install\n* via **npm** :\n\t```bash\n\t$> npm install content-hash\n\t```\n* via **Github** : Download or clone this repo, then install the dependencies.\n\t```bash\n\t$> git clone https://github.com/pldespaigne/content-hash.git\n\t$> cd content-hash\n\t$> npm install\n\t```\n> For browser only usage, installation is not required.\n\n## 🛠 Usage\nImport the module in order to use it :\n* **NodeJS** :\n\t```javascript\n\tconst contentHash = require('content-hash')\n\t```\n* **Browser** :\n\t```html\n\t<!--From CDN-->\n\t<script type=\"text/javascript\" src=\"https://unpkg.com/content-hash/dist/index.js\"></script>\n\n\t<!--From local module-->\n\t<script type=\"text/javascript\" src=\"path/to/dist/index.js\"></script>\n\t```\n> To rebuild the browser version of the package run `npm run build` into the root folder. Don't forget to also run `npm run lint` and `npm test` before building !\n\n## 📕 API\n\n> All hex string **inputs** can be prefixed with `0x`, but it's **not mandatory**.\n\n> ⚠️ All **outputs** are **NOT** prefixed with `0x`\n\n### contentHash.decode( contentHash ) -> string\nThis function takes a content hash as a hex **string** and returns the decoded content as a **string**.\n```javascript\nconst encoded = 'e3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f'\n\nconst content = contentHash.decode(encoded)\n// 'QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4'\n```\n\n### contentHash.fromIpfs( ipfsHash ) -> string\nThis function takes an IPFS address as a base58 encoded **string** and returns the encoded content hash as a hex **string**.\n> this function just call `contentHash.encode()` under the hood\n```javascript\nconst ipfsHash = 'QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4'\n\nconst contentH = contentHash.fromIpfs(ipfsHash)\n// 'e3010170122029f2d17be6139079dc48696d1f582a8530eb9805b561eda517e22a892c7e3f1f'\n```\n\n### contentHash.fromSwarm( swarmHash ) -> string\nThis function takes a Swarm address as a hex **string** and returns the encoded content hash as a hex **string**.\n> this function just call `contentHash.encode()` under the hood\n```javascript\nconst swarmHash = 'd1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162'\n\nconst contentH = contentHash.fromSwarm(swarmHash)\n// 'e40101701b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162'\n```\n\n### contentHash.encode( codec, value) -> string\nThis function takes a [supported codec](#-supported-codec) as a **string** and a value as a **string** and returns coresponding content hash as a hex **string**.\n```javascript\nconst onion = 'zqktlwi4fecvo6ri'\ncontentHash.encode('onion', onion);\n// 'bc037a716b746c776934666563766f367269'\n```\n\n### contentHash.getCodec( contentHash ) -> string\nThis function takes a content hash as a hex **string** and returns the codec as a hex **string**.\n```javascript\nconst encoded = 'e40101701b20d1de9994b4d039f6548d191eb26786769f580809256b4685ef316805265ea162'\n\nconst codec = contentHash.getCodec(encoded) // 'swarm-ns'\ncodec === 'ipfs-ns' // false\n```\n\n### contentHash.helpers\nThis object contain the following helpers functions :\n\n- #### cidV0ToV1Base32( ipfsHash ) -> string\n\tThis function takes an ipfsHash and convert it to a CID v1 encoded in base32.\n\t```javascript\n\tconst ipfs = 'QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG'\n\n\tconst cidV1 = contentHash.helpers.cidV0ToV1Base32(ipfs)\n\t// 'bafybeibj6lixxzqtsb45ysdjnupvqkufgdvzqbnvmhw2kf7cfkesy7r7d4'\n\t```\n\n## 👨‍💻 Maintainer\n*  pldespaigne : [github](https://github.com/pldespaigne), [twitter](https://twitter.com/pldespaigne)\n\n## 🙌 Contributing\nFor any questions, discussions, bug report, or whatever I will be happy to answer through the [issues](https://github.com/pldespaigne/content-hash/issues) or on my [twitter](https://twitter.com/pldespaigne) 😁. PR (with tests) are also welcome !\n\n## 📝 License\nThis project is licensed under the **ISC License**, you can find it [here](https://github.com/pldespaigne/content-hash/blob/master/LICENSE).\n> Note that the dependencies may have a different License\n\n\n",
    "licenseText": "ISC License\n\nCopyright (c) 2018, Pierre-Louis Despaigne\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/content-hash/-/content-hash-2.5.2.tgz#bbc2655e7c21f14fd3bfc7b7d4bfe6e454c9e211",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/content-hash/-/content-hash-2.5.2.tgz",
    "hash": "bbc2655e7c21f14fd3bfc7b7d4bfe6e454c9e211",
    "integrity": "sha512-FvIQKy0S1JaWV10sMsA7TRx8bpU+pqPkhbsfvOJAdjRXvYxEckAwQWGwtRjiaJfh+E0DvcWUGqcdjwMGFjsSdw==",
    "registry": "npm",
    "packageName": "content-hash",
    "cacheIntegrity": "sha512-FvIQKy0S1JaWV10sMsA7TRx8bpU+pqPkhbsfvOJAdjRXvYxEckAwQWGwtRjiaJfh+E0DvcWUGqcdjwMGFjsSdw== sha1-u8JlXnwh8U/Tv8e31L/m5FTJ4hE="
  },
  "registry": "npm",
  "hash": "bbc2655e7c21f14fd3bfc7b7d4bfe6e454c9e211"
}