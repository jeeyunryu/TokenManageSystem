{
  "manifest": {
    "name": "@ipld/dag-json",
    "version": "10.0.1",
    "description": "JS implementation of DAG-JSON",
    "author": {
      "name": "Rod",
      "email": "rod@vagg.org",
      "url": "http://r.va.gg/"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipld/js-dag-json#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipld/js-dag-json.git"
    },
    "bugs": {
      "url": "https://github.com/ipld/js-dag-json/issues"
    },
    "keywords": [
      "ipfs",
      "ipld",
      "multiformats"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      },
      "ignorePatterns": [
        "test/ts-use"
      ]
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "build": "aegir build",
      "release": "aegir release",
      "test": "npm run lint && aegir test",
      "test:ts": "npm run test --prefix test/ts-use",
      "test:node": "aegir test -t node --cov",
      "test:chrome": "aegir test -t browser --cov",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:electron-main": "aegir test -t electron-main",
      "dep-check": "aegir dep-check"
    },
    "dependencies": {
      "cborg": "^1.10.0",
      "multiformats": "^11.0.0"
    },
    "devDependencies": {
      "@ipld/garbage": "^6.0.0",
      "aegir": "^38.1.2"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@ipld-dag-json-10.0.1-integrity/node_modules/@ipld/dag-json/package.json",
    "readmeFilename": "README.md",
    "readme": "# @ipld/dag-json <!-- omit in toc -->\n\n[![codecov](https://img.shields.io/codecov/c/github/ipld/js-dag-json.svg?style=flat-square)](https://codecov.io/gh/ipld/js-dag-json)\n[![CI](https://img.shields.io/github/workflow/status/ipld/js-dag-json/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/ipld/js-dag-json/actions/workflows/js-test-and-release.yml)\n\n> JS implementation of DAG-JSON\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Example](#example)\n- [Usage](#usage)\n- [License](#license)\n- [Contribute](#contribute)\n\n## Install\n\n```console\n$ npm i @ipld/dag-json\n```\n\n## Example\n\n```javascript\nimport { encode, decode } from '@ipld/dag-json'\nimport { CID } from 'multiformats'\n\nconst obj = {\n  x: 1,\n  /* CID instances are encoded as links */\n  y: [2, 3, CID.parse('QmaozNR7DZHQK1ZcU9p7QdrshMvXqWK6gpu5rmrkPdT3L4')],\n  z: {\n    a: CID.parse('QmaozNR7DZHQK1ZcU9p7QdrshMvXqWK6gpu5rmrkPdT3L4'),\n    b: null,\n    c: 'string'\n  }\n}\n\nlet data = encode(obj)\nlet decoded = decode(data)\ndecoded.y[0] // 2\nCID.asCID(decoded.z.a) // cid instance\n```\n\n## Usage\n\n`@ipld/dag-json` is designed to be used within multiformats but can be used separately. `encode()`, `decode()` are available as exports, as are `name` and `code` to match with the corresponding DAG-JSON [multicodec](https://github.com/multiformats/multicodec/).\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@ipld/dag-json/-/dag-json-10.0.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@ipld/dag-json/-/dag-json-10.0.1.tgz",
    "hash": "",
    "integrity": "sha512-XE1Eqw3eNVrSfOhtqCM/gwCxEgYFBzkDlkwhEeMmMvhd0rLBfSyVzXbahZSlv97tiTPEIx5rt41gcFAda3W8zg==",
    "registry": "npm",
    "packageName": "@ipld/dag-json",
    "cacheIntegrity": "sha512-XE1Eqw3eNVrSfOhtqCM/gwCxEgYFBzkDlkwhEeMmMvhd0rLBfSyVzXbahZSlv97tiTPEIx5rt41gcFAda3W8zg== sha1-pL9fJsMQ8M//TV9oDhm5cr/fj9s="
  },
  "registry": "npm",
  "hash": "5c4d44ab0dde355ad27ce86da8233f8300b1120605073903964c2111e32632f85dd2b2c17d2c95cd76da8594a5bfdeed8933c4231e6bb78d6070501d6b75bcce"
}