{
  "manifest": {
    "name": "nugget",
    "version": "2.2.0",
    "description": "minimalist wget clone written in node. HTTP GETs a file and saves it to the current working directory",
    "main": "index.js",
    "bin": {
      "nugget": "bin.js"
    },
    "scripts": {
      "test": "standard && tape test/*.js"
    },
    "author": {
      "name": "max ogden"
    },
    "license": "BSD-3-Clause",
    "dependencies": {
      "debug": "^2.1.3",
      "minimist": "^1.1.0",
      "pretty-bytes": "^4.0.2",
      "progress-stream": "^1.1.0",
      "request": "^2.45.0",
      "single-line-log": "^1.1.2",
      "throttleit": "0.0.2"
    },
    "devDependencies": {
      "standard": "^6.0.5",
      "tape": "^3.0.1",
      "tape-spawn": "^1.4.2"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/maxogden/nugget.git"
    },
    "bugs": {
      "url": "https://github.com/maxogden/nugget/issues"
    },
    "homepage": "https://github.com/maxogden/nugget",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-nugget-2.2.0-integrity/node_modules/nugget/package.json",
    "readmeFilename": "readme.md",
    "readme": "# nugget\n\nMinimalist command line downloader written in node, inspired by wget. HTTP GETs a file and streams it into a file in the current working directory. Specializes at downloading many files in parallel.\n\n[![NPM](https://nodei.co/npm/nugget.png?global=true)](https://nodei.co/npm/nugget/)\n![dat](http://img.shields.io/badge/Development%20sponsored%20by-dat-green.svg?style=flat)\n[![Travis](http://img.shields.io/travis/maxogden/nugget.svg?style=flat)](https://travis-ci.org/maxogden/nugget)\n\n## installation\n\n```\nnpm install nugget -g\n```\n\n## usage\n\n```\nUsage: nugget <urls> [options]\n  -o, --output     output filename\n  -d, --dir        output parent directory\n  -c, --continue   resume aborted download\n  -f, --force      ignore response codes > 299\n  -s, --sockets    concurrent socket limit (default infinity)\n  -q, --quiet      disable logging\n  -t, --tmpfile    write files to <name>.tmp while downloading\n  --proxy          specify a proxy to use\n  --no-strict-ssl  disable strict SSL cehcking\n```\n\n### examples\n\n```\nnugget http://foo.com/bar.jpg\n# downloads bar.jpg and stores it in the current directory\n```\n\nor\n\n```\nnugget http://foo.com/bar.jpg -O baz.jpg\n# saves it as baz.jpg. you can also do lowercase -o\n```\n\nif you get a statusCode of 300 or greater nugget will stop. you can force it to stream the response into a file anyway by doing `nugget http://404link.com/file.html -f` or `--force` works too\n\nyou can also download multiple files, just pass multiple urls:\n\n![download multiple](multiple.png)\n\n## options\n\nThe following options are recognized by nugget:\n\n- `-o|-O|--out` - specify the filename to write to. this only works if you are downloading a single file\n- `-d|--dir` - save files in a directory other than the current one.\n- `-c|--continue` - resume downloads if a partially complete target file already exists. If the target file exists and is the same size as the remote file, nothing will be done.\n- `-f|--force` - force the server response to be saved to the target file, even if it's a non-successful status code.\n- `-s|--sockets` - default Infinity. specify the number of http sockets to use at once (this controls concurrency)\n- `-q|--quiet` - disable logging\n- `-t, --tmpfile` - write files to <name>.tmp while downloading\n- `--proxy` - specify a proxy to use\n- `--no-strict-ssl` - disable strict ssl\n",
    "licenseText": "Copyright 2019 Max Ogden\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/nugget/-/nugget-2.2.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/nugget/-/nugget-2.2.0.tgz",
    "hash": "",
    "integrity": "sha512-I4Yt4dRPes82Tx/s7qDn8z1cA2pmZy2bOJiTdcb/BZJ1LJkEYd9GqunQD37unPUPjdmW6dkkVZmxN+8Gxt6Xlg==",
    "registry": "npm",
    "packageName": "nugget",
    "cacheIntegrity": "sha512-I4Yt4dRPes82Tx/s7qDn8z1cA2pmZy2bOJiTdcb/BZJ1LJkEYd9GqunQD37unPUPjdmW6dkkVZmxN+8Gxt6Xlg== sha1-rW/u7akS3+g5417+cTvBzmfx9bY="
  },
  "registry": "npm",
  "hash": "23862de1d44f7acf364f1feceea0e7f33d5c036a66672d9b38989375c6ff0592752c990461df46aae9d00f7eee9cf50f8dd996e9d9245599b137ef06c6de9796"
}