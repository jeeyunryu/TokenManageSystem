{
  "manifest": {
    "name": "p-fifo",
    "version": "1.0.0",
    "description": "Promised First-In-First-Out buffer. Await on push to be told when a value is consumed and await on shift for a value to consume when the buffer is empty.",
    "main": "index.js",
    "scripts": {
      "test": "ava test.js --verbose",
      "lint": "standard",
      "coverage": "nyc --reporter=text --reporter=lcov npm test"
    },
    "keywords": [
      "fifo",
      "buffer",
      "queue",
      "promise",
      "push",
      "shift",
      "array"
    ],
    "author": {
      "name": "Alan Shaw"
    },
    "license": "MIT",
    "dependencies": {
      "fast-fifo": "^1.0.0",
      "p-defer": "^3.0.0"
    },
    "devDependencies": {
      "ava": "^2.2.0",
      "nyc": "^14.1.1",
      "standard": "^13.1.0"
    },
    "ava": {
      "babel": false,
      "compileEnhancements": false
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/alanshaw/p-fifo.git"
    },
    "bugs": {
      "url": "https://github.com/alanshaw/p-fifo/issues"
    },
    "homepage": "https://github.com/alanshaw/p-fifo#readme",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-p-fifo-1.0.0-e29d5cf17c239ba87f51dde98c1d26a9cfe20a63-integrity/node_modules/p-fifo/package.json",
    "readmeFilename": "README.md",
    "readme": "# p-fifo\n\n[![Build Status](https://travis-ci.org/alanshaw/p-fifo.svg?branch=master)](https://travis-ci.org/alanshaw/p-fifo)\n[![dependencies Status](https://david-dm.org/alanshaw/p-fifo/status.svg)](https://david-dm.org/alanshaw/p-fifo)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> Promised First-In-First-Out buffer. Await on push to be told when a value is consumed and await on shift for a value to consume when the buffer is empty\n\n## Install\n\n```sh\nnpm i p-fifo\n```\n\n## Usage\n\n### Await on push\n\n`await` on push to be told when your pushed value is consumed:\n\n```js\nconst Fifo = require('p-fifo')\nconst fifo = new Fifo()\n\n// Consume a value from the buffer after 1 second\nsetTimeout(() => fifo.shift(), 1000)\n\nconsole.time('push')\n// Nothing in the buffer, push a value and wait for it to be consumed\nawait fifo.push('hello')\nconsole.log('\"hello\" was consumed')\nconsole.timeEnd('push')\n\n// Output:\n// \"hello\" was consumed\n// push: 1006.723ms\n```\n\n### Await on shift\n\nIf the buffer is empty, you can `await` on a value to be pushed:\n\n```js\nconst Fifo = require('p-fifo')\nconst fifo = new Fifo()\n\n// Push a value into the buffer after 1 second\nsetTimeout(() => fifo.push('hello'), 1000)\n\nconsole.time('shift')\n// Nothing in the buffer, wait for something to arrive\nconst value = await fifo.shift()\nconsole.log(`consumed \"${value}\" from the buffer`)\nconsole.timeEnd('shift')\n\n// Output:\n// consumed \"hello\" from the buffer\n// shift: 1002.652ms\n```\n\n## API\n\n```js\nconst fifo = new Fifo()\n```\n\n### `fifo.push(value): Promise`\n\nAdd a value to the end of the FIFO buffer.\n\nReturns a promise that is resolved when the pushed value is shifted off the start of the buffer.\n\n### `fifo.shift(): Promise<Any>`\n\nRemove the first value from the FIFO buffer and return that removed value in a promise.\n\nReturns a promise that resolves to a value from start of the FIFO buffer. If there are no values in the buffer the promise will resolve when a value is next pushed.\n\nNote that multiple calls to shift when the buffer is empty will not resolve to the same value i.e. a corresponding number of calls to `push` will need to be made to resolve all the promises returned by calls to `shift`.\n\n### `fifo.isEmpty(): Boolean`\n\nReturns `true` if the FIFO buffer is empty and `false` otherwise.\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/alanshaw/p-fifo/issues/new) or submit PRs.\n\n## License\n\n[MIT](LICENSE) Â© Alan Shaw\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Alan Shaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/p-fifo/-/p-fifo-1.0.0.tgz#e29d5cf17c239ba87f51dde98c1d26a9cfe20a63",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/p-fifo/-/p-fifo-1.0.0.tgz",
    "hash": "e29d5cf17c239ba87f51dde98c1d26a9cfe20a63",
    "integrity": "sha512-IjoCxXW48tqdtDFz6fqo5q1UfFVjjVZe8TC1QRflvNUJtNfCUhxOUw6MOVZhDPjqhSzc26xKdugsO17gmzd5+A==",
    "registry": "npm",
    "packageName": "p-fifo",
    "cacheIntegrity": "sha512-IjoCxXW48tqdtDFz6fqo5q1UfFVjjVZe8TC1QRflvNUJtNfCUhxOUw6MOVZhDPjqhSzc26xKdugsO17gmzd5+A== sha1-4p1c8Xwjm6h/Ud3pjB0mqc/iCmM="
  },
  "registry": "npm",
  "hash": "e29d5cf17c239ba87f51dde98c1d26a9cfe20a63"
}