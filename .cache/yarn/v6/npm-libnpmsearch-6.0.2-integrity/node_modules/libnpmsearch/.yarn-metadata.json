{
  "manifest": {
    "name": "libnpmsearch",
    "version": "6.0.2",
    "description": "Programmatic API for searching in npm and compatible registries.",
    "author": {
      "name": "GitHub Inc."
    },
    "main": "lib/index.js",
    "files": [
      "bin/",
      "lib/"
    ],
    "keywords": [
      "npm",
      "search",
      "api",
      "libnpm"
    ],
    "license": "ISC",
    "scripts": {
      "posttest": "node ../.. run lint",
      "test": "tap",
      "lint": "eslint \"**/*.js\"",
      "postlint": "template-oss-check",
      "lintfix": "node ../.. run lint -- --fix",
      "snap": "tap",
      "template-oss-apply": "template-oss-apply --force"
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.11.4",
      "nock": "^13.3.0",
      "tap": "^16.3.4"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/cli.git",
      "directory": "workspaces/libnpmsearch"
    },
    "bugs": {
      "url": "https://github.com/npm/libnpmsearch/issues"
    },
    "homepage": "https://npmjs.com/package/libnpmsearch",
    "dependencies": {
      "npm-registry-fetch": "^14.0.3"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.11.4",
      "content": "../../scripts/template-oss/index.js"
    },
    "tap": {
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-libnpmsearch-6.0.2-integrity/node_modules/libnpmsearch/package.json",
    "readmeFilename": "README.md",
    "readme": "# libnpmsearch\n\n[![npm version](https://img.shields.io/npm/v/libnpmsearch.svg)](https://npm.im/libnpmsearch)\n[![license](https://img.shields.io/npm/l/libnpmsearch.svg)](https://npm.im/libnpmsearch)\n[![CI - libnpmsearch](https://github.com/npm/cli/actions/workflows/ci-libnpmsearch.yml/badge.svg)](https://github.com/npm/cli/actions/workflows/ci-libnpmsearch.yml)\n\n[`libnpmsearch`](https://github.com/npm/libnpmsearch) is a Node.js library for\nprogrammatically accessing the npm search endpoint. It does **not** support\nlegacy search through `/-/all`.\n\n## Table of Contents\n\n* [Example](#example)\n* [Install](#install)\n* [Contributing](#contributing)\n* [API](#api)\n  * [search opts](#opts)\n  * [`search()`](#search)\n  * [`search.stream()`](#search-stream)\n\n## Example\n\n```js\nconst search = require('libnpmsearch')\n\nconsole.log(await search('libnpm'))\n=>\n[\n  {\n    name: 'libnpm',\n    description: 'programmatic npm API',\n    ...etc\n  },\n  {\n    name: 'libnpmsearch',\n    description: 'Programmatic API for searching in npm and compatible registries',\n    ...etc\n  },\n  ...more\n]\n```\n\n## Install\n\n`$ npm install libnpmsearch`\n\n### API\n\n#### <a name=\"opts\"></a> `opts` for `libnpmsearch` commands\n\nThe following opts are used directly by `libnpmsearch` itself:\n\n* `opts.limit` - Number of results to limit the query to. Default: 20\n* `opts.from` - Offset number for results. Used with `opts.limit` for pagination. Default: 0\n* `opts.detailed` - If true, returns an object with `package`, `score`, and `searchScore` fields, with `package` being what would usually be returned, and the other two containing details about how that package scored. Useful for UIs. Default: false\n* `opts.sortBy` - Used as a shorthand to set `opts.quality`, `opts.maintenance`, and `opts.popularity` with values that prioritize each one. Should be one of `'optimal'`, `'quality'`, `'maintenance'`, or `'popularity'`. Default: `'optimal'`\n* `opts.maintenance` - Decimal number between `0` and `1` that defines the weight of `maintenance` metrics when scoring and sorting packages. Default: `0.65` (same as `opts.sortBy: 'optimal'`)\n* `opts.popularity` - Decimal number between `0` and `1` that defines the weight of `popularity` metrics when scoring and sorting packages. Default: `0.98` (same as `opts.sortBy: 'optimal'`)\n* `opts.quality` - Decimal number between `0` and `1` that defines the weight of `quality` metrics when scoring and sorting packages. Default: `0.5` (same as `opts.sortBy: 'optimal'`)\n\n`libnpmsearch` uses [`npm-registry-fetch`](https://npm.im/npm-registry-fetch).\nMost options are passed through directly to that library, so please refer to\n[its own `opts`\ndocumentation](https://www.npmjs.com/package/npm-registry-fetch#fetch-options)\nfor options that can be passed in.\n\nA couple of options of note for those in a hurry:\n\n* `opts.token` - can be passed in and will be used as the authentication token for the registry. For other ways to pass in auth details, see the n-r-f docs.\n\n#### <a name=\"search\"></a> `> search(query, [opts]) -> Promise`\n\n`query` must be either a String or an Array of search terms.\n\nIf `opts.limit` is provided, it will be sent to the API to constrain the number\nof returned results. You may receive more, or fewer results, at the endpoint's\ndiscretion.\n\nThe returned Promise resolved to an Array of search results with the following\nformat:\n\n```js\n{\n  name: String,\n  version: SemverString,\n  description: String || null,\n  maintainers: [\n    {\n      username: String,\n      email: String\n    },\n    ...etc\n  ] || null,\n  keywords: [String] || null,\n  date: Date || null\n}\n```\n\nIf `opts.limit` is provided, it will be sent to the API to constrain the number\nof returned results. You may receive more, or fewer results, at the endpoint's\ndiscretion.\n\nFor streamed results, see [`search.stream`](#search-stream).\n\n##### Example\n\n```javascript\nawait search('libnpm')\n=>\n[\n  {\n    name: 'libnpm',\n    description: 'programmatic npm API',\n    ...etc\n  },\n  {\n    name: 'libnpmsearch',\n    description: 'Programmatic API for searching in npm and compatible registries',\n    ...etc\n  },\n  ...more\n]\n```\n\n#### <a name=\"search-stream\"></a> `> search.stream(query, [opts]) -> Stream`\n\n`query` must be either a String or an Array of search terms.\n\nIf `opts.limit` is provided, it will be sent to the API to constrain the number\nof returned results. You may receive more, or fewer results, at the endpoint's\ndiscretion.\n\nThe returned Stream emits one entry per search result, with each entry having\nthe following format:\n\n```js\n{\n  name: String,\n  version: SemverString,\n  description: String || null,\n  maintainers: [\n    {\n      username: String,\n      email: String\n    },\n    ...etc\n  ] || null,\n  keywords: [String] || null,\n  date: Date || null\n}\n```\n\nFor getting results in one chunk, see [`search`](#search-stream).\n\n##### Example\n\n```javascript\nsearch.stream('libnpm').on('data', console.log)\n=>\n// entry 1\n{\n  name: 'libnpm',\n  description: 'programmatic npm API',\n  ...etc\n}\n// entry 2\n{\n  name: 'libnpmsearch',\n  description: 'Programmatic API for searching in npm and compatible registries',\n  ...etc\n}\n// etc\n```\n",
    "licenseText": "Copyright npm, Inc\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/libnpmsearch/-/libnpmsearch-6.0.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/libnpmsearch/-/libnpmsearch-6.0.2.tgz",
    "hash": "",
    "integrity": "sha512-p+5BF19AvnVg8mcIQhy6yWhI6jHQRVMYaIaKeITEfYAffWsqbottA/WZdMtHL76hViC6SFM1WdclM1w5eAIa1g==",
    "registry": "npm",
    "packageName": "libnpmsearch",
    "cacheIntegrity": "sha512-p+5BF19AvnVg8mcIQhy6yWhI6jHQRVMYaIaKeITEfYAffWsqbottA/WZdMtHL76hViC6SFM1WdclM1w5eAIa1g== sha1-tqUxoxKFXdO/hN0nOxAz3Qm0y+w="
  },
  "registry": "npm",
  "hash": "a7ee41175f40be7560f26708421cbac96848ea31d045531868868a7884c47d801f7d6b2a6e8b6d03f59974cb472fbea15620ba48533559d725335c3978021ad6"
}