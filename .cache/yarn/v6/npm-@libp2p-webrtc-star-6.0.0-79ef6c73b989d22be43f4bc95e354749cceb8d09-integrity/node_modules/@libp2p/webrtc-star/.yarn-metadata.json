{
  "manifest": {
    "name": "@libp2p/webrtc-star",
    "version": "6.0.0",
    "description": "libp2p WebRTC transport that includes a discovery mechanism provided by the signalling-star",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/libp2p/js-libp2p-webrtc-star/tree/master/packages/webrtc-star-transport#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/libp2p/js-libp2p-webrtc-star.git"
    },
    "bugs": {
      "url": "https://github.com/libp2p/js-libp2p-webrtc-star/issues"
    },
    "keywords": [
      "IPFS",
      "libp2p"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "build": "aegir build",
      "test": "aegir test",
      "test:node": "aegir test -t node -f ./dist/test/node.js --cov",
      "test:chrome": "aegir test -t browser -f ./dist/test/browser.js --cov",
      "test:firefox": "aegir test -t browser -- --browser firefox -f ./dist/test/browser.js",
      "test:dns": "WEBRTC_STAR_REMOTE_SIGNAL_DNS=1 aegir test -t browser",
      "test:ip": "WEBRTC_STAR_REMOTE_SIGNAL_IP=1 aegir test -t browser",
      "release": "aegir release"
    },
    "dependencies": {
      "@libp2p/interface-connection": "^3.0.1",
      "@libp2p/interface-peer-discovery": "^1.0.0",
      "@libp2p/interface-peer-id": "^2.0.0",
      "@libp2p/interface-transport": "^2.0.0",
      "@libp2p/interfaces": "^3.0.2",
      "@libp2p/logger": "^2.0.0",
      "@libp2p/peer-id": "^2.0.0",
      "@libp2p/utils": "^3.0.1",
      "@libp2p/webrtc-peer": "^2.0.0",
      "@libp2p/webrtc-star-protocol": "^3.0.0",
      "@multiformats/mafmt": "^11.0.2",
      "@multiformats/multiaddr": "^11.0.0",
      "abortable-iterator": "^4.0.2",
      "delay": "^5.0.0",
      "err-code": "^3.0.1",
      "iso-random-stream": "^2.0.2",
      "multiformats": "^11.0.0",
      "p-defer": "^4.0.0",
      "socket.io-client": "^4.1.2",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "@libp2p/interface-mocks": "^9.0.0",
      "@libp2p/interface-peer-discovery-compliance-tests": "^2.0.0",
      "@libp2p/interface-transport-compliance-tests": "^3.0.0",
      "@libp2p/peer-id-factory": "^2.0.0",
      "@libp2p/webrtc-star-signalling-server": "^3.0.0",
      "@mapbox/node-pre-gyp": "^1.0.5",
      "aegir": "^37.9.1",
      "electron-webrtc": "~0.3.0",
      "it-all": "^2.0.0",
      "it-pipe": "^2.0.3",
      "it-pushable": "^3.0.0",
      "it-stream-types": "^1.0.4",
      "p-event": "^5.0.1",
      "p-wait-for": "^5.0.0",
      "sinon": "^15.0.1",
      "uint8arraylist": "^2.3.2",
      "util": "^0.12.4",
      "wrtc": "^0.4.6"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@libp2p-webrtc-star-6.0.0-79ef6c73b989d22be43f4bc95e354749cceb8d09-integrity/node_modules/@libp2p/webrtc-star/package.json",
    "readmeFilename": "README.md",
    "readme": "# @libp2p/webrtc-star <!-- omit in toc -->\n\n[![libp2p.io](https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square)](http://libp2p.io/)\n[![Discuss](https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg?style=flat-square)](https://discuss.libp2p.io)\n[![codecov](https://img.shields.io/codecov/c/github/libp2p/js-libp2p-webrtc-star.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-webrtc-star)\n[![CI](https://img.shields.io/github/actions/workflow/status/libp2p/js-libp2p-webrtc-star/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/libp2p/js-libp2p-webrtc-star/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> libp2p WebRTC transport that includes a discovery mechanism provided by the signalling-star\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n  - [Browser `<script>` tag](#browser-script-tag)\n- [Description](#description)\n- [Usage](#usage)\n  - [Using this module in Node.js (read: not in the browser)](#using-this-module-in-nodejs-read-not-in-the-browser)\n  - [Using this module in the Browser](#using-this-module-in-the-browser)\n- [Signalling server](#signalling-server)\n- [API](#api)\n  - [Transport](#transport)\n  - [Connection](#connection)\n  - [Peer Discovery - `ws.discovery`](#peer-discovery---wsdiscovery)\n- [License](#license)\n- [Contribution](#contribution)\n\n## Install\n\n```console\n$ npm i @libp2p/webrtc-star\n```\n\n### Browser `<script>` tag\n\nLoading this module through a script tag will make it's exports available as `Libp2pWebrtcStar` in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/@libp2p/webrtc-star/dist/index.min.js\"></script>\n```\n\n[![](https://raw.githubusercontent.com/libp2p/interface-transport/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/transport/README.md)\n[![](https://raw.githubusercontent.com/libp2p/interface-connection/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/connection/README.md)\n[![](https://raw.githubusercontent.com/libp2p/interface-peer-discovery/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/peer-discovery/README.md)\n\n## Description\n\n`libp2p-webrtc-star` is one of the WebRTC transports available for libp2p.\n\n## Usage\n\n### Using this module in Node.js (read: not in the browser)\n\nTo use this module in Node.js, you have to BYOI of WebRTC, there are multiple options out there, unfortunately, none of them are 100% solid. The ones we recommend are: [wrtc](http://npmjs.org/wrtc) and [electron-webrtc](https://www.npmjs.com/package/electron-webrtc).\n\nInstead of just creating the WebRTCStar instance without arguments, you need to pass an options object with the WebRTC implementation:\n\n```JavaScript\nimport { createLibp2pNode } from 'libp2p'\nimport { webRTCStar } from '@libp2p/webrtc-star'\nimport wrtc from 'wrtc'\nimport electronWebRTC from 'electron-webrtc'\n\n// Using wrtc in node\nconst star = webRTCStar({ wrtc })\n\n// Using electron-webrtc in electron\nconst star = webRTCStar({ wrtc: electronWebRTC() })\n\nconst node = await createLibp2pNode({\n  addresses: {\n    listen: [\n      '/ip4/188.166.203.82/tcp/20000/wss/p2p-webrtc-star'\n    ]\n  },\n  transports: [\n    star.transport\n  ],\n  peerDiscovery: [\n    star.discovery\n  ]\n})\nawait node.start()\n\nawait node.dial('/ip4/188.166.203.82/tcp/20000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n```\n\n### Using this module in the Browser\n\n```JavaScript\nimport { createLibp2pNode } from 'libp2p'\nimport { webRTCStar } from '@libp2p/webrtc-star'\n\nconst star = webRTCStar()\n\nconst node = await createLibp2pNode({\n  addresses: {\n    listen: [\n      '/ip4/188.166.203.82/tcp/20000/wss/p2p-webrtc-star'\n    ]\n  },\n  transports: [\n    star.transport\n  ],\n  peerDiscovery: [\n    star.discovery\n  ]\n})\nawait node.start()\n\nawait node.dial('/ip4/188.166.203.82/tcp/20000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n```\n\n## Signalling server\n\nThis module has an accompanying signalling server which is used to discover other peers running the libp2p-webrtc-star transport.\n\nPlease see the [libp2p-webrtc-star-signalling-server](https://npmjs.com/package/libp2p-webrtc-star-signalling-server) module for more information.\n\n## API\n\n### Transport\n\n[![](https://raw.githubusercontent.com/libp2p/interface-transport/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/transport/README.md)\n\n### Connection\n\n[![](https://raw.githubusercontent.com/libp2p/interface-connection/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/connection/README.md)\n\n### Peer Discovery - `ws.discovery`\n\n[![](https://raw.githubusercontent.com/libp2p/interface-peer-discovery/master/img/badge.png)](https://github.com/libp2p/js-libp2p-interfaces/blob/master/packages/libp2p-interfaces/src/peer-discovery/README.md)\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@libp2p/webrtc-star/-/webrtc-star-6.0.0.tgz#79ef6c73b989d22be43f4bc95e354749cceb8d09",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@libp2p/webrtc-star/-/webrtc-star-6.0.0.tgz",
    "hash": "79ef6c73b989d22be43f4bc95e354749cceb8d09",
    "integrity": "sha512-J3WJUXcMSRNOLcuxRV/oMZ2EFZYmX57G+oRSZb0jHpjnBZOcz4QXQh5+5o7sw0+M2FtJUTXs3jlCmsBAPHExew==",
    "registry": "npm",
    "packageName": "@libp2p/webrtc-star",
    "cacheIntegrity": "sha512-J3WJUXcMSRNOLcuxRV/oMZ2EFZYmX57G+oRSZb0jHpjnBZOcz4QXQh5+5o7sw0+M2FtJUTXs3jlCmsBAPHExew== sha1-ee9sc7mJ0ivkP0vJXjVHSczrjQk="
  },
  "registry": "npm",
  "hash": "79ef6c73b989d22be43f4bc95e354749cceb8d09"
}