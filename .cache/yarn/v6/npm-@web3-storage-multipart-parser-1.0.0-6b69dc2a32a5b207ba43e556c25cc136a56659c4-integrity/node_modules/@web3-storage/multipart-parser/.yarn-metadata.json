{
  "manifest": {
    "name": "@web3-storage/multipart-parser",
    "version": "1.0.0",
    "description": "A simple multipart/form-data parser to use with ReadableStreams",
    "main": "./cjs/src/index.js",
    "types": "./types/index.d.ts",
    "scripts": {
      "build": "npm run build:js && npm run build:types",
      "build:js": "ipjs build --main && npm run build:copy",
      "build:copy": "cp -a tsconfig.json src test dist/ ",
      "build:types": "npm run build:copy && cd dist && tsc --build",
      "test": "playwright-test -r tape -b webkit test/*.spec.js",
      "lint": "standard"
    },
    "author": {
      "name": "vasco-santos"
    },
    "license": "(Apache-2.0 AND MIT)",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/web3-storage/multipart-parser.git"
    },
    "standard": {
      "ignore": [
        "dist"
      ]
    },
    "devDependencies": {
      "ipjs": "^5.0.3",
      "playwright-test": "^6.0.0",
      "standard": "^16.0.3",
      "tape": "^5.2.2",
      "typescript": "^4.3.5",
      "web-streams-polyfill": "^3.1.0"
    },
    "browser": {
      ".": "./cjs/src/index.js"
    },
    "exports": {
      ".": {
        "browser": "./esm/src/index.js",
        "require": "./cjs/src/index.js",
        "import": "./esm/src/index.js"
      }
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@web3-storage-multipart-parser-1.0.0-6b69dc2a32a5b207ba43e556c25cc136a56659c4-integrity/node_modules/@web3-storage/multipart-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# multipart-parser\n\n> A simple multipart/form-data parser to use with ReadableStreams\n\nBased on https://github.com/ssttevee/js-multipart-parser\n\n## Install\n\n```sh\n# install it as a dependency\n$ npm i @web3-storage/multipart-parser\n```\n\n# Usage\n\n```js\nimport { parseMultipart } from '@web3-storage/multipart-parser';\n\n...\n\nasync function requestHandler(req) {\n    const boundary = '----whatever';\n    const parts = await parseMultipart(req.body, boundary);\n    const fd = new FormData();\n    for (const { name, data, filename, contentType } of parts) {\n        if (filename) {\n            fd.append(name, new Blob([data], { type: contentType }), filename);\n        } else {\n            fd.append(name, new TextDecoder().decode(data), filename);\n        }\n    }\n}\n```\n\n## Releasing\n\nYou can publish by either running npm publish in the dist directory or using npx ipjs publish.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@web3-storage/multipart-parser/-/multipart-parser-1.0.0.tgz#6b69dc2a32a5b207ba43e556c25cc136a56659c4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@web3-storage/multipart-parser/-/multipart-parser-1.0.0.tgz",
    "hash": "6b69dc2a32a5b207ba43e556c25cc136a56659c4",
    "integrity": "sha512-BEO6al7BYqcnfX15W2cnGR+Q566ACXAT9UQykORCWW80lmkpWsnEob6zJS1ZVBKsSJC8+7vJkHwlp+lXG1UCdw==",
    "registry": "npm",
    "packageName": "@web3-storage/multipart-parser",
    "cacheIntegrity": "sha512-BEO6al7BYqcnfX15W2cnGR+Q566ACXAT9UQykORCWW80lmkpWsnEob6zJS1ZVBKsSJC8+7vJkHwlp+lXG1UCdw== sha1-a2ncKjKlsge6Q+VWwlzBNqVmWcQ="
  },
  "registry": "npm",
  "hash": "6b69dc2a32a5b207ba43e556c25cc136a56659c4"
}