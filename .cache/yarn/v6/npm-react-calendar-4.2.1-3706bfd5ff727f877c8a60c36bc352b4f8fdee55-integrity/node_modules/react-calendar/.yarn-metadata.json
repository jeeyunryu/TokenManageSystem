{
  "manifest": {
    "name": "react-calendar",
    "version": "4.2.1",
    "description": "Ultimate calendar for your React app.",
    "main": "dist/cjs/index.js",
    "module": "dist/esm/index.js",
    "source": "src/index.ts",
    "types": "dist/cjs/index.d.ts",
    "sideEffects": [
      "*.css"
    ],
    "scripts": {
      "build": "yarn build-js && yarn copy-styles",
      "build-js": "yarn build-js-esm && yarn build-js-cjs",
      "build-js-esm": "tsc --project tsconfig.build.json --outDir dist/esm --module esnext",
      "build-js-cjs": "tsc --project tsconfig.build.json --outDir dist/cjs --module commonjs",
      "clean": "rimraf dist",
      "copy-styles": "node ./copy-styles.mjs",
      "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
      "prepack": "yarn clean && yarn build",
      "prettier": "prettier --check . --cache",
      "test": "yarn lint && yarn tsc && yarn prettier && yarn unit",
      "tsc": "tsc --noEmit",
      "unit": "vitest run"
    },
    "keywords": [
      "calendar",
      "date",
      "date-picker",
      "month-picker",
      "react"
    ],
    "author": {
      "name": "Wojciech Maj",
      "email": "kontakt@wojtekmaj.pl"
    },
    "license": "MIT",
    "dependencies": {
      "@types/react": "*",
      "@wojtekmaj/date-utils": "^1.1.3",
      "clsx": "^1.2.1",
      "get-user-locale": "^2.2.1",
      "prop-types": "^15.6.0"
    },
    "devDependencies": {
      "@testing-library/jest-dom": "^5.15.0",
      "@testing-library/react": "^14.0.0",
      "eslint": "^8.26.0",
      "eslint-config-wojtekmaj": "^0.8.3",
      "husky": "^8.0.0",
      "jsdom": "^21.1.0",
      "prettier": "^2.7.0",
      "pretty-quick": "^3.1.0",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "rimraf": "^3.0.0",
      "typescript": "^5.0.2",
      "vitest": "^0.29.2"
    },
    "peerDependencies": {
      "react": "^16.8.0 || ^17.0.0 || ^18.0.0",
      "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0"
    },
    "files": [
      "dist",
      "src"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wojtekmaj/react-calendar.git"
    },
    "funding": "https://github.com/wojtekmaj/react-calendar?sponsor=1",
    "packageManager": "yarn@3.1.0",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-react-calendar-4.2.1-3706bfd5ff727f877c8a60c36bc352b4f8fdee55-integrity/node_modules/react-calendar/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm](https://img.shields.io/npm/v/react-calendar.svg)](https://www.npmjs.com/package/react-calendar) ![downloads](https://img.shields.io/npm/dt/react-calendar.svg) [![CI](https://github.com/wojtekmaj/react-calendar/workflows/CI/badge.svg)](https://github.com/wojtekmaj/react-calendar/actions)\n\n# React-Calendar\n\n<div align=\"center\">\n  <img width=\"436\" height=\"398\" src=\"https://projects.wojtekmaj.pl/react-calendar/react-calendar.jpg\">\n</div>\n\nUltimate calendar for your React app.\n\n- Pick days, months, years, or even decades\n- Supports range selection\n- Supports virtually any language\n- No moment.js needed\n\n## tl;dr\n\n- Install by executing `npm install react-calendar` or `yarn add react-calendar`.\n- Import by adding `import Calendar from 'react-calendar'`.\n- Use by adding `<Calendar />`. Use `onChange` prop for getting new values.\n\n## Demo\n\nA minimal demo page can be found in `sample` directory.\n\n[Online demo](http://projects.wojtekmaj.pl/react-calendar/) is also available!\n\n## Before you continue\n\nReact-Calendar is under constant development. This documentation is written for React-Calendar 3.x branch. If you want to see documentation for other versions of React-Calendar, use dropdown on top of GitHub page to switch to an appropriate tag. Here are quick links to the newest docs from each branch:\n\n- [v2.x](https://github.com/wojtekmaj/react-calendar/blob/v2.x/README.md)\n\n## Getting started\n\n### Compatibility\n\nYour project needs to use React 16.3 or later.\n\nReact-Calendar uses modern web technologies. That's why it's so fast, lightweight and easy to style. This, however, comes at a cost of [supporting only modern browsers](https://caniuse.com/#feat=internationalization).\n\n#### Legacy browsers\n\nIf you need to support legacy browsers like Internet Explorer 10, you will need to use [Intl.js](https://github.com/andyearnshaw/Intl.js/) or another Intl polyfill along with React-Calendar.\n\n#### My locale isn't supported! What can I do?\n\nIf your locale isn't supported, you can use [Intl.js](https://github.com/andyearnshaw/Intl.js/) or another Intl polyfill along with React-Calendar.\n\n### Installation\n\nAdd React-Calendar to your project by executing `npm install react-calendar` or `yarn add react-calendar`.\n\n### Usage\n\nHere's an example of basic usage:\n\n```js\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\n\nfunction MyApp() {\n  const [value, onChange] = useState(new Date());\n\n  return (\n    <div>\n      <Calendar onChange={onChange} value={value} />\n    </div>\n  );\n}\n```\n\nCheck the [sample directory](https://github.com/wojtekmaj/react-calendar/tree/main/sample) in this repository for a full working example. For more examples and more advanced use cases, check [Recipes](https://github.com/wojtekmaj/react-calendar/wiki/Recipes) in [React-Calendar Wiki](https://github.com/wojtekmaj/react-calendar/wiki).\n\n### Custom styling\n\nIf you want to use default React-Calendar styling to build upon it, you can import React-Calendar's styles by using:\n\n```js\nimport 'react-calendar/dist/Calendar.css';\n```\n\n## User guide\n\n### Calendar\n\nDisplays a complete, interactive calendar.\n\n#### Props\n\n| Prop name               | Description                                                                                                                                                                                                                                                                                                                                                                                                                | Default value                                         | Example values                                                                                                                                                                                                                                                                                       |\n| ----------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| activeStartDate         | The beginning of a period that shall be displayed. If you wish to use React-Calendar in an uncontrolled way, use `defaultActiveStartDate` instead.                                                                                                                                                                                                                                                                         | (today)                                               | `new Date(2017, 0, 1)`                                                                                                                                                                                                                                                                               |\n| allowPartialRange       | Whether to call onChange with only partial result given `selectRange` prop.                                                                                                                                                                                                                                                                                                                                                | `false`                                               | `true`                                                                                                                                                                                                                                                                                               |\n| calendarType            | Type of calendar that should be used. Can be `\"ISO 8601\"`, `\"US\"`, `\"Arabic\"`, or `\"Hebrew\"`. Setting to `\"US\"` or `\"Hebrew\"` will change the first day of the week to Sunday. Setting to `\"Arabic\"` will change the first day of the week to Saturday. Setting to `\"Arabic\"` or `\"Hebrew\"` will make weekends appear on Friday to Saturday.                                                                               | Type of calendar most commonly used in a given locale | `\"ISO 8601\"`                                                                                                                                                                                                                                                                                         |\n| className               | Class name(s) that will be added along with `\"react-calendar\"` to the main React-Calendar `<div>` element.                                                                                                                                                                                                                                                                                                                 | n/a                                                   | <ul><li>String: `\"class1 class2\"`</li><li>Array of strings: `[\"class1\", \"class2 class3\"]`</li></ul>                                                                                                                                                                                                  |\n| defaultActiveStartDate  | The beginning of a period that shall be displayed by default. If you wish to use React-Calendar in a controlled way, use `activeStartDate` instead.                                                                                                                                                                                                                                                                        | (today)                                               | `new Date(2017, 0, 1)`                                                                                                                                                                                                                                                                               |\n| defaultValue            | Calendar value that shall be selected initially. Can be either one value or an array of two values. If you wish to use React-Calendar in a controlled way, use `value` instead.                                                                                                                                                                                                                                            | n/a                                                   | <ul><li>Date: `new Date()`</li><li>An array of dates: `[new Date(2017, 0, 1), new Date(2017, 7, 1)]`                                                                                                                                                                                                 |\n| defaultView             | Determines which calendar view shall be opened initially. Does not disable navigation. Can be `\"month\"`, `\"year\"`, `\"decade\"` or `\"century\"`. If you wish to use React-Calendar in a controlled way, use `view` instead.                                                                                                                                                                                                   | The most detailed view allowed                        | `\"year\"`                                                                                                                                                                                                                                                                                             |\n| formatDay               | Function called to override default formatting of day tile labels. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                                        | (default formatter)                                   | `(locale, date) => formatDate(date, 'd')`                                                                                                                                                                                                                                                            |\n| formatLongDate          | Function called to override default formatting of day tile `abbr` labels. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                                 | (default formatter)                                   | `(locale, date) => formatDate(date, 'dd MMM YYYY')`                                                                                                                                                                                                                                                  |\n| formatMonth             | Function called to override default formatting of month names. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                                            | (default formatter)                                   | `(locale, date) => formatDate(date, 'MMM')`                                                                                                                                                                                                                                                          |\n| formatMonthYear         | Function called to override default formatting of months and years. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                                       | (default formatter)                                   | `(locale, date) => formatDate(date, 'MMMM YYYY')`                                                                                                                                                                                                                                                    |\n| formatShortWeekday      | Function called to override default formatting of weekday names (shortened). Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                              | (default formatter)                                   | `(locale, date) => formatDate(date, 'dd')`                                                                                                                                                                                                                                                           |\n| formatWeekday           | Function called to override default formatting of weekday names. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                                          | (default formatter)                                   | `(locale, date) => formatDate(date, 'dd')`                                                                                                                                                                                                                                                           |\n| formatYear              | Function called to override default formatting of year in the top navigation section. Can be used to use your own formatting function.                                                                                                                                                                                                                                                                                     | (default formatter)                                   | `(locale, date) => formatDate(date, 'YYYY')`                                                                                                                                                                                                                                                         |\n| goToRangeStartOnSelect  | Whether to go to the beginning of the range when selecting the end of the range.                                                                                                                                                                                                                                                                                                                                           | `true`                                                | `false`                                                                                                                                                                                                                                                                                              |\n| inputRef                | A prop that behaves like [ref](https://reactjs.org/docs/refs-and-the-dom.html), but it's passed to main `<div>` rendered by `<Calendar>` component.                                                                                                                                                                                                                                                                        | n/a                                                   | <ul><li>Function:<br />`(ref) => { this.myCalendar = ref; }`</li><li>Ref created using `React.createRef`:<br />`this.ref = React.createRef();`<br />…<br />`inputRef={this.ref}`</li><li>Ref created using `React.useRef`:<br />`const ref = React.useRef();`<br />…<br />`inputRef={ref}`</li></ul> |\n| locale                  | Locale that should be used by the calendar. Can be any [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).                                                                                                                                                                                                                                                                                               | User's browser settings                               | `\"hu-HU\"`                                                                                                                                                                                                                                                                                            |\n| maxDate                 | Maximum date that the user can select. Periods partially overlapped by maxDate will also be selectable, although React-Calendar will ensure that no later date is selected.                                                                                                                                                                                                                                                | n/a                                                   | Date: `new Date()`                                                                                                                                                                                                                                                                                   |\n| maxDetail               | The most detailed view that the user shall see. View defined here also becomes the one on which clicking an item will select a date and pass it to onChange. Can be `\"month\"`, `\"year\"`, `\"decade\"` or `\"century\"`.                                                                                                                                                                                                        | `\"month\"`                                             | `\"year\"`                                                                                                                                                                                                                                                                                             |\n| minDate                 | Minimum date that the user can select. Periods partially overlapped by minDate will also be selectable, although React-Calendar will ensure that no earlier date is selected.                                                                                                                                                                                                                                              | n/a                                                   | Date: `new Date()`                                                                                                                                                                                                                                                                                   |\n| minDetail               | The least detailed view that the user shall see. Can be `\"month\"`, `\"year\"`, `\"decade\"` or `\"century\"`.                                                                                                                                                                                                                                                                                                                    | `\"century\"`                                           | `\"decade\"`                                                                                                                                                                                                                                                                                           |\n| navigationAriaLabel     | `aria-label` attribute of a label rendered on calendar navigation bar.                                                                                                                                                                                                                                                                                                                                                     | n/a                                                   | `\"Go up\"`                                                                                                                                                                                                                                                                                            |\n| navigationAriaLive      | `aria-live` attribute of a label rendered on calendar navigation bar.                                                                                                                                                                                                                                                                                                                                                      | `undefined`                                           | `\"polite\"`                                                                                                                                                                                                                                                                                           |\n| navigationLabel         | Content of a label rendered on calendar navigation bar.                                                                                                                                                                                                                                                                                                                                                                    | (default label)                                       | `` ({ date, label, locale, view }) => `Current view: ${view}, date: ${date.toLocaleDateString(locale)}`  ``                                                                                                                                                                                          |\n| nextAriaLabel           | `aria-label` attribute of the \"next\" button on the navigation pane.                                                                                                                                                                                                                                                                                                                                                        | n/a                                                   | `\"Next\"`                                                                                                                                                                                                                                                                                             |\n| nextLabel               | Content of the \"next\" button on the navigation pane. Setting the value explicitly to null will hide the icon.                                                                                                                                                                                                                                                                                                              | `\"›\"`                                                 | <ul><li>String: `\"›\"`</li><li>React element: `<NextIcon />`</li></ul>                                                                                                                                                                                                                                |\n| next2AriaLabel          | `aria-label` attribute of the \"next on higher level\" button on the navigation pane.                                                                                                                                                                                                                                                                                                                                        | n/a                                                   | `\"Jump forwards\"`                                                                                                                                                                                                                                                                                    |\n| next2Label              | Content of the \"next on higher level\" button on the navigation pane. Setting the value explicitly to null will hide the icon.                                                                                                                                                                                                                                                                                              | `\"»\"`                                                 | <ul><li>String: `\"»\"`</li><li>React element: `<DoubleNextIcon />`</li></ul>                                                                                                                                                                                                                          |\n| onActiveStartDateChange | Function called when the user navigates from one view to another using previous/next button. Note that this function will not be called when e.g. drilling up from January 2021 to 2021 or drilling down the other way around.<br />`action` signifies the reason for active start date change and can be one of the following values: `\"prev\"`, `\"prev2\"`, `\"next\"`, `\"next2\"`, `\"drillUp\"`, `\"drillDown\"`, `\"onChange\"`. | n/a                                                   | `({ action, activeStartDate, value, view }) => alert('Changed view to: ', activeStartDate, view)`                                                                                                                                                                                                    |\n| onChange                | Function called when the user clicks an item (day on month view, month on year view and so on) on the most detailed view available.                                                                                                                                                                                                                                                                                        | n/a                                                   | `(value, event) => alert('New date is: ', value)`                                                                                                                                                                                                                                                    |\n| onViewChange            | Function called when the user navigates from one view to another using drill up button or by clicking a tile.<br />`action` signifies the reason for view change and can be one of the following values: `\"prev\"`, `\"prev2\"`, `\"next\"`, `\"next2\"`, `\"drillUp\"`, `\"drillDown\"`, `\"onChange\"`.                                                                                                                               | n/a                                                   | `({ action, activeStartDate, value, view }) => alert('New view is: ', view)`                                                                                                                                                                                                                         |\n| onClickDay              | Function called when the user clicks a day.                                                                                                                                                                                                                                                                                                                                                                                | n/a                                                   | `(value, event) => alert('Clicked day: ', value)`                                                                                                                                                                                                                                                    |\n| onClickDecade           | Function called when the user clicks a decade.                                                                                                                                                                                                                                                                                                                                                                             | n/a                                                   | `(value, event) => alert('Clicked decade: ', value)`                                                                                                                                                                                                                                                 |\n| onClickMonth            | Function called when the user clicks a month.                                                                                                                                                                                                                                                                                                                                                                              | n/a                                                   | `(value, event) => alert('Clicked month: ', value)`                                                                                                                                                                                                                                                  |\n| onClickWeekNumber       | Function called when the user clicks a week number.                                                                                                                                                                                                                                                                                                                                                                        | n/a                                                   | `(weekNumber, date, event) => alert('Clicked week: ', weekNumber, 'that starts on: ', date)`                                                                                                                                                                                                         |\n| onClickYear             | Function called when the user clicks a year.                                                                                                                                                                                                                                                                                                                                                                               | n/a                                                   | `(value, event) => alert('Clicked year: ', value)`                                                                                                                                                                                                                                                   |\n| onDrillDown             | Function called when the user drills down by clicking a tile.                                                                                                                                                                                                                                                                                                                                                              | n/a                                                   | `({ activeStartDate, view }) => alert('Drilled down to: ', activeStartDate, view)`                                                                                                                                                                                                                   |\n| onDrillUp               | Function called when the user drills up by clicking drill up button.                                                                                                                                                                                                                                                                                                                                                       | n/a                                                   | `({ activeStartDate, view }) => alert('Drilled up to: ', activeStartDate, view)`                                                                                                                                                                                                                     |\n| prevAriaLabel           | `aria-label` attribute of the \"previous\" button on the navigation pane.                                                                                                                                                                                                                                                                                                                                                    | n/a                                                   | `\"Previous\"`                                                                                                                                                                                                                                                                                         |\n| prevLabel               | Content of the \"previous\" button on the navigation pane. Setting the value explicitly to null will hide the icon.                                                                                                                                                                                                                                                                                                          | `\"‹\"`                                                 | <ul><li>String: `\"‹\"`</li><li>React element: `<PreviousIcon />`</li></ul>                                                                                                                                                                                                                            |\n| prev2AriaLabel          | `aria-label` attribute of the \"previous on higher level\" button on the navigation pane.                                                                                                                                                                                                                                                                                                                                    | n/a                                                   | `\"Jump backwards\"`                                                                                                                                                                                                                                                                                   |\n| prev2Label              | Content of the \"previous on higher level\" button on the navigation pane. Setting the value explicitly to null will hide the icon.                                                                                                                                                                                                                                                                                          | `\"«\"`                                                 | <ul><li>String: `\"«\"`</li><li>React element: `<DoublePreviousIcon />`</li></ul>                                                                                                                                                                                                                      |\n| returnValue             | Which dates shall be passed by the calendar to the onChange function and onClick{Period} functions. Can be `\"start\"`, `\"end\"` or `\"range\"`. The latter will cause an array with start and end values to be passed.                                                                                                                                                                                                         | `\"start\"`                                             | `\"range\"`                                                                                                                                                                                                                                                                                            |\n| showDoubleView          | Whether to show two months/years/… at a time instead of one. Defaults `showFixedNumberOfWeeks` prop to be `true`.                                                                                                                                                                                                                                                                                                          | `false`                                               | `true`                                                                                                                                                                                                                                                                                               |\n| showFixedNumberOfWeeks  | Whether to always show fixed number of weeks (6). Forces `showNeighboringMonth` prop to be `true`.                                                                                                                                                                                                                                                                                                                         | `false`                                               | `true`                                                                                                                                                                                                                                                                                               |\n| showNavigation          | Whether a navigation bar with arrows and title shall be rendered.                                                                                                                                                                                                                                                                                                                                                          | `true`                                                | `false`                                                                                                                                                                                                                                                                                              |\n| showNeighboringMonth    | Whether days from previous or next month shall be rendered if the month doesn't start on the first day of the week or doesn't end on the last day of the week, respectively.                                                                                                                                                                                                                                               | `true`                                                | `false`                                                                                                                                                                                                                                                                                              |\n| selectRange             | Whether the user shall select two dates forming a range instead of just one. Note: This feature will make React-Calendar return array with two dates regardless of returnValue setting.                                                                                                                                                                                                                                    | `false`                                               | `true`                                                                                                                                                                                                                                                                                               |\n| showWeekNumbers         | Whether week numbers shall be shown at the left of MonthView or not.                                                                                                                                                                                                                                                                                                                                                       | `false`                                               | `true`                                                                                                                                                                                                                                                                                               |\n| tileClassName           | Class name(s) that will be applied to a given calendar item (day on month view, month on year view and so on).                                                                                                                                                                                                                                                                                                             | n/a                                                   | <ul><li>String: `\"class1 class2\"`</li><li>Array of strings: `[\"class1\", \"class2 class3\"]`</li><li>Function: `({ activeStartDate, date, view }) => view === 'month' && date.getDay() === 3 ? 'wednesday' : null`</li></ul>                                                                            |\n| tileContent             | Allows to render custom content within a given calendar item (day on month view, month on year view and so on).                                                                                                                                                                                                                                                                                                            | n/a                                                   | <ul><li>String: `\"Sample\"`</li><li>React element: `<TileContent />`</li><li>Function: `({ activeStartDate, date, view }) => view === 'month' && date.getDay() === 0 ? <p>It's Sunday!</p> : null`</li></ul>                                                                                          |\n| tileDisabled            | Pass a function to determine if a certain day should be displayed as disabled.                                                                                                                                                                                                                                                                                                                                             | n/a                                                   | <ul><li>Function: `({activeStartDate, date, view }) => date.getDay() === 0`</li></ul>                                                                                                                                                                                                                |\n| value                   | Calendar value. Can be either one value or an array of two values. If you wish to use React-Calendar in an uncontrolled way, use `defaultValue` instead.                                                                                                                                                                                                                                                                   | n/a                                                   | <ul><li>Date: `new Date()`</li><li>String: `2017-01-01`</li><li>An array of dates: `[new Date(2017, 0, 1), new Date(2017, 7, 1)]`</li><li>An array of strings: `['2017-01-01', '2017-08-01']`</li></ul>                                                                                              |\n| view                    | Determines which calendar view shall be opened. Does not disable navigation. Can be `\"month\"`, `\"year\"`, `\"decade\"` or `\"century\"`. If you wish to use React-Calendar in an uncontrolled way, use `defaultView` instead.                                                                                                                                                                                                   | The most detailed view allowed                        | `\"year\"`                                                                                                                                                                                                                                                                                             |\n\n### MonthView, YearView, DecadeView, CenturyView\n\nDisplays a given month, year, decade and a century, respectively.\n\n#### Props\n\n| Prop name       | Description                                                                                                                                                                                                                          | Default value | Example values                                                                                                                                                                                           |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| activeStartDate | The beginning of a period that shall be displayed.                                                                                                                                                                                   | n/a           | `new Date(2017, 0, 1)`                                                                                                                                                                                   |\n| hover           | The date over which the user is hovering. Used only when `selectRange` is enabled, to render a “WIP” range when the user is selecting range.                                                                                         | n/a           | `new Date(2017, 0, 1)`                                                                                                                                                                                   |\n| maxDate         | Maximum date that the user can select. Periods partially overlapped by maxDate will also be selectable, although react-calendar will ensure that no later date is selected.                                                          | n/a           | Date: `new Date()`                                                                                                                                                                                       |\n| minDate         | Minimum date that the user can select. Periods partially overlapped by minDate will also be selectable, although react-calendar will ensure that no earlier date is selected.                                                        | n/a           | Date: `new Date()`                                                                                                                                                                                       |\n| onClick         | Function called when the user clicks an item (day on month view, month on year view and so on).                                                                                                                                      | n/a           | `(value) => alert('New date is: ', value)`                                                                                                                                                               |\n| tileClassName   | Class name(s) that will be applied to a given calendar item (day on month view, month on year view and so on).                                                                                                                       | n/a           | <ul><li>String: `\"class1 class2\"`</li><li>Array of strings: `[\"class1\", \"class2 class3\"]`</li><li>Function: `({ date, view }) => view === 'month' && date.getDay() === 3 ? 'wednesday' : null`</li></ul> |\n| tileContent     | Allows to render custom content within a given item (day on month view, month on year view and so on). Note: For tiles with custom content you might want to set fixed height of `react-calendar__tile` to ensure consistent layout. | n/a           | `({ date, view }) => view === 'month' && date.getDay() === 0 ? <p>It's Sunday!</p> : null`                                                                                                               |\n| value           | Calendar value. Can be either one value or an array of two values.                                                                                                                                                                   | n/a           | <ul><li>Date: `new Date()`</li><li>An array of dates: `[new Date(2017, 0, 1), new Date(2017, 7, 1)]`</li><li>String: `2017-01-01`</li><li>An array of strings: `['2017-01-01', '2017-08-01']`</li></ul>  |\n\n## Useful links\n\n- [React-Calendar Wiki](https://github.com/wojtekmaj/react-calendar/wiki)\n\n## License\n\nThe MIT License.\n\n## Author\n\n<table>\n  <tr>\n    <td>\n      <img src=\"https://github.com/wojtekmaj.png?s=100\" width=\"100\">\n    </td>\n    <td>\n      Wojciech Maj<br />\n      <a href=\"mailto:kontakt@wojtekmaj.pl\">kontakt@wojtekmaj.pl</a><br />\n      <a href=\"https://wojtekmaj.pl\">https://wojtekmaj.pl</a>\n    </td>\n  </tr>\n</table>\n\n## Thank you\n\n### Sponsors\n\nThank you to all our sponsors! [Become a sponsor](https://opencollective.com/react-calendar#sponsor) and get your image on our README on GitHub.\n\n<a href=\"https://opencollective.com/react-calendar#sponsors\" target=\"_blank\"><img src=\"https://opencollective.com/react-calendar/sponsors.svg?width=890\"></a>\n\n### Backers\n\nThank you to all our backers! [Become a backer](https://opencollective.com/react-calendar#backer) and get your image on our README on GitHub.\n\n<a href=\"https://opencollective.com/react-calendar#backers\" target=\"_blank\"><img src=\"https://opencollective.com/react-calendar/backers.svg?width=890\"></a>\n\n### Top Contributors\n\nThank you to all our contributors that helped on this project!\n\n![Top Contributors](https://opencollective.com/react-calendar/contributors.svg?width=890&button=false)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017–2023 Wojciech Maj\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-calendar/-/react-calendar-4.2.1.tgz#3706bfd5ff727f877c8a60c36bc352b4f8fdee55",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-calendar/-/react-calendar-4.2.1.tgz",
    "hash": "3706bfd5ff727f877c8a60c36bc352b4f8fdee55",
    "integrity": "sha512-T5oKXD+KLy/g6bmJJkZ7E9wj0iRMesWMZcrC7q2kI6ybOsu9NlPQx8uXJzG4A4C3Sh5Xi0deznyzWIVsUpF8tA==",
    "registry": "npm",
    "packageName": "react-calendar",
    "cacheIntegrity": "sha512-T5oKXD+KLy/g6bmJJkZ7E9wj0iRMesWMZcrC7q2kI6ybOsu9NlPQx8uXJzG4A4C3Sh5Xi0deznyzWIVsUpF8tA== sha1-Nwa/1f9yf4d8imDDa8NStPj97lU="
  },
  "registry": "npm",
  "hash": "3706bfd5ff727f877c8a60c36bc352b4f8fdee55"
}