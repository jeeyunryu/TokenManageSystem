{
  "manifest": {
    "name": "get-iterator",
    "version": "1.0.2",
    "description": "Get the default iterator or async iterator for an Iterable.",
    "main": "index.js",
    "scripts": {
      "test": "standard && nyc --reporter=lcov --reporter=text ava --verbose"
    },
    "keywords": [
      "iterator",
      "iterable",
      "get",
      "getter",
      "@@iterator",
      "Symbol.iterator",
      "Symbol.asyncIterator"
    ],
    "author": {
      "name": "Alan Shaw"
    },
    "license": "MIT",
    "devDependencies": {
      "ava": "^1.0.0-rc.1",
      "babel-eslint": "^10.0.1",
      "nyc": "^13.1.0",
      "standard": "^12.0.1"
    },
    "ava": {
      "babel": false,
      "compileEnhancements": false,
      "failWithoutAssertions": false
    },
    "standard": {
      "parser": "babel-eslint"
    },
    "dependencies": {},
    "repository": {
      "type": "git",
      "url": "git+https://github.com/alanshaw/get-iterator.git"
    },
    "bugs": {
      "url": "https://github.com/alanshaw/get-iterator/issues"
    },
    "homepage": "https://github.com/alanshaw/get-iterator#readme",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-get-iterator-1.0.2-cd747c02b4c084461fac14f48f6b45a80ed25c82-integrity/node_modules/get-iterator/package.json",
    "readmeFilename": "README.md",
    "readme": "# get-iterator\n\n[![Build Status](https://travis-ci.org/alanshaw/get-iterator.svg?branch=master)](https://travis-ci.org/alanshaw/get-iterator) [![dependencies Status](https://david-dm.org/alanshaw/get-iterator/status.svg)](https://david-dm.org/alanshaw/get-iterator) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> Get the default iterator or async iterator for an Iterable.\n\nReduce the boilerplate of extracting the iterator from an object when you don't know if the object is an (async) iterable or already an (async) iterator.\n\n## Install\n\n```sh\nnpm install get-iterator\n```\n\n## Usage\n\n```js\nconst getIterator = require('get-iterator')\nconst input = [1, 2, 3]\nconst it = getIterator(input)\nconsole.log(it.next()) // { done: false, value: 1 }\nconsole.log(it.next()) // { done: false, value: 2 }\nconsole.log(it.next()) // { done: false, value: 3 }\nconsole.log(it.next()) // { done: true, value: undefined }\n```\n\n### Examples\n\nRegular iterator from iterable:\n\n```js\nconst getIterator = require('get-iterator')\n\nconst input = [1, 2, 3]\nconst iterable = {\n  [Symbol.iterator] () {\n    let i = 0\n    return {\n      next () {\n        const value = input[i++]\n        return { done: !value, value }\n      }\n    }\n  }\n}\n\nconst it = getIterator(input)\nconsole.log(it.next()) // { done: false, value: 1 }\nconsole.log(it.next()) // { done: false, value: 2 }\nconsole.log(it.next()) // { done: false, value: 3 }\nconsole.log(it.next()) // { done: true, value: undefined }\n```\n\nAsync iterator from iterable:\n\n```js\nconst getIterator = require('get-iterator')\n\nconst input = [1, 2, 3]\nconst iterable = {\n  [Symbol.asyncIterator] () {\n    let i = 0\n    return {\n      async next () {\n        const value = await new Promise((resolve, reject) => {\n          setTimeout(() => resolve(input[i++]), 10)\n        })\n        return { done: !value, value }\n      }\n    }\n  }\n}\n\nconst it = getIterator(iterable)\nconsole.log(await it.next()) // { done: false, value: 1 }\nconsole.log(await it.next()) // { done: false, value: 2 }\nconsole.log(await it.next()) // { done: false, value: 3 }\nconsole.log(await it.next()) // { done: true, value: undefined }\n```\n\nAlready an iterator (probably):\n\n```js\nconst getIterator = require('get-iterator')\n\nconst input = [1, 2, 3]\nlet i = 0\nconst iterator = {\n  next () {\n    const value = input[i++]\n    return { done: !value, value }\n  }\n}\n\nconst it = getIterator(iterator)\nconsole.log(it.next()) // { done: false, value: 1 }\nconsole.log(it.next()) // { done: false, value: 2 }\nconsole.log(it.next()) // { done: false, value: 3 }\nconsole.log(it.next()) // { done: true, value: undefined }\n```\n\n## API\n\n```js\nconst getIterator = require('get-iterator')\n```\n\n### `getIterator(obj)`\n\nGet the default iterator or async iterator for an Iterable. If `obj` is already an iterator (i.e. has a `next` function) return it, since it's probably already an iterator.\n\nThis function will throw if `obj` is not an iterable or iterator.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| obj | [`Iterable`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol)\\|[`Iterator`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol) | The object to extract the iterator from (may be an iterator already). |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| [`Iterator`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol) | The result of calling `obj[Symbol.iterator]()` or `obj[Symbol.asyncIterator]()` or simply the passed `obj` if it is already an iterator. |\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/alanshaw/get-iterator/issues/new) or submit PRs.\n\n## License\n\n[MIT](https://github.com/alanshaw/get-iterator/blob/master/LICENSE) Â© Alan Shaw\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Alan Shaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-iterator/-/get-iterator-1.0.2.tgz#cd747c02b4c084461fac14f48f6b45a80ed25c82",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-iterator/-/get-iterator-1.0.2.tgz",
    "hash": "cd747c02b4c084461fac14f48f6b45a80ed25c82",
    "integrity": "sha512-v+dm9bNVfOYsY1OrhaCrmyOcYoSeVvbt+hHZ0Au+T+p1y+0Uyj9aMaGIeUTT6xdpRbWzDeYKvfOslPhggQMcsg==",
    "registry": "npm",
    "packageName": "get-iterator",
    "cacheIntegrity": "sha512-v+dm9bNVfOYsY1OrhaCrmyOcYoSeVvbt+hHZ0Au+T+p1y+0Uyj9aMaGIeUTT6xdpRbWzDeYKvfOslPhggQMcsg== sha1-zXR8ArTAhEYfrBT0j2tFqA7SXII="
  },
  "registry": "npm",
  "hash": "cd747c02b4c084461fac14f48f6b45a80ed25c82"
}