{
  "manifest": {
    "name": "tdigest",
    "version": "0.1.2",
    "description": "javascript implementation of Dunning's T-Digest for streaming quantile approximation",
    "main": "tdigest.js",
    "scripts": {
      "test": "mocha specs"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/welch/tdigest.git"
    },
    "keywords": [
      "tdigest",
      "percentile",
      "quantile",
      "histogram",
      "approximation"
    ],
    "author": {
      "name": "Will Welch",
      "email": "welch@quietplease.com",
      "url": "http://quietplease.com/"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/welch/tdigest/issues"
    },
    "homepage": "https://github.com/welch/tdigest",
    "dependencies": {
      "bintrees": "1.0.2"
    },
    "devDependencies": {
      "better-assert": "^1.0.2",
      "chai": "^3.0.0",
      "grunt": "^0.4.5",
      "grunt-pure-cjs": "^1.4.0",
      "mocha": "^2.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-tdigest-0.1.2-integrity/node_modules/tdigest/package.json",
    "readmeFilename": "README.md",
    "readme": "tdigest\n============\n[![Build Status][travis-image]][travis-url] [![NPM version][npm-image]][npm-url] [![NPM download][download-image]][npm-url]\n\nJavascript implementation of Dunning's T-Digest for streaming quantile approximation\n\nThe T-Digest is a data structure and algorithm for constructing an\napproximate distribution for a collection of real numbers presented as a\nstream. The algorithm makes no guarantees, but behaves well enough in\npractice that implementations have been included in Apache Mahout and\nElasticSearch for computing summaries and approximate order\nstatistics over a stream.\n\nFor an overview of T-Digest's behavior, see Davidson-Pilon's\n[blog post](http://dataorigami.net/blogs/napkin-folding/19055451-percentile-and-quantile-estimation-of-big-data-the-t-digest) regarding a python implementation. For more details,\nthere are the [tdigest paper](https://github.com/tdunning/t-digest/blob/master/docs/t-digest-paper/histo.pdf) and [reference implementation](https://github.com/tdunning/t-digest) (Java).\nThis javascript implementation is based on a reading of the paper,\nwith some boundary and performance tweaks.\n\n**changes in 0.1.2:**\n\nUpdated the bintree dependency to 1.0.2 to pick up its licencing declaration\n\n**changes in 0.1.1:**\n\n1. percentile on an empty digest returns *undefined* or array of *undefined*\n   instead of NaN\n\n2. upgraded bintrees to get bugfix.\n\n3. bugfix for discrete percentile and p_rank, make boundary conditions\n   conform to standard definition.\n\n**changes in 0.1.0:**\n\nDiscrete mode: when a TDigest is created with delta=false, the sample\ndistribution is treated as discrete. TDigest behavior is disabled,\ndiffering samples are never merged (they needn't even be numeric), and\npercentiles are reported as nearest exact data values rather than\ninterpolated.\n\nDigest: distribution digest structure. Starts in exact histogram\n(discrete) mode, remains in exact mode for reasonable numbers of\ndistinct values as sample size inreases, and automatically switches to\nTDigest mode for large samples that appear to be from a continuous\ndistribution.\n\nRenamed quantile() -> p_rank(), Percentile Rank.\n\npercentile() and p_rank() now accept arrays or singleton arguments.\n\n**changes in 0.0.7:**\n\nA `grunt dist` task has been added to create a UMD-wrapped version of tdigest\nand dependencies for importing as a standalone module in client-side javascript.\n\nbugfixes and speed improvements.\n\n**changes in 0.0.5:**\n\nAPI Overhaul:\n* asArray() -> toArray()\n* redigest() -> compress()\n* digest() -> push()\n* pushing an array no longer triggers compression\n\nbugfixes and speed improvements.\n\nquickstart\n------------\n\n#### node.js:\n\n```\nnpm install tdigest\n```\n\n```javascript\nvar TDigest = require('tdigest').TDigest;\nvar x=[], N = 100000;\nfor (var i = 0 ; i < N ; i += 1) {\n    x.push(Math.random() * 10 - 5);\n};\ntd = new TDigest();\ntd.push(x);\ntd.compress();\nconsole.log(td.summary());\nconsole.log(\"median ~ \"+td.percentile(0.5));\n```\n\nSee also [example.js](https://github.com/welch/tdigest/blob/master/example.js) in this package.\n\n#### In the browser:\n\nThe `grunt dist` task has been configured to generate\na self-contained [UMD-wrapped](https://github.com/umdjs/umd) version of tdigest in dist/tdigest.js.\n\nEmbed it in HTML like this:\n```\n<script src=\"dist/tdigest.js\"></script>\n<script>\n    var td = new this.tdigest.TDigest();\n    for (var i=0; i < 1000000; i++) {\n        td.push(Math.random());\n    }\n    td.compress();\n    document.write(td.summary())\n</script>\n```\n\nSee also [example.html](https://github.com/welch/tdigest/blob/master/example.html) in this package.\n\ndependencies\n-------------\n`bintrees`: [https://www.npmjs.com/package/bintrees](https://www.npmjs.com/package/bintrees)\n\n\n[travis-image]: https://travis-ci.org/welch/tdigest.svg?branch=master\n[travis-url]: https://travis-ci.org/welch/tdigest\n[npm-image]: http://img.shields.io/npm/v/tdigest.svg\n[download-image]: http://img.shields.io/npm/dm/tdigest.svg\n[npm-url]: https://www.npmjs.org/package/tdigest\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Will Welch\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/tdigest/-/tdigest-0.1.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/tdigest/-/tdigest-0.1.2.tgz",
    "hash": "",
    "integrity": "sha512-+G0LLgjjo9BZX2MfdvPfH+MKLCrxlXSYec5DaPYP1fe6Iyhf0/fSmJ0bFiZ1F8BT6cGXl2LpltQptzjXKWEkKA==",
    "registry": "npm",
    "packageName": "tdigest",
    "cacheIntegrity": "sha512-+G0LLgjjo9BZX2MfdvPfH+MKLCrxlXSYec5DaPYP1fe6Iyhf0/fSmJ0bFiZ1F8BT6cGXl2LpltQptzjXKWEkKA== sha1-lsZLrE/xB0a5ELDiO1FXlOEvrO0="
  },
  "registry": "npm",
  "hash": "f86d0b2e08e3a3d0595f631f76f3df1fe30a2c2af195749879ce4368f60fd5f7ba23285fd3f7d2989d1b16267517c053e9c1979762e996d429b738d729612428"
}