{
  "manifest": {
    "name": "@web-std/blob",
    "version": "3.0.4",
    "description": "Web API compatible Blob implementation",
    "keywords": [
      "blob",
      "typed"
    ],
    "files": [
      "src",
      "dist/src",
      "License.md",
      "Readme.md"
    ],
    "type": "module",
    "module": "./src/lib.js",
    "main": "./dist/src/lib.node.cjs",
    "types": "./dist/src/lib.d.ts",
    "exports": {
      ".": {
        "browser": "./src/lib.js",
        "require": "./dist/src/lib.node.cjs",
        "import": "./src/lib.node.js",
        "types": "./dist/src/lib.d.ts"
      }
    },
    "dependencies": {
      "web-encoding": "1.1.5",
      "@web-std/stream": "1.0.0"
    },
    "author": {
      "name": "Irakli Gozalishvili",
      "email": "dev@gozala.io",
      "url": "https://gozala.io"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/web-std/io"
    },
    "license": "MIT",
    "devDependencies": {
      "@types/node": "15.0.2",
      "@web-std/fetch": "^3.0.0",
      "git-validate": "2.2.4",
      "husky": "^6.0.0",
      "lint-staged": "^11.0.0",
      "playwright-test": "^7.2.0",
      "prettier": "^2.3.0",
      "rimraf": "3.0.2",
      "rollup": "2.47.0",
      "rollup-plugin-multi-input": "1.2.0",
      "typescript": "^4.4.4",
      "uvu": "0.5.2"
    },
    "scripts": {
      "check": "tsc --build",
      "build": "npm run build:cjs && npm run build:types",
      "build:cjs": "rollup --config rollup.config.js",
      "build:types": "tsc --build",
      "prepare": "npm run build",
      "test:es": "uvu test all.spec.js",
      "test:web": "playwright-test -r uvu test/web.spec.js",
      "test:cjs": "rimraf dist && npm run build && node dist/test/all.spec.cjs",
      "test": "npm run test:es && npm run test:web && npm run test:cjs",
      "precommit": "lint-staged"
    },
    "lint-staged": {
      "*.js": [
        "prettier --no-semi --write",
        "git add"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@web-std-blob-3.0.4-integrity/node_modules/@web-std/blob/package.json",
    "readmeFilename": "Readme.md",
    "readme": "# @web-std/blob\n\n[![ci][ci.icon]][ci.url]\n[![package][version.icon] ![downloads][downloads.icon]][package.url]\n[![styled with prettier][prettier.icon]][prettier.url]\n\nWeb API compatible [Blob][] for nodejs.\n\n## Comparison to Alternatives\n\n#### [fetch-blob][]\n\nThe reason this library exists is because [fetch-blob][] chooses to compromise\nWeb API compatibility of [`blob.stream()`][w3c blob.stream] by using nodejs\nnative [Readable][] stream. We found this to be problematic when sharing code\nacross nodejs and browser runtimes. Instead this library stays true to the\nspecification by using [ReadableStream][] implementation from [@web-std/stream][]\nlibrary even if that is less convenient in nodejs context.\n\n> Note: Both node [Readable][] streams and web [ReadableStream][] implement\n> `AsyncIterable` interface and in theory either could be used with [for await][]\n> loops. In practice however major browsers do not yet ship `AsyncIterable`\n> support for [ReadableStream][]s which in our experience makes choice made by\n> [node-fetch][] impractical.\n\n[fetch-blob][] is build around node [Buffer][]s. This implementation is built\naround standard [Uint8Array][]s.\n\n[fetch-blob] chooses to use [WeakMap][]s for encapsulating private state. This\nlibrary chooses to use to use properties with names that start with `_`. While\nthose properties aren't truly private they do have better performance profile\nand make it possible to interop with this library, which we found impossible\nto do with [node-fetch][].\n\n### Usage\n\n```js\nimport { Blob } from \"@web-std/blob\"\nconst blob = new Blob([\"hello\", new TextEncoder().encode(\"world\")])\nfor await (const chunk of blob.stream()) {\n  console.log(chunk)\n}\n```\n\n### Usage from Typescript\n\nThis library makes use of [typescript using JSDOC annotations][ts-jsdoc] and\nalso generates type definitions along with typed definition maps. So you should\nbe able to get all the type inference out of the box.\n\n## Install\n\n    npm install @web-std/blob\n\n[ci.icon]: https://github.com/web-std/io/workflows/blob/badge.svg\n[ci.url]: https://github.com/web-std/io/actions/workflows/blob.yml\n[version.icon]: https://img.shields.io/npm/v/@web-std/blob.svg\n[downloads.icon]: https://img.shields.io/npm/dm/@web-std/blob.svg\n[package.url]: https://npmjs.org/package/@web-std/blob\n[downloads.image]: https://img.shields.io/npm/dm/@web-std/blob.svg\n[downloads.url]: https://npmjs.org/package/@web-std/blob\n[prettier.icon]: https://img.shields.io/badge/styled_with-prettier-ff69b4.svg\n[prettier.url]: https://github.com/prettier/prettier\n[blob]: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n[fetch-blob]: https://github.com/node-fetch/fetch-blob\n[readablestream]: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n[readable]: https://nodejs.org/api/stream.html#stream_readable_streams\n[w3c blob.stream]: https://w3c.github.io/FileAPI/#dom-blob-stream\n[@web-std/stream]: https://github.com/web-std/io/tree/main/stream\n[for await]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n[buffer]: https://nodejs.org/api/buffer.html\n[weakmap]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\n[ts-jsdoc]: https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html\n[uint8array]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\n[node-fetch]: https://github.com/node-fetch/\n",
    "licenseText": "Copyright 2019 Irakli Gozalishvili. All rights reserved.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@web-std/blob/-/blob-3.0.4.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@web-std/blob/-/blob-3.0.4.tgz",
    "hash": "",
    "integrity": "sha512-+dibyiw+uHYK4dX5cJ7HA+gtDAaUUe6JsOryp2ZpAC7h4ICsh49E34JwHoEKPlPvP0llCrNzz45vvD+xX5QDBg==",
    "registry": "npm",
    "packageName": "@web-std/blob",
    "cacheIntegrity": "sha512-+dibyiw+uHYK4dX5cJ7HA+gtDAaUUe6JsOryp2ZpAC7h4ICsh49E34JwHoEKPlPvP0llCrNzz45vvD+xX5QDBg== sha1-3WemhVRzMZFUKNaecjx9ogFcP8U="
  },
  "registry": "npm",
  "hash": "f9d89bca2c3eb8760ae1d5f9709ec703e82d0c069451ee89b0eaf2a76669002ee1e080ac878f44df82701e810a3e53ef3f49650ab373cf8e6fbc3fb15f940306"
}