{
  "manifest": {
    "name": "set-delayed-interval",
    "version": "1.0.0",
    "description": "An asynchronous setInterval that is properly delayed using promises and can be delayed on boot",
    "main": "src/index.js",
    "author": {
      "name": "Vasco Santos"
    },
    "scripts": {
      "test": "aegir test -t node -t browser",
      "test:browser": "aegir test -t browser",
      "test:node": "aegir test -t node",
      "lint": "aegir lint",
      "release": "aegir release --docs",
      "release-minor": "aegir release --type minor --docs",
      "release-major": "aegir release -t node -t browser --type major --docs",
      "build": "aegir build"
    },
    "files": [
      "src",
      "dist"
    ],
    "devDependencies": {
      "aegir": "^28.1.0",
      "delay": "^4.4.0",
      "p-wait-for": "^3.1.0",
      "sinon": "^9.2.1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vasco-santos/set-delayed-interval.git"
    },
    "keywords": [
      "doh",
      "dns",
      "http"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vasco-santos/set-delayed-interval/issues"
    },
    "homepage": "https://github.com/vasco-santos/set-delayed-interval#readme",
    "contributors": [
      {
        "name": "Vasco Santos",
        "email": "vasco.santos@ua.pt"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-set-delayed-interval-1.0.0-integrity/node_modules/set-delayed-interval/package.json",
    "readmeFilename": "README.md",
    "readme": "# set-delayed-interval\n\n[![Build Status](https://travis-ci.org/vasco-santos/set-delayed-interval.svg?branch=main)](https://travis-ci.org/vasco-santos/set-delayed-interval)\n[![dependencies Status](https://david-dm.org/vasco-santos/set-delayed-interval/status.svg)](https://david-dm.org/vasco-santos/set-delayed-interval)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> An asynchronous setInterval that is properly delayed using promises and can be delayed on boot\n\n## Motivation\n\nThe native implementation of `setInterval` expects synchronous functions to be executed. When asynchronous functions are provided, some unexpected behaviors might appear. This module mimics the `setInterval` native functionality with support for promises in a way that the interval timer is delayed by the execution of that promise. This results in equal stop times for each run, as soon as the promise is resolved.\n\nFor some scenarios, it is useful to add a start delay before running a recurrent task. This module also supports a custom delay before the interval starts. The `clearDelayedInterval` can stop both the initial delay and the interval.\n\n## Install\n\n```sh\nnpm i set-delayed-interval\n```\n\n## Usage\n\n```js\nconst { setDelayedInterval, clearDelayedInterval } = require('set-delayed-interval')\n\nconst task = async () => {\n  /// ....\n}\n\n// After 100ms, run the task recurrently with 50ms intervals\nconst id = setDelayedInterval(task, 50, 100)\n\n// ...\nclearDelayedInterval(id)\n```\n\n\n## API\n\n### `setDelayedInterval`\n\n#### Parameters\n\n|  Name  | Type | Description |\n|--------|------|-------------|\n|  task  | `() => Promise` | recurrent task to run |\n| interval | `number` | interval between each task (in ms) |\n| [delay] | `number` | delay before first run (in ms). Defaults to `interval`. |\n\n#### Returns\n\n| Type | Description |\n|------|-------------|\n| `string` | interval id |\n\n### `clearDelayedInterval`\n\n#### Parameters\n\n|  Name  | Type | Description |\n|--------|------|-------------|\n|  id  | `string` | interval id to clear |\n\n## Error Handling\n\nThis module throws task errors on the global context. For handling your tasks errors, it is recommended to wrap the task async code with a `try catch` block, or your can catch the global errors with `process.once('uncaughtException', (err) => {})` in Node.js or `window.onerror = (err) => {}` in the browser.\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/vasco-santos/set-delayed-interval/issues/new) or submit PRs.\n\n## License\n\n[MIT](LICENSE) Â© Vasco Santos\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Vasco Santos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/set-delayed-interval/-/set-delayed-interval-1.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/set-delayed-interval/-/set-delayed-interval-1.0.0.tgz",
    "hash": "",
    "integrity": "sha512-29fhAwuZlLcuBnW/EwxvLcg2D3ELX+VBDNhnavs3YYkab72qmrcSeQNVdzl8EcPPahGQXhBM6MKdPLCQGMDakw==",
    "registry": "npm",
    "packageName": "set-delayed-interval",
    "cacheIntegrity": "sha512-29fhAwuZlLcuBnW/EwxvLcg2D3ELX+VBDNhnavs3YYkab72qmrcSeQNVdzl8EcPPahGQXhBM6MKdPLCQGMDakw== sha1-H3wGV4CjZfECUPioDivhAXXqA4g="
  },
  "registry": "npm",
  "hash": "dbd7e1030b9994b72e0675bf130c6f2dc8360f710b5fe5410cd8676afb3761891a6fbdaa9ab71279035577397c11c3cf6a11905e104ce8c29d3cb09018c0da93"
}