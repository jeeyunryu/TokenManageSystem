{
  "manifest": {
    "name": "@isaacs/string-locale-compare",
    "version": "1.1.0",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "description": "Compare strings with Intl.Collator if available, falling back to String.localeCompare otherwise",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/isaacs/string-locale-compare"
    },
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "https://izs.me"
    },
    "license": "ISC",
    "scripts": {
      "test": "tap",
      "snap": "tap",
      "preversion": "npm test",
      "postversion": "npm publish",
      "prepublishOnly": "git push origin --follow-tags"
    },
    "tap": {
      "check-coverage": true
    },
    "devDependencies": {
      "tap": "^15.0.9"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@isaacs-string-locale-compare-1.1.0-integrity/node_modules/@isaacs/string-locale-compare/package.json",
    "readmeFilename": "README.md",
    "readme": "# @isaacs/string-locale-compare\n\nCompare strings with Intl.Collator if available, falling back to\nString.localeCompare otherwise.\n\nThis also forces the use of a specific locale, to avoid using the system\nlocale, which is non-deterministic.\n\n## USAGE\n\n```js\nconst stringLocaleCompare = require('@isaacs/string-locale-compare')\n\nmyArrayOfStrings.sort(stringLocaleCompare('en'))\n\n// can also pass extra options\nmyArrayOfNumericStrings.sort(stringLocaleCompare('en', { numeric: true }))\n```\n\n## API\n\n`stringLocaleCompare(locale, [options])`\n\nLocale is required, must be a valid locale string.\n\nOptions is optional.  The following options are supported:\n\n* `sensitivity`\n* `numeric`\n* `ignorePunctuation`\n* `caseFirst`\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@isaacs/string-locale-compare/-/string-locale-compare-1.1.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@isaacs/string-locale-compare/-/string-locale-compare-1.1.0.tgz",
    "hash": "",
    "integrity": "sha512-SQ7Kzhh9+D+ZW9MA0zkYv3VXhIDNx+LzM6EJ+/65I3QY+enU6Itte7E5XX7EWrqLW2FN4n06GWzBnPoC3th2aQ==",
    "registry": "npm",
    "packageName": "@isaacs/string-locale-compare",
    "cacheIntegrity": "sha512-SQ7Kzhh9+D+ZW9MA0zkYv3VXhIDNx+LzM6EJ+/65I3QY+enU6Itte7E5XX7EWrqLW2FN4n06GWzBnPoC3th2aQ== sha1-KRwifpP9QHqW7NWYeaNYCRIOQys="
  },
  "registry": "npm",
  "hash": "490ecace187df83f995bd300d33918bf75578480cdc7e2f333a109fbfeb9237418f9e9d4e88b6d7bb1395d7ec45aba8b5b614de27d3a196cc19cfa02ded87669"
}