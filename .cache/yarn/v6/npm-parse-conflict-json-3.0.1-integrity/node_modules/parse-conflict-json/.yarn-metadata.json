{
  "manifest": {
    "name": "parse-conflict-json",
    "version": "3.0.1",
    "description": "Parse a JSON string that has git merge conflicts, resolving if possible",
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "main": "lib",
    "scripts": {
      "test": "tap",
      "snap": "tap",
      "lint": "eslint \"**/*.js\"",
      "postlint": "template-oss-check",
      "lintfix": "npm run lint -- --fix",
      "posttest": "npm run lint",
      "template-oss-apply": "template-oss-apply --force"
    },
    "tap": {
      "check-coverage": true,
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.12.0",
      "tap": "^16.0.1"
    },
    "dependencies": {
      "json-parse-even-better-errors": "^3.0.0",
      "just-diff": "^6.0.0",
      "just-diff-apply": "^5.2.0"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/parse-conflict-json.git"
    },
    "files": [
      "bin/",
      "lib/"
    ],
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.12.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-parse-conflict-json-3.0.1-integrity/node_modules/parse-conflict-json/package.json",
    "readmeFilename": "README.md",
    "readme": "# parse-conflict-json\n\nParse a JSON string that has git merge conflicts, resolving if possible.\n\nIf the JSON is valid, it just does `JSON.parse` as normal.\n\nIf either side of the conflict is invalid JSON, then an error is thrown for\nthat.\n\n## USAGE\n\n```js\n// after a git merge that left some conflicts there\nconst data = fs.readFileSync('package-lock.json', 'utf8')\n\n// reviverFunction is passed to JSON.parse as the reviver function\n// preference defaults to 'ours', set to 'theirs' to prefer the other\n// side's changes.\nconst parsed = parseConflictJson(data, reviverFunction, preference)\n\n// returns true if the data looks like a conflicted diff file\nparsed.isDiff(data)\n```\n\n## Algorithm\n\nIf `prefer` is set to `theirs`, then the vaules of `theirs` and `ours` are\nswitched in the resolver function.  (Ie, we'll apply their changes on top\nof our object, rather than the other way around.)\n\n- Parse the conflicted file into 3 pieces: `ours`, `theirs`, and `parent`\n\n- Get the [diff](https://github.com/angus-c/just#just-diff) from `parent`\n  to `ours`.\n\n- [Apply](https://github.com/angus-c/just#just-diff-apply) each change of\n  that diff to `theirs`.\n\n    If any change in the diff set cannot be applied (ie, because they\n    changed an object into a non-object and we changed a field on that\n    object), then replace the object at the specified path with the object\n    at the path in `ours`.\n",
    "licenseText": "<!-- This file is automatically added by @npmcli/template-oss. Do not edit. -->\n\nISC License\n\nCopyright npm, Inc.\n\nPermission to use, copy, modify, and/or distribute this\nsoftware for any purpose with or without fee is hereby\ngranted, provided that the above copyright notice and this\npermission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND NPM DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO\nEVENT SHALL NPM BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\nUSE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/parse-conflict-json/-/parse-conflict-json-3.0.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/parse-conflict-json/-/parse-conflict-json-3.0.1.tgz",
    "hash": "",
    "integrity": "sha512-01TvEktc68vwbJOtWZluyWeVGWjP+bZwXtPDMQVbBKzbJ/vZBif0L69KH1+cHv1SZ6e0FKLvjyHe8mqsIqYOmw==",
    "registry": "npm",
    "packageName": "parse-conflict-json",
    "cacheIntegrity": "sha512-01TvEktc68vwbJOtWZluyWeVGWjP+bZwXtPDMQVbBKzbJ/vZBif0L69KH1+cHv1SZ6e0FKLvjyHe8mqsIqYOmw== sha1-Z9xVMSeB5iqi3bkUUsdgbRlplgw="
  },
  "registry": "npm",
  "hash": "d354ef124b5cebcbf06c93ad59996ec967951968cff9b6705ed3c331055b04acdb27fbd90627f42faf4a1f5f9c1efd5267a7b414a2ef8f21def26aac22a60e9b"
}