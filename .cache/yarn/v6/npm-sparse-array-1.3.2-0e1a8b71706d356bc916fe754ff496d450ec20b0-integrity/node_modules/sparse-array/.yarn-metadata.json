{
  "manifest": {
    "name": "sparse-array",
    "version": "1.3.2",
    "description": "Sparse array implementation in JS with no dependencies",
    "main": "index.js",
    "scripts": {
      "test": "tape tests/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/pgte/js-sparse-array.git"
    },
    "keywords": [
      "sparse",
      "array",
      "sparse",
      "array"
    ],
    "author": {
      "name": "pgte"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/pgte/js-sparse-array/issues"
    },
    "homepage": "https://github.com/pgte/js-sparse-array#readme",
    "devDependencies": {
      "tape": "^4.6.3"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-sparse-array-1.3.2-0e1a8b71706d356bc916fe754ff496d450ec20b0-integrity/node_modules/sparse-array/package.json",
    "readmeFilename": "README.md",
    "readme": "# sparse-array\n\n[![Build Status](https://travis-ci.org/pgte/js-sparse-array.svg?branch=master)](https://travis-ci.org/pgte/js-sparse-array)\n\nSparse array implementation in JS with no dependencies\n\n## Install\n\n```bash\n$ npm install sparse-array --save\n```\n\n## Use\n\n### Create:\n\n```js\nconst SparseArray = require('sparse-array')\nconst arr = new SparseArray()\n```\n\n### Set, get and unset:\n\n```js\nconst index = 0\narr.set(index, 'value')\n\narr.get(index) // 'value'\n\narr.unset(index)\n\narr.get(index) // undefined\n```\n\n### Iterate:\n\n```js\narr.forEach((elem, index) => {\n  console.log('elem: %j at %d', elem, index)\n})\n\nconst mapped = arr.map((elem, index) => {\n  return elem + 1\n})\n\nconst result = arr.reduce((acc, elem, index) => {\n  return acc + Number(elem)\n}, 0)\n```\n\n### Find:\n\n```js\nconst firstEven = arr.find((elem) => (elem % 2) === 0)\n```\n\n### Internal representation:\n\n#### Bit field:\n\n```js\nconst bitField = arr.bitField()\n```\n\n#### Compact array:\n\n```js\nconst compacted = arr.compactArray()\n```\n\n## License\n\nISC"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sparse-array/-/sparse-array-1.3.2.tgz#0e1a8b71706d356bc916fe754ff496d450ec20b0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sparse-array/-/sparse-array-1.3.2.tgz",
    "hash": "0e1a8b71706d356bc916fe754ff496d450ec20b0",
    "integrity": "sha512-ZT711fePGn3+kQyLuv1fpd3rNSkNF8vd5Kv2D+qnOANeyKs3fx6bUMGWRPvgTTcYV64QMqZKZwcuaQSP3AZ0tg==",
    "registry": "npm",
    "packageName": "sparse-array",
    "cacheIntegrity": "sha512-ZT711fePGn3+kQyLuv1fpd3rNSkNF8vd5Kv2D+qnOANeyKs3fx6bUMGWRPvgTTcYV64QMqZKZwcuaQSP3AZ0tg== sha1-DhqLcXBtNWvJFv51T/SW1FDsILA="
  },
  "registry": "npm",
  "hash": "0e1a8b71706d356bc916fe754ff496d450ec20b0"
}