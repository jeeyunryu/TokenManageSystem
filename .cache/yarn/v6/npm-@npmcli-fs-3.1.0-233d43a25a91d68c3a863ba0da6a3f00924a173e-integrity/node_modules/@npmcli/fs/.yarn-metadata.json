{
  "manifest": {
    "name": "@npmcli/fs",
    "version": "3.1.0",
    "description": "filesystem utilities for the npm cli",
    "main": "lib/index.js",
    "files": [
      "bin/",
      "lib/"
    ],
    "scripts": {
      "snap": "tap",
      "test": "tap",
      "npmclilint": "npmcli-lint",
      "lint": "eslint \"**/*.js\"",
      "lintfix": "npm run lint -- --fix",
      "posttest": "npm run lint",
      "postsnap": "npm run lintfix --",
      "postlint": "template-oss-check",
      "template-oss-apply": "template-oss-apply --force"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/fs.git"
    },
    "keywords": [
      "npm",
      "oss"
    ],
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.8.0",
      "tap": "^16.0.1"
    },
    "dependencies": {
      "semver": "^7.3.5"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.8.0"
    },
    "tap": {
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@npmcli-fs-3.1.0-233d43a25a91d68c3a863ba0da6a3f00924a173e-integrity/node_modules/@npmcli/fs/package.json",
    "readmeFilename": "README.md",
    "readme": "# @npmcli/fs\n\npolyfills, and extensions, of the core `fs` module.\n\n## Features\n\n- `fs.cp` polyfill for node < 16.7.0\n- `fs.withTempDir` added\n- `fs.readdirScoped` added\n- `fs.moveFile` added\n\n## `fs.withTempDir(root, fn, options) -> Promise`\n\n### Parameters\n\n- `root`: the directory in which to create the temporary directory\n- `fn`: a function that will be called with the path to the temporary directory\n- `options`\n  - `tmpPrefix`: a prefix to be used in the generated directory name\n\n### Usage\n\nThe `withTempDir` function creates a temporary directory, runs the provided\nfunction (`fn`), then removes the temporary directory and resolves or rejects\nbased on the result of `fn`.\n\n```js\nconst fs = require('@npmcli/fs')\nconst os = require('os')\n\n// this function will be called with the full path to the temporary directory\n// it is called with `await` behind the scenes, so can be async if desired.\nconst myFunction = async (tempPath) => {\n  return 'done!'\n}\n\nconst main = async () => {\n  const result = await fs.withTempDir(os.tmpdir(), myFunction)\n  // result === 'done!'\n}\n\nmain()\n```\n\n## `fs.readdirScoped(root) -> Promise`\n\n### Parameters\n\n- `root`: the directory to read\n\n### Usage\n\nLike `fs.readdir` but handling `@org/module` dirs as if they were\na single entry.\n\n```javascript\nconst readdir = require('readdir-scoped-modules')\nconst entries = await readdir('node_modules')\n// entries will be something like: ['a', '@org/foo', '@org/bar']\n```\n\n## `fs.moveFile(source, dest, options) -> Promise`\n\nA fork of [move-file](https://github.com/sindresorhus/move-file) with\nsupport for Common JS.\n\n### Highlights\n\n- Promise API.\n- Supports moving a file across partitions and devices.\n- Optionally prevent overwriting an existing file.\n- Creates non-existent destination directories for you.\n- Automatically recurses when source is a directory.\n\n### Parameters\n\n- `source`: File, or directory, you want to move.\n- `dest`: Where you want the file or directory moved.\n- `options`\n  - `overwrite` (`boolean`, default: `true`): Overwrite existing destination file(s).\n\n### Usage\n\nThe built-in\n[`fs.rename()`](https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback)\nis just a JavaScript wrapper for the C `rename(2)` function, which doesn't\nsupport moving files across partitions or devices. This module is what you\nwould have expected `fs.rename()` to be.\n\n```js\nconst { moveFile } = require('@npmcli/fs');\n\n(async () => {\n\tawait moveFile('source/unicorn.png', 'destination/unicorn.png');\n\tconsole.log('The file has been moved');\n})();\n```\n",
    "licenseText": "<!-- This file is automatically added by @npmcli/template-oss. Do not edit. -->\n\nISC License\n\nCopyright npm, Inc.\n\nPermission to use, copy, modify, and/or distribute this\nsoftware for any purpose with or without fee is hereby\ngranted, provided that the above copyright notice and this\npermission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND NPM DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO\nEVENT SHALL NPM BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\nUSE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@npmcli/fs/-/fs-3.1.0.tgz#233d43a25a91d68c3a863ba0da6a3f00924a173e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@npmcli/fs/-/fs-3.1.0.tgz",
    "hash": "233d43a25a91d68c3a863ba0da6a3f00924a173e",
    "integrity": "sha512-7kZUAaLscfgbwBQRbvdMYaZOWyMEcPTH/tJjnyAWJ/dvvs9Ef+CERx/qJb9GExJpl1qipaDGn7KqHnFGGixd0w==",
    "registry": "npm",
    "packageName": "@npmcli/fs",
    "cacheIntegrity": "sha512-7kZUAaLscfgbwBQRbvdMYaZOWyMEcPTH/tJjnyAWJ/dvvs9Ef+CERx/qJb9GExJpl1qipaDGn7KqHnFGGixd0w== sha1-Iz1DolqR1ow6hjug2mo/AJJKFz4="
  },
  "registry": "npm",
  "hash": "233d43a25a91d68c3a863ba0da6a3f00924a173e"
}