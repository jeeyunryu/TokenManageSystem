{
  "manifest": {
    "name": "@libp2p/interface-connection-encrypter",
    "version": "3.0.6",
    "description": "Connection Encrypter interface for libp2p",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/libp2p/js-libp2p-interfaces/tree/master/packages/interface-connection-encrypter#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/libp2p/js-libp2p-interfaces.git"
    },
    "bugs": {
      "url": "https://github.com/libp2p/js-libp2p-interfaces/issues"
    },
    "keywords": [
      "interface",
      "libp2p"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      },
      "./errors": {
        "types": "./dist/src/errors.d.ts",
        "import": "./dist/src/errors.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "build": "aegir build",
      "release": "aegir release"
    },
    "dependencies": {
      "@libp2p/interface-peer-id": "^2.0.0",
      "it-stream-types": "^1.0.4",
      "uint8arraylist": "^2.1.2"
    },
    "devDependencies": {
      "aegir": "^38.1.0"
    },
    "typedoc": {
      "entryPoint": "./src/index.ts"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@libp2p-interface-connection-encrypter-3.0.6-1f7c7428d5905b390cfc5390e72bd02829213d31-integrity/node_modules/@libp2p/interface-connection-encrypter/package.json",
    "readmeFilename": "README.md",
    "readme": "# @libp2p/interface-connection-encrypter <!-- omit in toc -->\n\n[![libp2p.io](https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square)](http://libp2p.io/)\n[![Discuss](https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg?style=flat-square)](https://discuss.libp2p.io)\n[![codecov](https://img.shields.io/codecov/c/github/libp2p/js-libp2p-interfaces.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-interfaces)\n[![CI](https://img.shields.io/github/actions/workflow/status/libp2p/js-libp2p-interfaces/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/libp2p/js-libp2p-interfaces/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> Connection Encrypter interface for libp2p\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [API](#api)\n  - [Secure Inbound](#secure-inbound)\n  - [Secure Outbound](#secure-outbound)\n- [Crypto Errors](#crypto-errors)\n  - [Error Types](#error-types)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribution](#contribution)\n\n## Install\n\n```console\n$ npm i @libp2p/interface-connection-encrypter\n```\n\n**Modules that implement the interface**\n\n- [@chainSafe/js-libp2p-noise](https://github.com/ChainSafe/js-libp2p-noise)\n- [js-libp2p-secio](https://github.com/NodeFactoryIo/js-libp2p-secio)\n\n## API\n\n- `Crypto`\n  - `protocol<string>`: The protocol id of the crypto module.\n  - `secureInbound<function(PeerId, duplex)>`: Secures inbound connections.\n  - `secureOutbound<function(PeerId, duplex, PeerId)>`: Secures outbound connections.\n\n### Secure Inbound\n\n- `const { conn, remotePeer } = await crypto.secureInbound(localPeer, duplex, [remotePeer])`\n\nSecures an inbound [streaming iterable duplex][iterable-duplex] connection. It returns an encrypted [streaming iterable duplex][iterable-duplex], as well as the [PeerId][peer-id] of the remote peer.\n\n**Parameters**\n\n- `localPeer` is the [PeerId][peer-id] of the receiving peer.\n- `duplex` is the [streaming iterable duplex][iterable-duplex] that will be encryption.\n- `remotePeer` is the optional [PeerId][peer-id] of the initiating peer, if known. This may only exist during transport upgrades.\n\n**Return Value**\n\n- `<object>`\n  - `conn<duplex>`: An encrypted [streaming iterable duplex][iterable-duplex].\n  - `remotePeer<PeerId>`: The [PeerId][peer-id] of the remote peer.\n\n### Secure Outbound\n\n- `const { conn, remotePeer } = await crypto.secureOutbound(localPeer, duplex, remotePeer)`\n\nSecures an outbound [streaming iterable duplex][iterable-duplex] connection. It returns an encrypted [streaming iterable duplex][iterable-duplex], as well as the [PeerId][peer-id] of the remote peer.\n\n**Parameters**\n\n- `localPeer` is the [PeerId][peer-id] of the receiving peer.\n- `duplex` is the [streaming iterable duplex][iterable-duplex] that will be encrypted.\n- `remotePeer` is the [PeerId][peer-id] of the remote peer. If provided, implementations **should** use this to validate the integrity of the remote peer.\n\n**Return Value**\n\n- `<object>`\n  - `conn<duplex>`: An encrypted [streaming iterable duplex][iterable-duplex].\n  - `remotePeer<PeerId>`: The [PeerId][peer-id] of the remote peer. This **should** match the `remotePeer` parameter, and implementations should enforce this.\n\n## Crypto Errors\n\nCommon crypto errors come with the interface, and can be imported directly. All Errors take an optional message.\n\n```js\nconst {\n  InvalidCryptoExchangeError,\n  InvalidCryptoTransmissionError,\n  UnexpectedPeerError\n} = require('libp2p-interfaces/src/crypto/errors')\n\nconst error = new UnexpectedPeerError('a custom error message')\nconsole.log(error.code === UnexpectedPeerError.code) // true\n```\n\n### Error Types\n\n- `InvalidCryptoExchangeError` - Should be thrown when a peer provides data that is insufficient to finish the crypto exchange.\n- `InvalidCryptoTransmissionError` - Should be thrown when an error occurs during encryption/decryption.\n- `UnexpectedPeerError` - Should be thrown when the expected peer id does not match the peer id determined via the crypto exchange.\n\n## API Docs\n\n- <https://libp2p.github.io/js-libp2p-interfaces/modules/_libp2p_interface_connection_encrypter.html>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[peer-id]: https://github.com/libp2p/js-peer-id\n\n[iterable-duplex]: https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#duplex-it\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@libp2p/interface-connection-encrypter/-/interface-connection-encrypter-3.0.6.tgz#1f7c7428d5905b390cfc5390e72bd02829213d31",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@libp2p/interface-connection-encrypter/-/interface-connection-encrypter-3.0.6.tgz",
    "hash": "1f7c7428d5905b390cfc5390e72bd02829213d31",
    "integrity": "sha512-LwyYBN/aSa3IPCe7gBxffx/vaC0rFxAXlCbx4QGaWGtg6qK80Ouj89LEDWb3HkMbecNVWaV4TEqJIM5WnAAx1Q==",
    "registry": "npm",
    "packageName": "@libp2p/interface-connection-encrypter",
    "cacheIntegrity": "sha512-LwyYBN/aSa3IPCe7gBxffx/vaC0rFxAXlCbx4QGaWGtg6qK80Ouj89LEDWb3HkMbecNVWaV4TEqJIM5WnAAx1Q== sha1-H3x0KNWQWzkM/FOQ5yvQKCkhPTE="
  },
  "registry": "npm",
  "hash": "1f7c7428d5905b390cfc5390e72bd02829213d31"
}