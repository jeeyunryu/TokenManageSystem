{
  "manifest": {
    "name": "ipfs",
    "version": "0.66.0",
    "description": "JavaScript implementation of the IPFS specification",
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-ipfs.git"
    },
    "bugs": {
      "url": "https://github.com/ipfs/js-ipfs/issues"
    },
    "keywords": [
      "IPFS"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "bin": {
      "jsipfs": "src/cli.js"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./src/index.js"
      },
      "./path": {
        "types": "./src/path.d.ts",
        "browser": "./src/path.browser.js",
        "import": "./src/path.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "scripts": {
      "build": "aegir build",
      "prepublishOnly": "node scripts/update-version.js",
      "lint": "aegir lint",
      "test:interface:core": "aegir test -f test/interface-core.js",
      "test:interface:client": "aegir test -f test/interface-client.js",
      "test:interface:http-js": "aegir test -f test/interface-http-js.js",
      "test:interface:http-go": "aegir test -f test/interface-http-go.js",
      "test:interop": "cross-env DEBUG=$DEBUG IPFS_LOGGING=$IPFS_LOGGING IPFS_JS_EXEC=$PWD/src/cli.js KUBO_RPC_MODULE=$PWD/../ipfs-http-client/src/index.js LIBP2P_TCP_REUSEPORT=false ipfs-interop",
      "test:external": "aegir test-dependant",
      "clean": "aegir clean",
      "dep-check": "aegir dep-check -i ipfs-core-types -i @types/*"
    },
    "dependencies": {
      "@libp2p/logger": "^2.0.0",
      "ipfs-cli": "^0.16.0",
      "ipfs-core": "^0.18.0",
      "semver": "^7.3.2",
      "update-notifier": "^6.0.0"
    },
    "devDependencies": {
      "@libp2p/webrtc-star-signalling-server": "^3.0.0",
      "@libp2p/websockets": "^5.0.0",
      "@types/semver": "^7.3.4",
      "@types/update-notifier": "^6.0.1",
      "aegir": "^37.11.0",
      "cross-env": "^7.0.0",
      "go-ipfs": "^0.12.0",
      "interface-ipfs-core": "^0.158.0",
      "ipfs-client": "^0.10.0",
      "ipfs-core-types": "^0.14.0",
      "ipfs-http-client": "^60.0.0",
      "ipfs-interop": "ipfs/interop#deps/update-multiformats",
      "ipfs-utils": "^9.0.13",
      "ipfsd-ctl": "^12.0.3",
      "iso-url": "^1.0.0",
      "kubo-rpc-client": "^2.0.2",
      "merge-options": "^3.0.4",
      "mock-ipfs-pinning-service": "^0.4.2",
      "url": "^0.11.0"
    },
    "optionalDependencies": {
      "electron-webrtc": "^0.3.0",
      "wrtc": "^0.4.6"
    },
    "browser": {
      "./src/cli.js": false,
      "./src/path.js": "./src/path.browser.js",
      "go-ipfs": false
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-ipfs-0.66.0-integrity/node_modules/ipfs/package.json",
    "readmeFilename": "README.md",
    "readme": "# ipfs <!-- omit in toc -->\n\n[![ipfs.io](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io)\n[![IRC](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Discord](https://img.shields.io/discord/806902334369824788?style=flat-square)](https://discord.gg/ipfs)\n[![codecov](https://img.shields.io/codecov/c/github/ipfs/js-ipfs.svg?style=flat-square)](https://codecov.io/gh/ipfs/js-ipfs)\n[![CI](https://img.shields.io/github/workflow/status/ipfs/js-ipfs/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/ipfs/js-ipfs/actions/workflows/js-test-and-release.yml)\n\n> JavaScript implementation of the IPFS specification\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Getting Started](#getting-started)\n  - [Next Steps](#next-steps)\n- [Want to hack on IPFS?](#want-to-hack-on-ipfs)\n- [License](#license)\n- [Contribute](#contribute)\n\n## Install\n\n```console\n$ npm i ipfs\n```\n\n<p align=\"center\">\n  <a href=\"https://js.ipfs.io\" title=\"JS IPFS\">\n    <img src=\"https://ipfs.io/ipfs/Qme6KJdKcp85TYbLxuLV7oQzMiLremD7HMoXLZEmgo6Rnh/js-ipfs-sticker.png\" alt=\"IPFS in JavaScript logo\" width=\"244\" />\n  </a>\n</p>\n\n<h3 align=\"center\">An <a href=\"https://docs.ipfs.io/basics/ipfs-implementations/\">IPFS protocol implementation</a> written in JS</h3>\n\n<p align=\"center\">\n  <a href=\"https://github.com/ipfs/js-ipfs/tree/master/packages/interface-ipfs-core\"><img src=\"https://img.shields.io/badge/interface--ipfs--core-API%20Docs-blue.svg\"></a>\n  <a href=\"https://travis-ci.com/ipfs/js-ipfs?branch=master\"><img src=\"https://badgen.net/travis/ipfs/js-ipfs?branch=master\" /></a>\n  <a href=\"https://codecov.io/gh/ipfs/js-ipfs\"><img src=\"https://badgen.net/codecov/c/github/ipfs/js-ipfs\" /></a>\n  <a href=\"https://bundlephobia.com/result?p=ipfs\"><img src=\"https://badgen.net/bundlephobia/minzip/ipfs\"></a>\n  <a href=\"https://david-dm.org/ipfs/js-ipfs?path=packages/ipfs\"><img src=\"https://david-dm.org/ipfs/js-ipfs.svg?style=flat&path=packages/ipfs\" /></a>\n  <a href=\"https://github.com/feross/standard\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat\"></a>\n  <a href=\"\"><img src=\"https://img.shields.io/badge/npm-%3E%3D6.0.0-orange.svg?style=flat\" /></a>\n  <a href=\"\"><img src=\"https://img.shields.io/badge/Node.js-%3E%3D10.0.0-orange.svg?style=flat\" /></a>\n  <a href=\"https://www.npmjs.com/package/ipfs\"><img src=\"https://img.shields.io/npm/dm/ipfs.svg\" /></a>\n  <a href=\"https://www.jsdelivr.com/package/npm/ipfs\"><img src=\"https://data.jsdelivr.com/v1/package/npm/ipfs/badge\"/></a>\n  <br>\n</p>\n\n`ipfs` is the core API, a CLI and a HTTP server that functions as a HTTP to IPFS bridge and an RPC endpoint.\n\nIf you want to integrate IPFS into your application without including a CLI or HTTP server, see the [ipfs-core](https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-core) module.\n\n## Getting Started\n\nInstalling `ipfs` globally will give you the `jsipfs` command which you can use to start a daemon running:\n\n```console\n$ npm install -g ipfs\n$ jsipfs daemon\nInitializing IPFS daemon...\njs-ipfs version: x.x.x\nSystem version: x64/darwin\nNode.js version: x.x.x\nSwarm listening on /ip4/127.0\n.... more output\n```\n\nYou can then add a file:\n\n```console\n$ jsipfs add ./hello-world.txt\nadded QmXXY5ZxbtuYj6DnfApLiGstzPN7fvSyigrRee3hDWPCaf hello-world.txt\n```\n\n### Next Steps\n\n- Read the [docs](https://github.com/ipfs/js-ipfs/tree/master/docs)\n- Look into the [examples](https://github.com/ipfs-examples/js-ipfs-examples) to learn how to spawn an IPFS node in Node.js and in the Browser\n- Consult the [Core API docs](https://github.com/ipfs/js-ipfs/tree/master/docs/core-api) to see what you can do with an IPFS node\n- Head over to <https://proto.school> to take interactive tutorials that cover core IPFS APIs\n- Check out <https://docs.ipfs.io> for tips, how-tos and more\n- See <https://blog.ipfs.io> for news and more\n- Need help? Please ask 'How do I?' questions on <https://discuss.ipfs.io>\n\n## Want to hack on IPFS?\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n\nThis IPFS implementation in JavaScript needs your help!  There are a few things you can do right now to help out:\n\nRead the [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md) and [JavaScript Contributing Guidelines](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md).\n\n- **Check out existing issues** The [issue list](https://github.com/ipfs/js-ipfs/issues) has many that are marked as ['help wanted'](https://github.com/ipfs/js-ipfs/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22help+wanted%22) or ['difficulty:easy'](https://github.com/ipfs/js-ipfs/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Adifficulty%3Aeasy) which make great starting points for development, many of which can be tackled with no prior IPFS knowledge\n- **Perform code reviews** More eyes will help\n  a. speed the project along\n  b. ensure quality, and\n  c. reduce possible future bugs.\n- **Add tests**. There can never be enough tests.\n\nFind out about chat channels, the IPFS newsletter, the IPFS blog, and more in the [IPFS community space](https://docs.ipfs.io/community/).\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nContributions welcome! Please check out [the issues](https://github.com/ipfs/js-ipfs/issues).\n\nAlso see our [contributing document](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md) for more information on how we work, and about contributing in general.\n\nPlease be aware that all interactions related to this repo are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/ipfs/-/ipfs-0.66.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/ipfs/-/ipfs-0.66.0.tgz",
    "hash": "",
    "integrity": "sha512-HlXgxphNlyV3qSLDtgDKlzXn+0QE2wnTilGkJFRIwECzXCPNPXHq7V8mczvRPCVIhsA/z4TfWaNhe2ujPyIo1w==",
    "registry": "npm",
    "packageName": "ipfs",
    "cacheIntegrity": "sha512-HlXgxphNlyV3qSLDtgDKlzXn+0QE2wnTilGkJFRIwECzXCPNPXHq7V8mczvRPCVIhsA/z4TfWaNhe2ujPyIo1w== sha1-OMNdmnl20OHeBMtYpCjLkj2a6CE="
  },
  "registry": "npm",
  "hash": "1e55e0c6984d972577a922c3b600ca9735e7fb4404db09d38a51a4245448c040b35c23cd3d71eaed5f26733bd13c254886c03fcf84df59a3617b6ba33f2228d7"
}