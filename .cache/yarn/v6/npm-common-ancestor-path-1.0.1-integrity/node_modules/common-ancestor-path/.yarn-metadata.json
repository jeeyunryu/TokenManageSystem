{
  "manifest": {
    "name": "common-ancestor-path",
    "version": "1.0.1",
    "files": [
      "index.js"
    ],
    "description": "Find the common ancestor of 2 or more paths on Windows or Unix",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/isaacs/common-ancestor-path"
    },
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "https://izs.me"
    },
    "license": "ISC",
    "scripts": {
      "test": "tap",
      "snap": "tap",
      "preversion": "npm test",
      "postversion": "npm publish",
      "prepublishOnly": "git push origin --follow-tags"
    },
    "tap": {
      "check-coverage": true
    },
    "devDependencies": {
      "require-inject": "^1.4.4",
      "tap": "^14.10.7"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-common-ancestor-path-1.0.1-integrity/node_modules/common-ancestor-path/package.json",
    "readmeFilename": "README.md",
    "readme": "# common-ancestor-path\n\nFind the common ancestor of 2 or more paths on Windows or Unix\n\n## USAGE\n\nGive it two or more path strings, and it'll do the thing.\n\n```js\nconst ancestor = require('common-ancestor-path')\n\n// output /a/b\nconsole.log(ancestor('/a/b/c/d', '/a/b/x/y/z', '/a/b/c/i/j/k'))\n\n// normalizes separators, but NOT cases, since it matters sometimes\nconsole.log(ancestor('C:\\\\a\\\\b\\\\c', 'C:\\\\a\\\\b\\\\x'))\n\n// no common ancestor on different windows drive letters\n// so, this returns null\nconsole.log(ancestor('c:\\\\a\\\\b\\\\c', 'd:\\\\d\\\\e\\\\f'))\n```\n\n## API\n\n`commonAncestorPath(...paths)`\n\nReturns the nearest (deepest) common ancestor path, or `null` if on\ndifferent roots on Windows.\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/common-ancestor-path/-/common-ancestor-path-1.0.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/common-ancestor-path/-/common-ancestor-path-1.0.1.tgz",
    "hash": "",
    "integrity": "sha512-L3sHRo1pXXEqX8VU28kfgUY+YGsk09hPqZiZmLacNib6XNTCM8ubYeT7ryXQw8asB1sKgcU5lkB7ONug08aB8w==",
    "registry": "npm",
    "packageName": "common-ancestor-path",
    "cacheIntegrity": "sha512-L3sHRo1pXXEqX8VU28kfgUY+YGsk09hPqZiZmLacNib6XNTCM8ubYeT7ryXQw8asB1sKgcU5lkB7ONug08aB8w== sha1-T30tE5TZG3q99Rhxxi9x6tsBgqc="
  },
  "registry": "npm",
  "hash": "2f7b07468d695d712a5fc554dbc91f81463e606b24d3d84fa9989998b69c3626fa5cd4c233cb9b61e4fbaf25d0c3c6ac075b0a81c53996407b38dba0d3c681f3"
}