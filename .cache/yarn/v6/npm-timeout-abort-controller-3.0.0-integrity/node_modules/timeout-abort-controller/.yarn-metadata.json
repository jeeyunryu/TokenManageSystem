{
  "manifest": {
    "name": "timeout-abort-controller",
    "version": "3.0.0",
    "description": "An AbortController that aborts after a specified timeout",
    "main": "index.js",
    "files": [
      "index.js",
      "dist/index.d.ts"
    ],
    "scripts": {
      "test": "npm run lint && nyc --reporter=lcov --reporter=text tape test.js",
      "test:browser": "npm run test:chrome && npm run test:firefox && npm run test:webkit",
      "test:chrome": "playwright-test test.js --browser chromium --runner tape",
      "test:firefox": "playwright-test test.js --browser firefox --runner tape",
      "test:webkit": "playwright-test test.js --browser webkit --runner tape",
      "lint": "standard",
      "prepare": "rimraf dist && tsc --emitDeclarationOnly --declarationDir dist"
    },
    "keywords": [],
    "author": {
      "name": "Jacob Heun"
    },
    "license": "MIT",
    "dependencies": {
      "retimer": "^3.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.13.2",
      "delay": "^5.0.0",
      "nyc": "^15.0.1",
      "playwright-test": "^7.1.0",
      "rimraf": "^3.0.2",
      "standard": "^16.0.3",
      "tape": "^5.0.1",
      "typescript": "^4.1.3"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jacobheun/timeout-abort-controller.git"
    },
    "bugs": {
      "url": "https://github.com/jacobheun/timeout-abort-controller/issues"
    },
    "homepage": "https://github.com/jacobheun/timeout-abort-controller#readme",
    "types": "dist/index.d.ts",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-timeout-abort-controller-3.0.0-integrity/node_modules/timeout-abort-controller/package.json",
    "readmeFilename": "README.md",
    "readme": "# timeout-abort-controller\n\n[![Build Status](https://travis-ci.com/jacobheun/timeout-abort-controller.svg?branch=master)](https://travis-ci.com/jacobheun/timeout-abort-controller) [![dependencies Status](https://david-dm.org/jacobheun/timeout-abort-controller/status.svg)](https://david-dm.org/jacobheun/timeout-abort-controller) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> An AbortController that aborts after a specified timeout.\n\n`timeout-abort-controller` uses [`retimer`](https://github.com/mcollina/retimer) internally to help reduce the impact of having numerous timers running.\n\n## Install\n\n```\nnpm install timeout-abort-controller\n```\n\n## Usage\n\n```js\nconst { AbortController } = require('native-abort-controller')\nconst { TimeoutController } = require('timeout-abort-controller')\nconst anySignal = require('any-signal')\n\nconst userController = new AbortController()\n// Aborts after 1 second\nconst timeoutController = new TimeoutController(1000)\n\nconst combinedSignal = anySignal([userController.signal, timeoutController.signal])\ncombinedSignal.addEventListener('abort', () => console.log('Abort!'))\n\n// The user or the timeout can now abort the action\nawait performSomeAction({ signal: combinedSignal })\ntimeoutController.clear()\n```\n\n## API\n\n### `new TimeoutController(ms)`\n\nCreates an [`AbortController`](https://developer.mozilla.org/en-US/docs/Web/API/AbortController) compliant `TimeoutController`.\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| ms | number | The time in milliseconds for when the TimeoutController should abort |\n\n### `timeoutController.clear()`\n\nClears the internal timer.\n\n### `timeoutController.abort()`\n\nAborts the controller and clears the internal timeout.\n\n### `timeoutController.reset()`\n\nClears the timer and sets the internal timeout to occur after the `ms` timeout it was created with.\n\n## Related\n\n- [`abort-controller`](https://github.com/mysticatea/abort-controller)\n- [`native-abort-controller`](https://github.com/achingbrain/native-abort-controller)\n- [`any-signal`](https://github.com/jacobheun/any-signal) Combines an array of AbortSignals into a single signal.\n\n## LICENSE\n\n[MIT](LICENSE) Â© Jacob Heun\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Jacob Heun\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/timeout-abort-controller/-/timeout-abort-controller-3.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/timeout-abort-controller/-/timeout-abort-controller-3.0.0.tgz",
    "hash": "",
    "integrity": "sha512-O3e+2B8BKrQxU2YRyEjC/2yFdb33slI22WRdUaDx6rvysfi9anloNZyR2q0l6LnePo5qH7gSM7uZtvvwZbc2yA==",
    "registry": "npm",
    "packageName": "timeout-abort-controller",
    "cacheIntegrity": "sha512-O3e+2B8BKrQxU2YRyEjC/2yFdb33slI22WRdUaDx6rvysfi9anloNZyR2q0l6LnePo5qH7gSM7uZtvvwZbc2yA== sha1-3Vf/ygQWUsA3aZBPjZWv2T+5VZU="
  },
  "registry": "npm",
  "hash": "3b77bed81f012ab431536611c848c2ff6c8575bdf7b25236d9645d51a0f1eabbf2b1f8bd6a7968359c91daad25e8b9de3e8e6a1fb81233bb99b6fbf065b736c8"
}