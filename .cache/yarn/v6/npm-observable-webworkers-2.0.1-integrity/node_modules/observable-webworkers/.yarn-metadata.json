{
  "manifest": {
    "name": "observable-webworkers",
    "version": "2.0.1",
    "description": "A way to eavesdrop on Web Worker messages",
    "author": {
      "name": "Alex Potsides",
      "email": "alex@achingbrain.net"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/achingbrain/observable-webworkers#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/achingbrain/observable-webworkers.git"
    },
    "bugs": {
      "url": "https://github.com/achingbrain/observable-webworkers/issues"
    },
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist/src",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "chore",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Trivial Changes"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "build": "tsc",
      "pretest": "npm run build",
      "test": "aegir test -t browser -f ./dist/test",
      "test:chrome": "npm run test",
      "test:firefox": "npm run test -- -- --browser firefox",
      "lint": "aegir lint",
      "release": "semantic-release"
    },
    "devDependencies": {
      "aegir": "^36.1.3"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-observable-webworkers-2.0.1-integrity/node_modules/observable-webworkers/package.json",
    "readmeFilename": "README.md",
    "readme": "# observable-webworkers\n\n[![Build Status](https://github.com/achingbrain/observable-webworkers/actions/workflows/js-test-and-release.yml/badge.svg?branch=main)](https://github.com/achingbrain/observable-webworkers/actions/workflows/js-test-and-release.yml)\n\n> Allow you to listen to messages emitted by web workers\n\n## Install\n\n```sh\n$ npm install --save observable-webworkers\n```\n\n## Usage\n\n```javascript\nconst observe = require('observable-webworkers')\n\nconst worker = new Worker('my-worker-script.js')\n\nobserve(worker)\n\nobserve.addEventListener('message', (worker, event) => {\n  console.info(event.data)\n})\n```\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/observable-webworkers/-/observable-webworkers-2.0.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/observable-webworkers/-/observable-webworkers-2.0.1.tgz",
    "hash": "",
    "integrity": "sha512-JI1vB0u3pZjoQKOK1ROWzp0ygxSi7Yb0iR+7UNsw4/Zn4cQ0P3R7XL38zac/Dy2tEA7Lg88/wIJTjF8vYXZ0uw==",
    "registry": "npm",
    "packageName": "observable-webworkers",
    "cacheIntegrity": "sha512-JI1vB0u3pZjoQKOK1ROWzp0ygxSi7Yb0iR+7UNsw4/Zn4cQ0P3R7XL38zac/Dy2tEA7Lg88/wIJTjF8vYXZ0uw== sha1-fZCG68VnvTGLRroFBrEM7fOBOHg="
  },
  "registry": "npm",
  "hash": "248d6f074bb7a598e840a38ad51396ce9d328314a2ed86f4891fbb50db30e3f667e1c4343f747b5cbdfccda73f0f2dad100ecb83cf3fc082538c5f2f617674bb"
}