{
  "manifest": {
    "name": "ipfs-core-types",
    "version": "0.8.4",
    "description": "IPFS interface definitions used by implementations for API compatibility.",
    "leadMaintainer": "Alex Potsides <alex@achingbrain.net>",
    "types": "types/src/index.d.ts",
    "homepage": "https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-core-types#readme",
    "bugs": {
      "url": "https://github.com/ipfs/js-ipfs/issues"
    },
    "scripts": {
      "clean": "rimraf ./dist",
      "lint": "aegir ts -p check && aegir lint",
      "build": "aegir build && copyfiles src/* src/**/* package.json README.md CHANGELOG.md COPYRIGHT LICENSE-APACHE LICENSE-MIT dist"
    },
    "files": [
      "*",
      "!**/*.tsbuildinfo"
    ],
    "typesVersions": {
      "*": {
        "src/*": [
          "types/src/*",
          "types/src/*/index"
        ],
        "src/": [
          "types/src/index"
        ]
      }
    },
    "eslintConfig": {
      "extends": "ipfs"
    },
    "publishConfig": {
      "directory": "dist"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-ipfs.git"
    },
    "keywords": [
      "IPFS",
      "types",
      "interface",
      "API"
    ],
    "license": "(Apache-2.0 OR MIT)",
    "dependencies": {
      "interface-datastore": "^6.0.2",
      "multiaddr": "^10.0.0",
      "multiformats": "^9.4.13"
    },
    "devDependencies": {
      "aegir": "^36.0.1",
      "copyfiles": "^2.4.1",
      "rimraf": "^3.0.2"
    },
    "contributors": [
      {
        "name": "Irakli Gozalishvili",
        "email": "dev@gozala.io"
      }
    ],
    "gitHead": "6178708aedf5ea86bf537862c08db49f5b8ea20b",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-ipfs-core-types-0.8.4-4d483dc6035714ea48a0b02e3f82b6c6d55c8525-integrity/node_modules/ipfs-core-types/package.json",
    "readmeFilename": "README.md",
    "readme": "# ipfs-core-types <!-- omit in toc -->\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io/)\n[![standard-readme compliant](https://img.shields.io/badge/standard--readme-OK-green.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n[![Dependency Status](https://david-dm.org/ipfs/js-ipfs/status.svg?style=flat-square&path=packages/ipfs-core-types)](https://david-dm.org/ipfs/js-ipfs?path=packages/ipfs-core-types)\n\n> IPFS interface definitions used by implementations for API compatibility\n\n## Lead Maintainer <!-- omit in toc -->\n\n[Alex Potsides](http://github.com/achingbrain)\n\n## Table of Contents <!-- omit in toc -->\n\n- [Background](#background)\n- [Install](#install)\n- [Usage](#usage)\n  - [In JSDoc syntax](#in-jsdoc-syntax)\n  - [In Typescript](#in-typescript)\n- [Validation](#validation)\n- [Contribute](#contribute)\n  - [Want to hack on IPFS?](#want-to-hack-on-ipfs)\n- [License](#license)\n\n## Background\n\nThe primary goal of this module is to define and ensure that IPFS core implementations and their respective client libraries implement the same interface, so that developers can quickly change between a local and a remote node without having to change their applications.\n\nIt offers a set of typescript interface definitions that define the IPFS core API.  Once your implementation implements those APIs you can use the tests found in the [interface-ipfs-core](https://www.npmjs.com/package/interface-ipfs-core) module to validate your implementation.\n\n## Install\n\nIn JavaScript land:\n\n```console\n$ npm install ipfs-core-types\n```\n\n## Usage\n\nInstall `ipfs-core-types` as one of the dependencies of your project and use it to ensure your implementations API compatibility:\n\n### In [JSDoc syntax](https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html)\n\n```js\n/**\n * @implements {import('ipfs-core-types').IPFS}\n */\nclass MyImpl {\n  // your implementation goes here\n}\n```\n\n### In Typescript\n\n```ts\nimport type { IPFS } from 'ipfs-core-types'\nclass MyImpl implements IPFS {\n  // your implementation goes here\n}\n```\n\n## Validation\n\nIn order to validate API compatibility you can run [typescript](https://www.typescriptlang.org/) over your implementation which will point out all the API compatibilities if there are some.\n\n\n## Contribute\n\nFeel free to join in. All welcome. Open an [issue](https://github.com/ipfs/js-ipfs/issues)!\n\nThis repository falls under the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\n### Want to hack on IPFS?\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n\n## License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fipfs%2Fjs-ipfs.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fipfs%2Fjs-ipfs?ref=badge_large)\n\n[![](https://github.com/ipfs/js-ipfs/raw/master/ipfs-core-types/img/badge.png)](https://github.com/ipfs/js-ipfs/tree/master/ipfs-core-types)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ipfs-core-types/-/ipfs-core-types-0.8.4.tgz#4d483dc6035714ea48a0b02e3f82b6c6d55c8525",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ipfs-core-types/-/ipfs-core-types-0.8.4.tgz",
    "hash": "4d483dc6035714ea48a0b02e3f82b6c6d55c8525",
    "integrity": "sha512-sbRZA1QX3xJ6ywTiVQZMOxhlhp4osAZX2SXx3azOLxAtxmGWDMkHYt722VV4nZ2GyJy8qyk5GHQIZ0uvQnpaTg==",
    "registry": "npm",
    "packageName": "ipfs-core-types",
    "cacheIntegrity": "sha512-sbRZA1QX3xJ6ywTiVQZMOxhlhp4osAZX2SXx3azOLxAtxmGWDMkHYt722VV4nZ2GyJy8qyk5GHQIZ0uvQnpaTg== sha1-TUg9xgNXFOpIoLAuP4K2xtVchSU="
  },
  "registry": "npm",
  "hash": "4d483dc6035714ea48a0b02e3f82b6c6d55c8525"
}