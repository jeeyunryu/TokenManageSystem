{
  "manifest": {
    "name": "read",
    "version": "2.1.0",
    "main": "lib/read.js",
    "dependencies": {
      "mute-stream": "~1.0.0"
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.13.0",
      "tap": "^16.3.0"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "author": {
      "name": "GitHub Inc."
    },
    "description": "read(1) for node programs",
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/read.git"
    },
    "license": "ISC",
    "scripts": {
      "test": "tap",
      "lint": "eslint \"**/*.js\"",
      "postlint": "template-oss-check",
      "template-oss-apply": "template-oss-apply --force",
      "lintfix": "npm run lint -- --fix",
      "snap": "tap",
      "posttest": "npm run lint"
    },
    "files": [
      "bin/",
      "lib/"
    ],
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.13.0",
      "publish": "true"
    },
    "tap": {
      "statements": 77,
      "branches": 75,
      "functions": 57,
      "lines": 78,
      "test-ignore": "fixtures/",
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-read-2.1.0-69409372c54fe3381092bc363a00650b6ac37218-integrity/node_modules/read/package.json",
    "readmeFilename": "README.md",
    "readme": "## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## Usage\n\n```javascript\nvar read = require(\"read\")\ntry {\n  const result = await read(options, callback)\n} catch (er) {\n  console.error(er)\n}\n```\n\n## Options\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `replace` Replace silenced characters with the supplied character value.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `input` Readable stream to get input data from. (default `process.stdin`)\n* `output` Writable stream to write prompts to. (default: `process.stdout`)\n* `completer` Autocomplete callback (see [official api](https://nodejs.org/api/readline.html#readline_readline_createinterface_options) for details\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## Contributing\n\nPatches welcome.\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/read/-/read-2.1.0.tgz#69409372c54fe3381092bc363a00650b6ac37218",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/read/-/read-2.1.0.tgz",
    "hash": "69409372c54fe3381092bc363a00650b6ac37218",
    "integrity": "sha512-bvxi1QLJHcaywCAEsAk4DG3nVoqiY2Csps3qzWalhj5hFqRn1d/OixkFXtLO1PrgHUcAP0FNaSY/5GYNfENFFQ==",
    "registry": "npm",
    "packageName": "read",
    "cacheIntegrity": "sha512-bvxi1QLJHcaywCAEsAk4DG3nVoqiY2Csps3qzWalhj5hFqRn1d/OixkFXtLO1PrgHUcAP0FNaSY/5GYNfENFFQ== sha1-aUCTcsVP4zgQkrw2OgBlC2rDchg="
  },
  "registry": "npm",
  "hash": "69409372c54fe3381092bc363a00650b6ac37218"
}