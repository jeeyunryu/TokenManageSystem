{
  "manifest": {
    "name": "libnpmpublish",
    "version": "7.1.4",
    "description": "Programmatic API for the bits behind npm publish and unpublish",
    "author": {
      "name": "GitHub Inc."
    },
    "main": "lib/index.js",
    "contributors": [
      {
        "name": "Kat Marchán",
        "email": "kzm@zkat.tech"
      },
      {
        "name": "Claudia Hernández",
        "email": "claudia@npmjs.com"
      }
    ],
    "files": [
      "bin/",
      "lib/"
    ],
    "license": "ISC",
    "scripts": {
      "lint": "eslint \"**/*.js\"",
      "lintfix": "node ../.. run lint -- --fix",
      "test": "tap",
      "posttest": "node ../.. run lint",
      "postlint": "template-oss-check",
      "snap": "tap",
      "template-oss-apply": "template-oss-apply --force"
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/mock-registry": "^1.0.0",
      "@npmcli/template-oss": "4.14.1",
      "lodash.clonedeep": "^4.5.0",
      "nock": "^13.3.0",
      "tap": "^16.3.4"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/cli.git",
      "directory": "workspaces/libnpmpublish"
    },
    "bugs": {
      "url": "https://github.com/npm/cli/issues"
    },
    "homepage": "https://npmjs.com/package/libnpmpublish",
    "dependencies": {
      "ci-info": "^3.6.1",
      "normalize-package-data": "^5.0.0",
      "npm-package-arg": "^10.1.0",
      "npm-registry-fetch": "^14.0.3",
      "proc-log": "^3.0.0",
      "semver": "^7.3.7",
      "sigstore": "^1.4.0",
      "ssri": "^10.0.1"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.14.1",
      "content": "../../scripts/template-oss/index.js"
    },
    "tap": {
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-libnpmpublish-7.1.4-a0d138e00e52a0c71ffc82273acf0082fc2dfb36-integrity/node_modules/libnpmpublish/package.json",
    "readmeFilename": "README.md",
    "readme": "# libnpmpublish\n\n[![npm version](https://img.shields.io/npm/v/libnpmpublish.svg)](https://npm.im/libnpmpublish)\n[![license](https://img.shields.io/npm/l/libnpmpublish.svg)](https://npm.im/libnpmpublish)\n[![CI - libnpmpublish](https://github.com/npm/cli/actions/workflows/ci-libnpmpublish.yml/badge.svg)](https://github.com/npm/cli/actions/workflows/ci-libnpmpublish.yml)\n\n[`libnpmpublish`](https://github.com/npm/libnpmpublish) is a Node.js\nlibrary for programmatically publishing and unpublishing npm packages. Give\nit a manifest as an object and a tarball as a Buffer, and it'll put them on\nthe registry for you.\n\n## Table of Contents\n\n* [Example](#example)\n* [Install](#install)\n* [API](#api)\n  * [publish/unpublish opts](#opts)\n  * [`publish()`](#publish)\n  * [`unpublish()`](#unpublish)\n\n## Example\n\n```js\nconst { publish, unpublish } = require('libnpmpublish')\n```\n\n## Install\n\n`$ npm install libnpmpublish`\n\n### API\n\n#### <a name=\"opts\"></a> `opts` for `libnpmpublish` commands\n\n`libnpmpublish` uses\n[`npm-registry-fetch`](https://npm.im/npm-registry-fetch).  Most options\nare passed through directly to that library, so please refer to [its own\n`opts` documentation](http://npm.im/npm-registry-fetch#fetch-options) for\noptions that can be passed in.\n\nA couple of options of note:\n\n* `opts.defaultTag` - registers the published package with the given tag,\n  defaults to `latest`.\n\n* `opts.access` - tells the registry whether this package should be\n  published as `public` or `restricted`. Only applies to scoped\n  packages.  Defaults to `public`.\n\n* `opts.token` - can be passed in and will be used as the authentication\n  token for the registry. For other ways to pass in auth details, see the\n  n-r-f docs.\n\n#### <a name=\"publish\"></a> `> libpub.publish(manifest, tarData, [opts]) -> Promise`\n\nSends the package represented by the `manifest` and `tarData` to the\nconfigured registry.\n\n`manifest` should be the parsed `package.json` for the package being\npublished (which can also be the manifest pulled from a packument, a git\nrepo, tarball, etc.)\n\n`tarData` is a `Buffer` of the tarball being published.\n\nIf `opts.npmVersion` is passed in, it will be used as the `_npmVersion`\nfield in the outgoing packument.  You may put your own user-agent string in\nthere to identify your publishes.\n\nIf `opts.algorithms` is passed in, it should be an array of hashing\nalgorithms to generate `integrity` hashes for. The default is `['sha512']`,\nwhich means you end up with `dist.integrity = 'sha512-deadbeefbadc0ffee'`.\nAny algorithm supported by your current node version is allowed -- npm\nclients that do not support those algorithms will simply ignore the\nunsupported hashes.\n\n##### Example\n\n```js\n// note that pacote.manifest() and pacote.tarball() can also take\n// any spec that npm can install.  a folder shown here, since that's\n// far and away the most common use case.\nconst path = '/a/path/to/your/source/code'\nconst pacote = require('pacote') // see: http://npm.im/pacote\nconst manifest = await pacote.manifest(path)\nconst tarData = await pacote.tarball(path)\nawait libpub.publish(manifest, tarData, {\n  npmVersion: 'my-pub-script@1.0.2',\n  token: 'my-auth-token-here'\n}, opts)\n// Package has been published to the npm registry.\n```\n\n#### <a name=\"unpublish\"></a> `> libpub.unpublish(spec, [opts]) -> Promise`\n\nUnpublishes `spec` from the appropriate registry. The registry in question may\nhave its own limitations on unpublishing.\n\n`spec` should be either a string, or a valid\n[`npm-package-arg`](https://npm.im/npm-package-arg) parsed spec object. For\nlegacy compatibility reasons, only `tag` and `version` specs will work as\nexpected. `range` specs will fail silently in most cases.\n\n##### Example\n\n```js\nawait libpub.unpublish('lodash', { token: 'i-am-the-worst'})\n//\n// `lodash` has now been unpublished, along with all its versions\n```\n",
    "licenseText": "Copyright npm, Inc\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/libnpmpublish/-/libnpmpublish-7.1.4.tgz#a0d138e00e52a0c71ffc82273acf0082fc2dfb36",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/libnpmpublish/-/libnpmpublish-7.1.4.tgz",
    "hash": "a0d138e00e52a0c71ffc82273acf0082fc2dfb36",
    "integrity": "sha512-mMntrhVwut5prP4rJ228eEbEyvIzLWhqFuY90j5QeXBCTT2pWSMno7Yo2S2qplPUr02zPurGH4heGLZ+wORczg==",
    "registry": "npm",
    "packageName": "libnpmpublish",
    "cacheIntegrity": "sha512-mMntrhVwut5prP4rJ228eEbEyvIzLWhqFuY90j5QeXBCTT2pWSMno7Yo2S2qplPUr02zPurGH4heGLZ+wORczg== sha1-oNE44A5SoMcf/IInOs8Agvwt+zY="
  },
  "registry": "npm",
  "hash": "a0d138e00e52a0c71ffc82273acf0082fc2dfb36"
}