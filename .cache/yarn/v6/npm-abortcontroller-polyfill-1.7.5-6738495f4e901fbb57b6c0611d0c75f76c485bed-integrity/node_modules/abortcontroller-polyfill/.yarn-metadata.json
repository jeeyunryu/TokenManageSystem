{
  "manifest": {
    "name": "abortcontroller-polyfill",
    "version": "1.7.5",
    "description": "Polyfill/ponyfill for the AbortController DOM API + optional patching of fetch (stub that calls catch, doesn't actually abort request).",
    "main": "dist/umd-polyfill.js",
    "files": [
      "src",
      "dist"
    ],
    "scripts": {
      "build": "rollup -c",
      "prepare": "npm run build",
      "test": "npm run build && npm-run-all test-headless eslint",
      "test-headless": "SELENIUM_BROWSER=chrome E2E_HEADLESS=1 ./scripts/wdio-suppress-exitcode",
      "test-chrome": "SELENIUM_BROWSER=chrome ./scripts/wdio-suppress-exitcode",
      "test-firefox": "SELENIUM_BROWSER=firefox ./scripts/wdio-suppress-exitcode",
      "test-inspect-brk": "E2E_WDIO_EXEC_ARGV=--inspect-brk npm run test-chrome",
      "test-verbose": "SELENIUM_BROWSER=chrome E2E_LOG_LEVEL=verbose wdio wdio.conf.js",
      "upgrade-packages": "npx npm-check --update",
      "eslint": "eslint src/ tests/"
    },
    "keywords": [],
    "repository": {
      "type": "git",
      "url": "https://github.com/mo/abortcontroller-polyfill.git"
    },
    "author": {
      "name": "Martin Olsson",
      "email": "martin@minimum.se",
      "url": "https://mo.github.io"
    },
    "license": "MIT",
    "devDependencies": {
      "@babel/cli": "^7.19.3",
      "@babel/core": "^7.19.3",
      "@babel/plugin-transform-member-expression-literals": "^7.18.6",
      "@babel/preset-env": "^7.19.3",
      "@wdio/cli": "^7.25.1",
      "@wdio/jasmine-framework": "^7.25.1",
      "@wdio/local-runner": "^7.25.1",
      "@wdio/selenium-standalone-service": "^7.25.1",
      "@wdio/spec-reporter": "^7.25.1",
      "detect-browser": "^5.3.0",
      "eslint": "^8.25.0",
      "npm-run-all": "^4.1.5",
      "prettier": "^2.7.1",
      "rollup": "^2.79.1",
      "rollup-plugin-babel": "^4.4.0",
      "webdriverio": "^7.25.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-abortcontroller-polyfill-1.7.5-6738495f4e901fbb57b6c0611d0c75f76c485bed-integrity/node_modules/abortcontroller-polyfill/package.json",
    "readmeFilename": "README.md",
    "readme": "# AbortController polyfill for abortable fetch()\n\n[![npm version](https://badge.fury.io/js/abortcontroller-polyfill.svg)](https://badge.fury.io/js/abortcontroller-polyfill)\n\nMinimal stubs so that the AbortController DOM API for terminating ```fetch()``` requests can be used\nin browsers that doesn't yet implement it. This \"polyfill\" doesn't actually close the connection\nwhen the request is aborted, but it will call ```.catch()``` with ```err.name == 'AbortError'```\ninstead of ```.then()```.\n\n```js\nconst controller = new AbortController();\nconst signal = controller.signal;\nfetch('/some/url', {signal})\n  .then(res => res.json())\n  .then(data => {\n    // do something with \"data\"\n  }).catch(err => {\n    if (err.name == 'AbortError') {\n      return;\n    }\n  });\n// controller.abort(); // can be called at any time\n```\n\nYou can read about the [AbortController](https://dom.spec.whatwg.org/#aborting-ongoing-activities) API in the DOM specification.\n\n# How to use\n\n```shell\n$ npm install --save abortcontroller-polyfill\n```\n\nIf you're using webpack or similar, you then import it early in your client entrypoint .js file using\n\n```js\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch'\n// or:\nrequire('abortcontroller-polyfill/dist/polyfill-patch-fetch')\n```\n\n## Using it on browsers without fetch\n\nIf you need to support browsers where fetch is not available at all (for example\nInternet Explorer 11), you first need to install a fetch polyfill and then\nimport the ```abortcontroller-polyfill``` afterwards.\n\nThe [unfetch](https://www.npmjs.com/package/unfetch) npm package offers a minimal ```fetch()```\nimplementation (though it does not offer for example a ```Request``` class). If you need a polyfill that\nimplements the full Fetch specification, use the\n[whatwg-fetch](https://www.npmjs.com/package/whatwg-fetch) npm package instead. Typically you will\nalso need to load a polyfill that implements ES6 promises, for example\n[promise-polyfill](https://www.npmjs.com/package/promise-polyfill), and of course you need to avoid\nES6 arrow functions and template literals.\n\nExample projects showing abortable fetch setup so that it works even in Internet Explorer 11, using\nboth unfetch and GitHub fetch, is available\n[here](https://github.com/mo/abortcontroller-polyfill-examples).\n\n## Using it along with 'create-react-app'\n\ncreate-react-app enforces the no-undef eslint rule at compile time so if your\nversion of eslint does not list ```AbortController``` etc as a known global for\nthe ```browser``` environment, then you might run into an compile error like:\n\n```\n  'AbortController' is not defined  no-undef\n```\n\nThis can be worked around by (temporarily, details [here](https://github.com/mo/abortcontroller-polyfill/issues/10)) adding a declaration like:\n\n```js\n  const AbortController = window.AbortController;\n```\n\n## Using the AbortController/AbortSignal without patching fetch\n\nIf you just want to polyfill AbortController/AbortSignal without patching fetch\nyou can use:\n\n```js\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'\n```\n\n# Using it on Node.js\n\nYou can either import it as a [ponyfill](https://ponyfill.com/) without modifying globals:\n\n```js\nconst { AbortController, abortableFetch } = require('abortcontroller-polyfill/dist/cjs-ponyfill');\nconst { fetch } = abortableFetch(require('node-fetch'));\n// or\n// import { AbortController, abortableFetch } from 'abortcontroller-polyfill/dist/cjs-ponyfill';\n// import _fetch from 'node-fetch';\n// const { fetch } = abortableFetch(_fetch);\n```\nor if you're lazy\n```js\nglobal.fetch = require('node-fetch');\nrequire('abortcontroller-polyfill/dist/polyfill-patch-fetch');\n```\n\nIf you also need a ```Request``` class with support for aborting you can do:\n\n```js\nconst { AbortController, abortableFetch } = require('abortcontroller-polyfill/dist/cjs-ponyfill');\nconst _nodeFetch = require('node-fetch');\nconst { fetch, Request } = abortableFetch({fetch: _nodeFetch, Request: _nodeFetch.Request});\n\nconst controller = new AbortController();\nconst signal = controller.signal;\ncontroller.abort();\nfetch(Request(\"http://api.github.com\", {signal}))\n  .then(r => r.json())\n  .then(j => console.log(j))\n  .catch(err => {\n      if (err.name === 'AbortError') {\n          console.log('aborted');\n      }\n  })\n```\n\nSee also Node.js examples [here](https://github.com/mo/abortcontroller-polyfill-examples/tree/master/node)\n\n# Using it on Internet Explorer 11 (MSIE11)\n\nThe ```abortcontroller-polyfill``` works on Internet Explorer 11. However, to use it you must first\ninstall separate polyfills for promises and for ```fetch()```. For the promise polyfill, you can\nuse the ```promise-polyfill``` package from npm, and for ```fetch()``` you can use either the ```whatwg-fetch``` npm package (complete fetch implementation) or the ```unfetch``` npm package (not a complete polyfill but it's only 500 bytes large and covers a lot of the basic use cases).\n\nIf you choose ```unfetch```, the imports should be done in this order for example:\n\n```js\nimport 'promise-polyfill/src/polyfill';\nimport 'unfetch/polyfill';\nimport 'abortcontroller-polyfill';\n```\n\nSee example code [here](https://github.com/mo/abortcontroller-polyfill-examples/tree/master/create-react-app-msie11).\n\n# Using it on Internet Explorer 8 (MSIE8)\n\nThe ```abortcontroller-polyfill``` works on Internet Explorer 8. However, since ```github-fetch```\nonly supports IE 10+ you need to use the ```fetch-ie8``` npm package instead and also note that IE 8 only\nimplements ES 3 so you need to use the ```es5-shim``` package (or similar). Finally, just like with\nIE 11 you also need to polyfill promises. One caveat is that CORS requests will not work out of the box on IE 8.\n\nHere is a basic example of [abortable fetch running in IE 8](https://github.com/mo/abortcontroller-polyfill-examples/tree/master/plain-javascript-fetch-ie8).\n\n# Contributors\n* [Martin Olsson](https://github.com/mo)\n* [Jimmy Wärting](https://github.com/jimmywarting)\n* [silverwind](https://github.com/silverwind)\n* [Rasmus Jacobsen](https://github.com/rmja)\n* [João Vieira](https://github.com/joaovieira)\n* [Cyril Auburtin](https://github.com/caub)\n* [Leonardo Apiwan](https://github.com/homer0)\n* [Jake Champion](https://github.com/JakeChampion)\n* [Sai Srinivasan](https://github.com/SairamSrinivasan)\n* [Ambar Lee](https://github.com/ambar)\n\n# License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 molsson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.5.tgz#6738495f4e901fbb57b6c0611d0c75f76c485bed",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.5.tgz",
    "hash": "6738495f4e901fbb57b6c0611d0c75f76c485bed",
    "integrity": "sha512-JMJ5soJWP18htbbxJjG7bG6yuI6pRhgJ0scHHTfkUjf6wjP912xZWvM+A4sJK3gqd9E8fcPbDnOefbA9Th/FIQ==",
    "registry": "npm",
    "packageName": "abortcontroller-polyfill",
    "cacheIntegrity": "sha512-JMJ5soJWP18htbbxJjG7bG6yuI6pRhgJ0scHHTfkUjf6wjP912xZWvM+A4sJK3gqd9E8fcPbDnOefbA9Th/FIQ== sha1-ZzhJX06QH7tXtsBhHQx192xIW+0="
  },
  "registry": "npm",
  "hash": "6738495f4e901fbb57b6c0611d0c75f76c485bed"
}