{
  "manifest": {
    "name": "libnpmaccess",
    "version": "7.0.2",
    "description": "programmatic library for `npm access` commands",
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "main": "lib/index.js",
    "scripts": {
      "lint": "eslint \"**/*.js\"",
      "test": "tap",
      "postlint": "template-oss-check",
      "lintfix": "node ../.. run lint -- --fix",
      "snap": "tap",
      "posttest": "node ../.. run lint",
      "template-oss-apply": "template-oss-apply --force"
    },
    "devDependencies": {
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/mock-registry": "^1.0.0",
      "@npmcli/template-oss": "4.11.4",
      "nock": "^13.3.0",
      "tap": "^16.3.4"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/cli.git",
      "directory": "workspaces/libnpmaccess"
    },
    "bugs": {
      "url": "https://github.com/npm/libnpmaccess/issues"
    },
    "homepage": "https://npmjs.com/package/libnpmaccess",
    "dependencies": {
      "npm-package-arg": "^10.1.0",
      "npm-registry-fetch": "^14.0.3"
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "files": [
      "bin/",
      "lib/"
    ],
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.11.4",
      "content": "../../scripts/template-oss/index.js"
    },
    "tap": {
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-libnpmaccess-7.0.2-7f056c8c933dd9c8ba771fa6493556b53c5aac52-integrity/node_modules/libnpmaccess/package.json",
    "readmeFilename": "README.md",
    "readme": "# libnpmaccess\n\n[![npm version](https://img.shields.io/npm/v/libnpmaccess.svg)](https://npm.im/libnpmaccess)\n[![license](https://img.shields.io/npm/l/libnpmaccess.svg)](https://npm.im/libnpmaccess)\n[![CI - libnpmaccess](https://github.com/npm/cli/actions/workflows/ci-libnpmaccess.yml/badge.svg)](https://github.com/npm/cli/actions/workflows/ci-libnpmaccess.yml)\n\n[`libnpmaccess`](https://github.com/npm/libnpmaccess) is a Node.js\nlibrary that provides programmatic access to the guts of the npm CLI's `npm\naccess` command. This includes managing account mfa settings, listing\npackages and permissions, looking at package collaborators, and defining\npackage permissions for users, orgs, and teams.\n\n## Example\n\n```javascript\nconst access = require('libnpmaccess')\nconst opts = { '//registry.npmjs.org/:_authToken: 'npm_token }\n\n// List all packages @zkat has access to on the npm registry.\nconsole.log(Object.keys(await access.getPackages('zkat', opts)))\n```\n\n### API\n\n#### `opts` for all `libnpmaccess` commands\n\n`libnpmaccess` uses [`npm-registry-fetch`](https://npm.im/npm-registry-fetch).\n\nAll options are passed through directly to that library, so please refer\nto [its own `opts`\ndocumentation](https://www.npmjs.com/package/npm-registry-fetch#fetch-options)\nfor options that can be passed in.\n\n#### `spec` parameter for all `libnpmaccess` commands\n\n`spec` must be an [`npm-package-arg`](https://npm.im/npm-package-arg)-compatible\nregistry spec.\n\n#### `access.getCollaborators(spec, opts) -> Promise<Object>`\n\nGets collaborators for a given package\n\n#### `access.getPackages(user|scope|team, opts) -> Promise<Object>`\n\nGets all packages for a given user, scope, or team.\n\nTeams should be in the format `scope:team` or `@scope:team`\n\nUsers and scopes can be in the format `@scope` or `scope`\n\n#### `access.getVisibility(spec, opts) -> Promise<Object>`\n\nGets the visibility of a given package\n\n#### `access.removePermissions(team, spec, opts) -> Promise<Boolean>`\n\nRemoves the access for a given team to a package.\n\nTeams should be in the format `scope:team` or `@scope:team`\n\n#### `access.setAccess(package, access, opts) -> Promise<Boolean>`\n\nSets access level for package described by `spec`.\n\nThe npm registry accepts the following `access` levels:\n\n`public`: package is public\n`private`: package is private\n\nThe npm registry also only allows scoped packages to have their access\nlevel set.\n\n#### access.setMfa(spec, level, opts) -> Promise<Boolean>`\n\nSets the publishing mfa requirements for a given package.  Level must be one of the\nfollowing\n\n`none`: mfa is not required to publish this package.\n`publish`: mfa is required to publish this package, automation tokens\ncannot be used to publish.\n`automation`: mfa is required to publish this package, automation tokens\nmay also be used for publishing from continuous integration workflows.\n\n#### access.setPermissions(team, spec, permssions, opts) -> Promise<Boolean>`\n\nSets permissions levels for a given team to a package.\n\nTeams should be in the format `scope:team` or `@scope:team`\n\nThe npm registry accepts the following `permissions`:\n\n`read-only`: Read only permissions\n`read-write`: Read and write (aka publish) permissions\n",
    "licenseText": "Copyright npm, Inc\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/libnpmaccess/-/libnpmaccess-7.0.2.tgz#7f056c8c933dd9c8ba771fa6493556b53c5aac52",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/libnpmaccess/-/libnpmaccess-7.0.2.tgz",
    "hash": "7f056c8c933dd9c8ba771fa6493556b53c5aac52",
    "integrity": "sha512-vHBVMw1JFMTgEk15zRsJuSAg7QtGGHpUSEfnbcRL1/gTBag9iEfJbyjpDmdJmwMhvpoLoNBtdAUCdGnaP32hhw==",
    "registry": "npm",
    "packageName": "libnpmaccess",
    "cacheIntegrity": "sha512-vHBVMw1JFMTgEk15zRsJuSAg7QtGGHpUSEfnbcRL1/gTBag9iEfJbyjpDmdJmwMhvpoLoNBtdAUCdGnaP32hhw== sha1-fwVsjJM92ci6dx+mSTVWtTxarFI="
  },
  "registry": "npm",
  "hash": "7f056c8c933dd9c8ba771fa6493556b53c5aac52"
}