{
  "manifest": {
    "name": "ipfs-http-response",
    "version": "6.0.0",
    "description": "Creates an HTTP response from an IPFS Hash",
    "author": {
      "name": "Vasco Santos",
      "email": "vasco.santos@moxy.studio"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-response#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-ipfs.git"
    },
    "bugs": {
      "url": "https://github.com/ipfs/js-ipfs/issues"
    },
    "keywords": [
      "http",
      "ipfs",
      "response"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "scripts": {
      "lint": "aegir lint",
      "clean": "aegir clean",
      "build": "aegir build --no-bundle",
      "test": "aegir test -t node",
      "test:node": "aegir test -t node --cov",
      "dep-check": "aegir dep-check -i global"
    },
    "dependencies": {
      "@libp2p/logger": "^2.0.0",
      "ejs": "^3.1.6",
      "file-type": "^18.0.0",
      "filesize": "^10.0.5",
      "it-map": "^2.0.0",
      "it-reader": "^6.0.1",
      "it-to-stream": "^1.0.0",
      "mime-types": "^2.1.30",
      "p-try-each": "^1.0.1"
    },
    "devDependencies": {
      "@types/ejs": "^3.1.0",
      "@types/mime-types": "^2.1.1",
      "aegir": "^37.11.0",
      "get-stream": "^6.0.0",
      "ipfs-core": "^0.18.0",
      "ipfsd-ctl": "^12.0.3",
      "it-all": "^2.0.0",
      "uint8arrays": "^4.0.2"
    },
    "browser": {
      "file-type": "file-type/browser",
      "fs": false
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-ipfs-http-response-6.0.0-integrity/node_modules/ipfs-http-response/package.json",
    "readmeFilename": "README.md",
    "readme": "# ipfs-http-response <!-- omit in toc -->\n\n[![ipfs.io](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io)\n[![IRC](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Discord](https://img.shields.io/discord/806902334369824788?style=flat-square)](https://discord.gg/ipfs)\n[![codecov](https://img.shields.io/codecov/c/github/ipfs/js-ipfs.svg?style=flat-square)](https://codecov.io/gh/ipfs/js-ipfs)\n[![CI](https://img.shields.io/github/workflow/status/ipfs/js-ipfs/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/ipfs/js-ipfs/actions/workflows/js-test-and-release.yml)\n\n> Creates an HTTP response from an IPFS Hash\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Creating HTTP Response](#creating-http-response)\n  - [Using protocol-agnostic resolver](#using-protocol-agnostic-resolver)\n- [License](#license)\n- [Contribute](#contribute)\n\n## Install\n\n```console\n$ npm i ipfs-http-response\n```\n\n## Usage\n\n### Creating HTTP Response\n\nThis project creates a HTTP response for an IPFS Path. This response can be a file, a HTML with directory listing or the entry point of a web page.\n\n```js\nimport { getResponse } from 'ipfs-http-response'\n\nconst result = await getResponse(ipfsNode, ipfsPath)\nconsole.log(result)\n```\n\n### Using protocol-agnostic resolver\n\nThis module also exports the used ipfs `resolver`, which should be used when the response needs to be customized or non-HTTP transport is used:\n\n```js\nimport { resolver } from 'ipfs-http-response'\n\nconst result = await resolver.cid(ipfsNode, ipfsPath)\nconsole.log(result)\n```\n\nIf `ipfsPath` points at a directory, `resolver.cid` will throw Error `This dag node is a directory` with a `cid` attribute that can be passed to `resolver.directory`:\n\n```js\nimport { resolver } from 'ipfs-http-response'\n\nconst result = await resolver.directory(ipfsNode, ipfsPath, cid)\nconsole.log(result)\n```\n\n`result` will be either a `string` with HTML directory listing or an array with CIDs of `index` pages present in inspected directory.\n\n![ipfs-http-response usage](docs/ipfs-http-response.png \"ipfs-http-response usage\")\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nContributions welcome! Please check out [the issues](https://github.com/ipfs/js-ipfs/issues).\n\nAlso see our [contributing document](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md) for more information on how we work, and about contributing in general.\n\nPlease be aware that all interactions related to this repo are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/ipfs-http-response/-/ipfs-http-response-6.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/ipfs-http-response/-/ipfs-http-response-6.0.0.tgz",
    "hash": "",
    "integrity": "sha512-TX8yuEjeci/GiR//u2k73PW8H7xjs/xOGRA5yUy9QymELfDws5ONg26dPW9MWAkGeB1dL22ePsKtQRKSLPY4yw==",
    "registry": "npm",
    "packageName": "ipfs-http-response",
    "cacheIntegrity": "sha512-TX8yuEjeci/GiR//u2k73PW8H7xjs/xOGRA5yUy9QymELfDws5ONg26dPW9MWAkGeB1dL22ePsKtQRKSLPY4yw== sha1-udt1dIuTPmgjNzOHn7HR+y8Qx2o="
  },
  "registry": "npm",
  "hash": "4d7f32b848de722fc6891fffbb693bdcf5bc1fbc63b3fc4e191039c94cbd4329842df0f0b3938d836e9d3d6f4c580906781d5d2f6d9e3ec2ad4112922cf638cb"
}