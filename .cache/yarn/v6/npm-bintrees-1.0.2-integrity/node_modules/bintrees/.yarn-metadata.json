{
  "manifest": {
    "author": {
      "name": "Vadim Graboys",
      "email": "dimva13@gmail.com"
    },
    "name": "bintrees",
    "description": "Binary Search Trees",
    "version": "1.0.2",
    "keywords": [
      "binary tree",
      "red black tree",
      "red-black tree",
      "redblack tree"
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git://github.com/vadimg/js_bintrees.git"
    },
    "main": "./index.js",
    "scripts": {
      "test": "nodeunit ./test/test_*.js && jshint lib/*.js index.js"
    },
    "dependencies": {},
    "devDependencies": {
      "nodeunit": "0.9.1",
      "jshint": "0.5.9",
      "underscore": "1.3.1",
      "reunion": "0.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-bintrees-1.0.2-integrity/node_modules/bintrees/package.json",
    "readmeFilename": "README.md",
    "readme": "Binary Trees [![Build Status](https://secure.travis-ci.org/vadimg/js_bintrees.png?branch=master)](http://travis-ci.org/vadimg/js_bintrees)\n============\n\nThis package provides Binary and Red-Black Search Trees written in Javascript. It is released under the MIT License.\n\nBinary Search Trees are a good way to store data in sorted order. A Red-Black tree is a variation of a Binary Tree that balances itself.\n\nAlgorithms were taken from Julienne Walker: http://eternallyconfuzzled.com/jsw_home.aspx\n\nTrees\n------------\n\n* BinTree - Binary Search Tree\n* RBTree - Red-Black Tree\n\nQuickstart\n------------\nnode.js:\n\n```\nnpm install bintrees\n```\n\n```javascript\nvar RBTree = require('bintrees').RBTree;\n\nvar tree = new RBTree(function(a, b) { return a - b; });\n\ntree.insert(2);\ntree.insert(-3);\n```\n\nsee examples/node.js for more info\n\nIn the browser:\n\n```html\n<script src=\"/path/to/rbtree.js\"></script>\n<script>\n    var tree = new RBTree(function(a, b) { return a - b; });\n    tree.insert(0);\n    tree.insert(1);\n</script>\n```\n\nsee examples/client.html for more info\n\nConstructor\n------------\n\nRequires 1 argument: a comparator function f(a,b) which returns:\n* 0 if a == b\n* >0 if a > b\n* <0 if a < b\n\nMethods\n------------\n\n### insert(item)\n> Inserts the item into the tree. Returns true if inserted, false if duplicate.\n\n### remove(item)\n> Removes the item from the tree. Returns true if removed, false if not found.\n\n### size\n> Number of nodes in the tree.\n\n### clear()\n> Removes all nodes from the tree.\n\n### find(item)\n> Returns node data if found, null otherwise.\n\n### findIter(item)\n> Returns an iterator to the node if found, null otherwise.\n\n### lowerBound(item)\n> Returns an iterator to the tree node at or immediately after the item. Returns null-iterator if tree is empty.\n>> __NOTE: Changed in version 1.0.0 to match C++ lower_bound__\n\n### upperBound(item)\n> Returns an iterator to the tree node immediately after the item. Returns null-iterator if tree is empty.\n>> __NOTE: Changed in version 1.0.0 to match C++ upper_bound__\n\n### min()\n> Returns the min node data in the tree, or null if the tree is empty.\n\n### max()\n> Returns the max node data in the tree, or null if the tree is empty.\n\n### each(f)\n> Calls f on each node's data, in order.\n\n### reach(f)\n> Calls f on each node's data, in reverse order.\n\n### iterator()\n> Returns a null-iterator. See __Iterators__ section below.\n\nIterators\n------------\n\ntree.iterator() will return a null-iterator. On a null iterator,\n* next() will return the first element in the tree\n* prev() will return the last element in the tree\n\nOtherwise,\n* next() will return the next element\n* prev() will return the previous element\n* data() will return the node the iterator is pointing to\n\nWhen iteration reaches the end, the iterator becomes a null-iterator again.\n\nForward iteration example:\n\n```javascript\nvar it=tree.iterator(), item;\nwhile((item = it.next()) !== null) {\n    // do stuff with item\n}\n```\n\nIf you are iterating forward through the tree, you can always call prev() to go back, and vice versa.\n\n__NOTE:__ iterators become invalid when you add or remove elements from the tree.\n\n## Production Usage\n\n* [Coinbase Exchange](https://exchange.coinbase.com/), since Jan 26, 2015.\n* If you are using this in production, please let me know! (add your company to this README in a pull request)\n",
    "licenseText": "Copyright (C) 2011 by Vadim Graboys\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/bintrees/-/bintrees-1.0.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/bintrees/-/bintrees-1.0.2.tgz",
    "hash": "",
    "integrity": "sha512-VOMgTMwjAaUG580SXn3LacVgjurrbMme7ZZNYGSSV7mmtY6QQRh0Eg3pwIcntQ77DErK1L0NxkbetjcoXzVwKw==",
    "registry": "npm",
    "packageName": "bintrees",
    "cacheIntegrity": "sha512-VOMgTMwjAaUG580SXn3LacVgjurrbMme7ZZNYGSSV7mmtY6QQRh0Eg3pwIcntQ77DErK1L0NxkbetjcoXzVwKw== sha1-SfiW1uhYpKSZ34XDj7OZua/4QPg="
  },
  "registry": "npm",
  "hash": "54e3204ccc2301a506e7cd125e7dcb69c5608eeaeb6cc99eed964d60649257b9a6b58e90411874120de9c08727b50efb0c4acad4bd0dc646deb637285f35702b"
}