{
  "manifest": {
    "name": "nano-base32",
    "author": {
      "name": "Gray Olson"
    },
    "version": "1.0.1",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/temrhn/nano-base32.git"
    },
    "main": "index.js",
    "types": "index.d.ts",
    "scripts": {
      "test": "standard && mocha"
    },
    "devDependencies": {
      "array-buffer-to-hex": "^1.0.0",
      "blakejs": "^1.1.0",
      "hex-to-array-buffer": "^0.1.0",
      "mocha": "^5.0.1",
      "standard": "^8.0.0-beta.5"
    },
    "keywords": [
      "base32 encode",
      "base32 encoder",
      "base32",
      "base32hex",
      "nano"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-nano-base32-1.0.1-ba548c879efcfb90da1c4d9e097db4a46c9255ef-integrity/node_modules/nano-base32/package.json",
    "readmeFilename": "readme.md",
    "readme": "# Nano-Base32\n\nA small, quick, self-contained implementation of the Base32 encoding/decoding scheme used by the cryptocurrency Nano.\n\n## Installation\n\n```sh\n$ yarn add nano-base32\n```\n\nor\n\n```sh\n$ npm install --save nano-base32\n```\n\n## Usage\n\n```js\nconst nanoBase32 = require('nano-base32')\nconst hexToArrayBuffer = require('hex-to-array-buffer')\nconst arrayBufferToHex = require('array-buffer-to-hex')\nconst blake = require('blakejs')\n\nconst pubKey = '0D7471E5D11FADDCE5315C97B23B464184AFA8C4C396DCF219696B2682D0ADF6'\nconst buffer = new Uint8Array(hexToArrayBuffer(pubKey))\n\nconst encoded = nanoBase32.encode(buffer)\n// => 15dng9kx49xfumkm4q6qpaxneie6oynebiwpums3ktdd6t3f3dhp\n\nconst checksum = blake.blake2b(buffer, null, 5).reverse()\n// => Uint8Array [ 33, 233, 215, 36, 38 ]\nconst checksumEncoded = nanoBase32.encode(checksum)\n// => 69nxgb38\n\nconst address = `xrb_${encoded}${checksumEncoded}`\n// => xrb_15dng9kx49xfumkm4q6qpaxneie6oynebiwpums3ktdd6t3f3dhp69nxgb38\n\nconst decoded = nanoBase32.decode(encoded)\nconst decodedHex = arrayBufferToHex(decoded.buffer).toUpperCase()\n// => 0D7471E5D11FADDCE5315C97B23B464184AFA8C4C396DCF219696B2682D0ADF6\n\nconst decodedChecksum = nanoBase32.decode(checksumEncoded)\n// => Uint8Array [ 33, 233, 215, 36, 38 ]\n```\n\n## API\n\n```javascript\n/**\n * Decodes a Nano-implementation Base32 encoded string into a Uint8Array\n * @param {string} input A Nano-Base32 encoded string\n * @returns {Uint8Array}\n */\n function decode (input)\n\n/**\n * Encode provided Uint8Array using the Nano-specific Base-32 implementeation.\n * @param {Uint8Array} view Input buffer formatted as a Uint8Array\n * @returns {string}\n */\nfunction encode (view)\n ```\n\n ## Running Tests\n ```\n $ git clone https://github.com/termhn/node-base32\n $ cd node-base32\n $ yarn install\n $ yarn test\n ```\n\n## Credit\nEncoding and decoding algorithms based on:\n- [base32-encode](https://github.com/LinusU/base32-encode) - Base32 encoder\n- [base32-decode](https://github.com/LinusU/base32-decode) - Base32 decoder\n",
    "description": "A small, quick, self-contained implementation of the Base32 encoding/decoding scheme used by the cryptocurrency Nano.",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Gray Olson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/nano-base32/-/nano-base32-1.0.1.tgz#ba548c879efcfb90da1c4d9e097db4a46c9255ef",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/nano-base32/-/nano-base32-1.0.1.tgz",
    "hash": "ba548c879efcfb90da1c4d9e097db4a46c9255ef",
    "integrity": "sha512-sxEtoTqAPdjWVGv71Q17koMFGsOMSiHsIFEvzOM7cNp8BXB4AnEwmDabm5dorusJf/v1z7QxaZYxUorU9RKaAw==",
    "registry": "npm",
    "packageName": "nano-base32",
    "cacheIntegrity": "sha512-sxEtoTqAPdjWVGv71Q17koMFGsOMSiHsIFEvzOM7cNp8BXB4AnEwmDabm5dorusJf/v1z7QxaZYxUorU9RKaAw== sha1-ulSMh578+5DaHE2eCX20pGySVe8="
  },
  "registry": "npm",
  "hash": "ba548c879efcfb90da1c4d9e097db4a46c9255ef"
}