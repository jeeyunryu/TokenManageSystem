{
  "manifest": {
    "name": "@libp2p/prometheus-metrics",
    "version": "1.1.3",
    "description": "Collect libp2p metrics for scraping by Prometheus or Graphana",
    "author": {},
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/libp2p/js-libp2p-prometheus-metrics#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/libp2p/js-libp2p-prometheus-metrics.git"
    },
    "bugs": {
      "url": "https://github.com/libp2p/js-libp2p-prometheus-metrics/issues"
    },
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "main"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "build": "aegir build",
      "test": "aegir test -t node",
      "test:node": "aegir test -t node --cov",
      "test:electron-main": "aegir test -t electron-main --cov",
      "release": "aegir release",
      "docs": "aegir docs"
    },
    "dependencies": {
      "@libp2p/interface-connection": "^3.0.2",
      "@libp2p/interface-metrics": "^4.0.2",
      "@libp2p/logger": "^2.0.2",
      "it-foreach": "^1.0.0",
      "it-stream-types": "^1.0.4"
    },
    "devDependencies": {
      "@libp2p/interface-mocks": "^8.0.4",
      "@libp2p/peer-id-factory": "^1.0.19",
      "@multiformats/multiaddr": "^11.0.7",
      "aegir": "^37.5.6",
      "it-drain": "^2.0.0",
      "it-pair": "^2.0.3",
      "it-pipe": "^2.0.4",
      "p-defer": "^4.0.0",
      "prom-client": "^14.1.0",
      "uint8arraylist": "^2.3.3"
    },
    "peerDependencies": {
      "prom-client": "^14.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@libp2p-prometheus-metrics-1.1.3-integrity/node_modules/@libp2p/prometheus-metrics/package.json",
    "readmeFilename": "README.md",
    "readme": "# @libp2p/prometheus-metrics <!-- omit in toc -->\n\n[![libp2p.io](https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square)](http://libp2p.io/)\n[![Discuss](https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg?style=flat-square)](https://discuss.libp2p.io)\n[![codecov](https://img.shields.io/codecov/c/github/libp2p/js-libp2p-prometheus-metrics.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-prometheus-metrics)\n[![CI](https://img.shields.io/github/actions/workflow/status/libp2p/js-libp2p-prometheus-metrics/js-test-and-release.yml?branch=main\\&style=flat-square)](https://github.com/libp2p/js-libp2p-prometheus-metrics/actions/workflows/js-test-and-release.yml?query=branch%3Amain)\n\n> Collect libp2p metrics for scraping by Prometheus or Graphana\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Queries](#queries)\n    - [Data sent/received](#data-sentreceived)\n    - [CPU usage](#cpu-usage)\n    - [Memory usage](#memory-usage)\n    - [DHT query time](#dht-query-time)\n    - [TCP transport dialer errors](#tcp-transport-dialer-errors)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribution](#contribution)\n\n## Install\n\n```console\n$ npm i @libp2p/prometheus-metrics\n```\n\n## Usage\n\nConfigure your libp2p node with Prometheus metrics:\n\n```js\nimport { createLibp2p } from 'libp2p'\nimport { prometheusMetrics } from '@libp2p/prometheus-metrics'\n\nconst node = await createLibp2p({\n  metrics: prometheusMetrics()\n})\n```\n\nThen use the `prom-client` module to supply metrics to the Prometheus/Graphana client using your http framework:\n\n```js\nimport client from 'prom-client'\n\nasync handler (request, h) {\n  return h.response(await client.register.metrics())\n    .type(client.register.contentType)\n}\n```\n\nAll Prometheus metrics are global so there's no other work required to extract them.\n\n### Queries\n\nSome useful queries are:\n\n#### Data sent/received\n\n    rate(libp2p_data_transfer_bytes_total[30s])\n\n#### CPU usage\n\n    rate(process_cpu_user_seconds_total[30s]) * 100\n\n#### Memory usage\n\n    nodejs_memory_usage_bytes\n\n#### DHT query time\n\n    libp2p_kad_dht_wan_query_time_seconds\n\nor\n\n    libp2p_kad_dht_lan_query_time_seconds\n\n#### TCP transport dialer errors\n\n    rate(libp2p_tcp_dialer_errors_total[30s])\n\n## API Docs\n\n- <https://libp2p.github.io/js-libp2p-prometheus-metrics>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@libp2p/prometheus-metrics/-/prometheus-metrics-1.1.3.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@libp2p/prometheus-metrics/-/prometheus-metrics-1.1.3.tgz",
    "hash": "",
    "integrity": "sha512-4rpn+ND/w2y5oWdP15KADLpD+SX6hdnEN0eZf+L18p8MaMr5qjpQBsCTe51VitKfVy5kIujNlquSVLhPozWFAA==",
    "registry": "npm",
    "packageName": "@libp2p/prometheus-metrics",
    "cacheIntegrity": "sha512-4rpn+ND/w2y5oWdP15KADLpD+SX6hdnEN0eZf+L18p8MaMr5qjpQBsCTe51VitKfVy5kIujNlquSVLhPozWFAA== sha1-qITiglmMfWk2dGWKIcBdZfpsnms="
  },
  "registry": "npm",
  "hash": "e2ba67f8d0ffc36cb9a1674fd792800cba43f925fa85d9c43747997fe2f5f29f0c68caf9aa3a5006c0937b9d558ad29f572e6422e8cd96ab9254b84fa3358500"
}