{
  "manifest": {
    "name": "it-pipe",
    "version": "1.1.0",
    "description": "Utility to \"pipe\" async iterables together",
    "main": "index.js",
    "scripts": {
      "test": "nyc --reporter=lcov --reporter=text ava --verbose",
      "lint": "standard"
    },
    "author": {
      "name": "Alan Shaw"
    },
    "license": "MIT",
    "devDependencies": {
      "ava": "^1.4.1",
      "nyc": "^13.3.0",
      "standard": "^12.0.1"
    },
    "dependencies": {},
    "repository": {
      "type": "git",
      "url": "git+https://github.com/alanshaw/it-pipe.git"
    },
    "bugs": {
      "url": "https://github.com/alanshaw/it-pipe/issues"
    },
    "homepage": "https://github.com/alanshaw/it-pipe#readme",
    "keywords": [
      "pipe",
      "pipeline",
      "iterable",
      "iterator",
      "async",
      "await",
      "stream",
      "pump",
      "pull"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-it-pipe-1.1.0-integrity/node_modules/it-pipe/package.json",
    "readmeFilename": "README.md",
    "readme": "# it-pipe\n\n\n[![Build Status](https://travis-ci.org/alanshaw/it-pipe.svg?branch=master)](https://travis-ci.org/alanshaw/it-pipe)\n[![dependencies Status](https://david-dm.org/alanshaw/it-pipe/status.svg)](https://david-dm.org/alanshaw/it-pipe)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n> Utility to \"pipe\" async iterables together\n\nBased on this definition of streaming iterables https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9.\n\nAlmost identical to the [`pipeline`](https://github.com/bustle/streaming-iterables#pipeline) function from the [`streaming-iterables`](https://www.npmjs.com/package/streaming-iterables) module except that it supports duplex streams _and_ will automatically wrap a \"source\" as the first param in a function.\n\n## Install\n\n```sh\nnpm i it-pipe\n```\n\n## Usage\n\n```js\nconst pipe = require('it-pipe')\n\nconst result = await pipe(\n  // A source is just an iterable, this is shorthand for () => [1, 2, 3]\n  [1, 2, 3],\n  // A transform takes a source, and returns a source.\n  // This transform doubles each value asynchronously.\n  function transform (source) {\n    return (async function * () { // A generator is async iterable\n      for await (const val of source) yield val * 2\n    })()\n  },\n  // A sink, it takes a source and consumes it, optionally returning a value.\n  // This sink buffers up all the values from the source and returns them.\n  async function collect (source) {\n    const vals = []\n    for await (const val of source) {\n      vals.push(val)\n    }\n    return vals\n  }\n)\n\nconsole.log(result) // 2,4,6\n```\n\n## API\n\n### `pipe(firstFn, ...fns)`\n\nCalls `firstFn` and then every function in `fns` with the result of the previous function. The final return is the result of the last function in `fns`.\n\nNote:\n\n* `firstFn` may be a `Function` or an `Iterable`\n* `firstFn` or any of `fns` may be a [duplex object](https://gist.github.com/alanshaw/591dc7dd54e4f99338a347ef568d6ee9#duplex-it) (an object with a `sink` and `source`).\n\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/alanshaw/it-pipe/issues/new) or submit PRs.\n\n## License\n\n[MIT](LICENSE) Â© Alan Shaw\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Alan Shaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/it-pipe/-/it-pipe-1.1.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/it-pipe/-/it-pipe-1.1.0.tgz",
    "hash": "",
    "integrity": "sha512-lF0/3qTVeth13TOnHVs0BTFaziwQF7m5Gg+E6JV0BXcLKutC92YjSi7bASgkPOXaLEb+YvNZrPorGMBIJvZfxg==",
    "registry": "npm",
    "packageName": "it-pipe",
    "cacheIntegrity": "sha512-lF0/3qTVeth13TOnHVs0BTFaziwQF7m5Gg+E6JV0BXcLKutC92YjSi7bASgkPOXaLEb+YvNZrPorGMBIJvZfxg== sha1-9ZZMa7eF3XdvEaYtHnWWR4erlc4="
  },
  "registry": "npm",
  "hash": "945d3fdea4d57ad875dd33a71d5b3405315ace2c1017b9b91a0f84e8957405770b2aeb42f766234a2edb0128243ce5da2c46fe62f359acfa2b18c04826f65fc6"
}