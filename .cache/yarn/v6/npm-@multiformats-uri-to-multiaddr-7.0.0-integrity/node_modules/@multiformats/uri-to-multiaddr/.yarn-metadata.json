{
  "manifest": {
    "name": "@multiformats/uri-to-multiaddr",
    "version": "7.0.0",
    "description": "Convert a URI to a Multiaddr: https://multiformats.io -> /dns4/multiformats.io/tcp/443/https",
    "author": {
      "name": "olizilla"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/multiformats/js-uri-to-multiaddr#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/multiformats/js-uri-to-multiaddr.git"
    },
    "bugs": {
      "url": "https://github.com/multiformats/js-uri-to-multiaddr/issues"
    },
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "files": [
      "src",
      "dist/src",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./dist/src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "dep-check": "aegir dep-check",
      "generate": "protons src/pb/peer.proto src/pb/tags.proto",
      "build": "aegir build",
      "test": "aegir test",
      "test:chrome": "aegir test -t browser",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:node": "aegir test -t node",
      "test:electron-main": "aegir test -t electron-main",
      "release": "aegir release"
    },
    "dependencies": {
      "@multiformats/multiaddr": "^11.0.0",
      "is-ip": "^5.0.0"
    },
    "devDependencies": {
      "aegir": "^37.5.3"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@multiformats-uri-to-multiaddr-7.0.0-integrity/node_modules/@multiformats/uri-to-multiaddr/package.json",
    "readmeFilename": "README.md",
    "readme": "# @multiformats/uri-to-multiaddr <!-- omit in toc -->\n\n[![multiformats.io](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://multiformats.io)\n[![codecov](https://img.shields.io/codecov/c/github/multiformats/js-uri-to-multiaddr.svg?style=flat-square)](https://codecov.io/gh/multiformats/js-uri-to-multiaddr)\n[![CI](https://img.shields.io/github/workflow/status/multiformats/js-uri-to-multiaddr/test%20&%20maybe%20release/master?style=flat-square)](https://github.com/multiformats/js-uri-to-multiaddr/actions/workflows/js-test-and-release.yml)\n\n> Convert a URI to a Multiaddr: <https://multiformats.io> -> /dns4/multiformats.io/tcp/443/https\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n- [Usage](#usage)\n- [Related](#related)\n- [Contribute](#contribute)\n- [License](#license)\n- [Contribute](#contribute-1)\n\n## Install\n\n```console\n$ npm i @multiformats/uri-to-multiaddr\n```\n\n## Usage\n\n```js\nconst toMultiaddr = require('uri-to-multiaddr')\n\nconsole.log(toMultiaddr('https://protocol.ai'))\n// -> /dns4/protocol.ai/tcp/443/https\n```\n\nDomain names can represent one of\n\n- `/dns4` - domain resolves to an ipv4 address (**default**)\n- `/dns6` - domain resolves to an ipv6 address\n- `/dnsaddr` - domain has a [DNSLink](https://docs.ipfs.io/guides/concepts/dnslink/) TXT record pointing to an IPFS CID\n\nThis library assumes `/dns4` when it finds a domain name in the input string.\nIt makes no attempt query DNS. To override the default assumption, you can pass\nin an options object as the second parameter to override it:\n\n```js\nconst toMultiaddr = require('uri-to-multiaddr')\n\nconsole.log(toMultiaddr('https://protocol.ai'), { defaultDnsType: 'dns6' })\n// -> /dns6/protocol.ai/tcp/443/https\n```\n\nSee [test.js](./test.js) for the currently supported conversions.\n\n**Note**: `uri-to-multiaddr` will throw if the passed URI:\n\n- is not a valid, according the WHATWG URL spec implementation used.\n- is not supported yet\n\n## Related\n\n- [multiaddr-to-uri](https://github.com/multiformats/js-multiaddr-to-uri) - convert it back again\n\n## Contribute\n\nFeel free to dive in! [Open an issue](https://github.com/multiformats/js-uri-to-multiaddr/issues/new) or submit PRs.\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@multiformats/uri-to-multiaddr/-/uri-to-multiaddr-7.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@multiformats/uri-to-multiaddr/-/uri-to-multiaddr-7.0.0.tgz",
    "hash": "",
    "integrity": "sha512-mB/I4znETEZA/PmflXmnjWj3ENcyJg6Yv3EQQbIdA5n9fJ43c58uMF2Ew7yXtl0Wxt4d1pAVFA6fki2xFrHGew==",
    "registry": "npm",
    "packageName": "@multiformats/uri-to-multiaddr",
    "cacheIntegrity": "sha512-mB/I4znETEZA/PmflXmnjWj3ENcyJg6Yv3EQQbIdA5n9fJ43c58uMF2Ew7yXtl0Wxt4d1pAVFA6fki2xFrHGew== sha1-JfpLWk7dxJO1FA1wg5+VSC9kvQA="
  },
  "registry": "npm",
  "hash": "981fc8e339c44c4640fcf99f9579a78d68f710d732260e98bf711041b21d0399fd7c9e37739f2e305d84c3bc97b65d16c6de1dd69015140e9f922db116b1c67b"
}