{
  "manifest": {
    "name": "it-drain",
    "version": "1.0.5",
    "description": "Empties an async iterator",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/achingbrain/it.git"
    },
    "homepage": "https://github.com/achingbrain/it/tree/master/packages/it-drain#readme",
    "bugs": {
      "url": "https://github.com/achingbrain/it/issues"
    },
    "scripts": {
      "test": "ava",
      "lint": "standard",
      "coverage": "nyc --reporter html --reporter lcov ava",
      "clean": "rm -rf .nyc_output coverage dist",
      "check": "tsc --noEmit",
      "build": "npm run build:types",
      "build:types": "tsc --emitDeclarationOnly --declarationDir dist",
      "prepublishOnly": "npm run build"
    },
    "author": {
      "name": "Alex Potsides",
      "email": "alex@achingbrain.net"
    },
    "license": "ISC",
    "devDependencies": {
      "ava": "^3.12.1",
      "nyc": "^15.1.0",
      "standard": "^16.0.3",
      "typescript": "^4.0.2"
    },
    "types": "dist/index.d.ts",
    "gitHead": "29126fa87dae108acef381693812f22ac8f9362b",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-it-drain-1.0.5-0466d4e286b37bcd32599d4e99b37a87cb8cfdf6-integrity/node_modules/it-drain/package.json",
    "readmeFilename": "README.md",
    "readme": "# it-drain\n\n[![Build status](https://github.com/achingbrain/it/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/achingbrain/it/actions/workflows/test.yml/) [![Coverage Status](https://coveralls.io/repos/github/achingbrain/it/badge.svg?branch=master)](https://coveralls.io/github/achingbrain/it?branch=master) [![Dependencies Status](https://david-dm.org/achingbrain/it/status.svg?path=packages/it-drain)](https://david-dm.org/achingbrain/it?path=packages/it-drain)\n\n> Drains an (async) iterable discarding its content and does not return anything.\n\nMostly useful for tests or when you want to be explicit about consuming an iterable without doing anything with any yielded values.\n\n## Install\n\n```sh\n$ npm install --save it-drain\n```\n\n## Usage\n\n```javascript\nconst drain = require('it-drain')\n\n// This can also be an iterator, async iterator, generator, etc\nconst values = [0, 1, 2, 3, 4]\n\nawait drain(values)\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/it-drain/-/it-drain-1.0.5.tgz#0466d4e286b37bcd32599d4e99b37a87cb8cfdf6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/it-drain/-/it-drain-1.0.5.tgz",
    "hash": "0466d4e286b37bcd32599d4e99b37a87cb8cfdf6",
    "integrity": "sha512-r/GjkiW1bZswC04TNmUnLxa6uovme7KKwPhc+cb1hHU65E3AByypHH6Pm91WHuvqfFsm+9ws0kPtDBV3/8vmIg==",
    "registry": "npm",
    "packageName": "it-drain",
    "cacheIntegrity": "sha512-r/GjkiW1bZswC04TNmUnLxa6uovme7KKwPhc+cb1hHU65E3AByypHH6Pm91WHuvqfFsm+9ws0kPtDBV3/8vmIg== sha1-BGbU4oaze80yWZ1OmbN6h8uM/fY="
  },
  "registry": "npm",
  "hash": "0466d4e286b37bcd32599d4e99b37a87cb8cfdf6"
}