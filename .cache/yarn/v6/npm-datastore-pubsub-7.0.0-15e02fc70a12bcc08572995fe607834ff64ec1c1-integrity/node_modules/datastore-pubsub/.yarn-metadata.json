{
  "manifest": {
    "name": "datastore-pubsub",
    "version": "7.0.0",
    "description": "Responsible for providing an interface-datastore compliant api to pubsub",
    "author": {
      "name": "Vasco Santos",
      "email": "vasco.santos@moxy.studio"
    },
    "license": "Apache-2.0 OR MIT",
    "homepage": "https://github.com/ipfs/js-datastore-pubsub#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ipfs/js-datastore-pubsub.git"
    },
    "bugs": {
      "url": "https://github.com/ipfs/js-datastore-pubsub/issues"
    },
    "keywords": [
      "datastore",
      "ipfs",
      "pubsub"
    ],
    "engines": {
      "node": ">=16.0.0",
      "npm": ">=7.0.0"
    },
    "type": "module",
    "types": "./dist/src/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ],
        "src/*": [
          "*",
          "dist/*",
          "dist/src/*",
          "dist/src/*/index"
        ]
      }
    },
    "files": [
      "src",
      "dist",
      "!dist/test",
      "!**/*.tsbuildinfo"
    ],
    "exports": {
      ".": {
        "types": "./dist/src/index.d.ts",
        "import": "./src/index.js"
      }
    },
    "eslintConfig": {
      "extends": "ipfs",
      "parserOptions": {
        "sourceType": "module"
      }
    },
    "release": {
      "branches": [
        "master"
      ],
      "plugins": [
        [
          "@semantic-release/commit-analyzer",
          {
            "preset": "conventionalcommits",
            "releaseRules": [
              {
                "breaking": true,
                "release": "major"
              },
              {
                "revert": true,
                "release": "patch"
              },
              {
                "type": "feat",
                "release": "minor"
              },
              {
                "type": "fix",
                "release": "patch"
              },
              {
                "type": "docs",
                "release": "patch"
              },
              {
                "type": "test",
                "release": "patch"
              },
              {
                "type": "deps",
                "release": "patch"
              },
              {
                "scope": "no-release",
                "release": false
              }
            ]
          }
        ],
        [
          "@semantic-release/release-notes-generator",
          {
            "preset": "conventionalcommits",
            "presetConfig": {
              "types": [
                {
                  "type": "feat",
                  "section": "Features"
                },
                {
                  "type": "fix",
                  "section": "Bug Fixes"
                },
                {
                  "type": "chore",
                  "section": "Trivial Changes"
                },
                {
                  "type": "docs",
                  "section": "Documentation"
                },
                {
                  "type": "deps",
                  "section": "Dependencies"
                },
                {
                  "type": "test",
                  "section": "Tests"
                }
              ]
            }
          }
        ],
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/github",
        "@semantic-release/git"
      ]
    },
    "scripts": {
      "clean": "aegir clean",
      "lint": "aegir lint",
      "build": "aegir build",
      "release": "aegir release",
      "test": "aegir test",
      "test:node": "aegir test -t node",
      "test:chrome": "aegir test -t browser",
      "test:chrome-webworker": "aegir test -t webworker",
      "test:firefox": "aegir test -t browser -- --browser firefox",
      "test:firefox-webworker": "aegir test -t webworker -- --browser firefox",
      "test:electron-main": "aegir test -t electron-main",
      "dep-check": "aegir dep-check",
      "docs": "aegir docs"
    },
    "dependencies": {
      "@libp2p/interface-dht": "^2.0.0",
      "@libp2p/interface-pubsub": "^3.0.0",
      "@libp2p/interfaces": "^3.2.0",
      "@libp2p/logger": "^2.0.0",
      "datastore-core": "^8.0.1",
      "interface-datastore": "^7.0.0",
      "uint8arrays": "^4.0.2"
    },
    "devDependencies": {
      "@libp2p/floodsub": "^6.0.0",
      "@libp2p/interface-mocks": "^9.0.0",
      "@libp2p/interface-peer-id": "^2.0.0",
      "@libp2p/interface-registrar": "^2.0.3",
      "@libp2p/peer-id-factory": "^2.0.0",
      "@libp2p/record": "^3.0.0",
      "aegir": "^37.10.0",
      "p-wait-for": "^5.0.0",
      "sinon": "^15.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-datastore-pubsub-7.0.0-15e02fc70a12bcc08572995fe607834ff64ec1c1-integrity/node_modules/datastore-pubsub/package.json",
    "readmeFilename": "README.md",
    "readme": "# datastore-pubsub <!-- omit in toc -->\n\n[![ipfs.tech](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](https://ipfs.tech)\n[![Discuss](https://img.shields.io/discourse/https/discuss.ipfs.tech/posts.svg?style=flat-square)](https://discuss.ipfs.tech)\n[![codecov](https://img.shields.io/codecov/c/github/ipfs/js-datastore-pubsub.svg?style=flat-square)](https://codecov.io/gh/ipfs/js-datastore-pubsub)\n[![CI](https://img.shields.io/github/actions/workflow/status/ipfs/js-datastore-pubsub/js-test-and-release.yml?branch=master\\&style=flat-square)](https://github.com/ipfs/js-datastore-pubsub/actions/workflows/js-test-and-release.yml?query=branch%3Amaster)\n\n> Responsible for providing an interface-datastore compliant api to pubsub\n\n## Table of contents <!-- omit in toc -->\n\n- [Install](#install)\n  - [Browser `<script>` tag](#browser-script-tag)\n- [Usage](#usage)\n- [API](#api)\n  - - [Setup](#setup)\n    - [Get](#get)\n    - [Put](#put)\n    - [Unsubscribe](#unsubscribe)\n- [Contribute](#contribute)\n- [API Docs](#api-docs)\n- [License](#license)\n- [Contribute](#contribute-1)\n\n## Install\n\n```console\n$ npm i datastore-pubsub\n```\n\n### Browser `<script>` tag\n\nLoading this module through a script tag will make it's exports available as `DatastorePubsub` in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/datastore-pubsub/dist/index.min.js\"></script>\n```\n\n## Usage\n\n```js\nimport { PubSubDatastore } from 'datastore-pubsub'\n\nconst dsPubsub = new PubSubDatastore(pubsub, datastore, peerId, validator)\n```\n\n## API\n\n#### Setup\n\n```js\nnew PubSubDatastore(pubsub, datastore, peerId, validator, subscriptionKeyFn)\n```\n\nCreates a DatastorePubsub instance.\n\nArguments:\n\n- `pubsub` (Object): implementation of a pubsub (must have publish and subscribe functions), such as [libp2p/pubsub](https://github.com/libp2p/js-libp2p/blob/master/src/pubsub.js).\n- `datastore` (Object): datastore compliant with [interface-datastore](https://github.com/ipfs/interface-datastore), such as [datastore-fs](https://github.com/ipfs/js-datastore-fs).\n- `peerId` (`PeerId` [Instance](https://github.com/libp2p/js-peer-id)): peer identifier object.\n- `validator` (Object): containing validate function and select function.\n- `subscriptionKeyFn` (function): function to manipulate the key topic received according to the needs, as well as to block the message received to be published.\n\nNote: `validator` object must be composed by two functions, `validate (record: uint8Array, peerId: PeerId) => boolean` and `select (received: uint8Array, current: uint8Array) => boolean`. `validate` aims to verify if a new record received by pubsub is valid to be stored locally by the node. If it is valid and the node already has a local record stored, `select` is the function provided to be responsible for deciding which record is the best (newer) between the already stored and the received through pubsub. A `validator` example can be found at: TODO (js-ipns)\n\n```js\nconst dsPubsub = new DatastorePubsub(pubsub, datastore, peerId, validator)\n```\n\n#### Get\n\n```js\nconst buf = await dsPubsub.get(key)\n```\n\nTry to subscribe a topic with Pubsub and receive the current local value if available.\n\nArguments:\n\n- `key` (Uint8Array): a key representing a unique identifier of the object to subscribe.\n\nReturns `Promise<Uint8Array>` containing the most recent known record stored.\n\n#### Put\n\n```js\nawait dsPubsub.put(key, val)\n```\n\nPublishes a value through pubsub.\n\nArguments:\n\n- `key` (Uint8Array): a key representing a unique identifier of the object to publish.\n- `val` (Uint8Array): value to be propagated.\n\nReturns `Promise<void>`\n\n#### Unsubscribe\n\n```js\nawait dsPubsub.unsubscribe(key)\n```\n\nUnsubscribe a previously subscribe value.\n\nArguments:\n\n- `key` (Uint8Array): a key representing a unique identifier of the object to publish.\n\nReturns `Promise<void>`\n\n## Contribute\n\nFeel free to join in. All welcome. Open an [issue](https://github.com/ipfs/js-ipns/issues)!\n\nThis repository falls under the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n\n## API Docs\n\n- <https://ipfs.github.io/js-datastore-pubsub>\n\n## License\n\nLicensed under either of\n\n- Apache 2.0, ([LICENSE-APACHE](LICENSE-APACHE) / <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT ([LICENSE-MIT](LICENSE-MIT) / <http://opensource.org/licenses/MIT>)\n\n## Contribute\n\nContributions welcome! Please check out [the issues](https://github.com/ipfs/js-datastore-pubsub/issues).\n\nAlso see our [contributing document](https://github.com/ipfs/community/blob/master/CONTRIBUTING_JS.md) for more information on how we work, and about contributing in general.\n\nPlease be aware that all interactions related to this repo are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "This project is dual licensed under MIT and Apache-2.0.\n\nMIT: https://www.opensource.org/licenses/mit\nApache-2.0: https://www.apache.org/licenses/license-2.0\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/datastore-pubsub/-/datastore-pubsub-7.0.0.tgz#15e02fc70a12bcc08572995fe607834ff64ec1c1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/datastore-pubsub/-/datastore-pubsub-7.0.0.tgz",
    "hash": "15e02fc70a12bcc08572995fe607834ff64ec1c1",
    "integrity": "sha512-P5mmj7hq5cwVMSBwoILTWzA2yz+JfLH6Q6ddyZPPZC8Nx0HtWtdQtVDELQ+DnAe5tnDn77iyQyXx5zzhErNL9A==",
    "registry": "npm",
    "packageName": "datastore-pubsub",
    "cacheIntegrity": "sha512-P5mmj7hq5cwVMSBwoILTWzA2yz+JfLH6Q6ddyZPPZC8Nx0HtWtdQtVDELQ+DnAe5tnDn77iyQyXx5zzhErNL9A== sha1-FeAvxwoSvMCFcplf5geDT/ZOwcE="
  },
  "registry": "npm",
  "hash": "15e02fc70a12bcc08572995fe607834ff64ec1c1"
}