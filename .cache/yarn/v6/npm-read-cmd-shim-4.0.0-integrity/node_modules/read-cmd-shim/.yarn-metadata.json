{
  "manifest": {
    "name": "read-cmd-shim",
    "version": "4.0.0",
    "description": "Figure out what a cmd-shim is pointing at. This acts as the equivalent of fs.readlink.",
    "main": "lib/index.js",
    "devDependencies": {
      "@npmcli/eslint-config": "^3.0.1",
      "@npmcli/template-oss": "4.5.1",
      "cmd-shim": "^5.0.0",
      "rimraf": "^3.0.0",
      "tap": "^16.0.1"
    },
    "scripts": {
      "test": "tap",
      "lint": "eslint \"**/*.js\"",
      "postlint": "template-oss-check",
      "template-oss-apply": "template-oss-apply --force",
      "lintfix": "npm run lint -- --fix",
      "snap": "tap",
      "posttest": "npm run lint"
    },
    "tap": {
      "check-coverage": true,
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/read-cmd-shim.git"
    },
    "license": "ISC",
    "homepage": "https://github.com/npm/read-cmd-shim#readme",
    "files": [
      "bin/",
      "lib/"
    ],
    "author": {
      "name": "GitHub Inc."
    },
    "engines": {
      "node": "^14.17.0 || ^16.13.0 || >=18.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.5.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-read-cmd-shim-4.0.0-integrity/node_modules/read-cmd-shim/package.json",
    "readmeFilename": "README.md",
    "readme": "# read-cmd-shim\n\nFigure out what a [`cmd-shim`](https://github.com/ForbesLindesay/cmd-shim)\nis pointing at.  This acts as the equivalent of\n[`fs.readlink`](https://nodejs.org/api/fs.html#fs_fs_readlink_path_callback).\n\n### Usage\n\n```\nconst readCmdShim = require('read-cmd-shim')\n\nreadCmdShim('/path/to/shim.cmd').then(destination => {\n  â€¦\n})\n\nconst destination = readCmdShim.sync('/path/to/shim.cmd')\n```\n\n### readCmdShim(path) -> Promise\n\nReads the `cmd-shim` located at `path` and resolves with the _relative_\npath that the shim points at. Consider this as roughly the equivalent of\n`fs.readlink`.\n\nThis can read both `.cmd` style that are run by the Windows Command Prompt\nand Powershell, and the kind without any extension that are used by Cygwin.\n\nThis can return errors that `fs.readFile` returns, except that they'll\ninclude a stack trace from where `readCmdShim` was called.  Plus it can\nreturn a special `ENOTASHIM` exception, when it can't find a cmd-shim in the\nfile referenced by `path`.  This should only happen if you pass in a\nnon-command shim.\n\n### readCmdShim.sync(path)\n\nSame as above but synchronous. Errors are thrown.\n",
    "licenseText": "Copyright (c) 2015, Rebecca Turner <me@re-becca.org>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/read-cmd-shim/-/read-cmd-shim-4.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/read-cmd-shim/-/read-cmd-shim-4.0.0.tgz",
    "hash": "",
    "integrity": "sha512-yILWifhaSEEytfXI76kB9xEEiG1AiozaCJZ83A87ytjRiN+jVibXjedjCRNjoZviinhG+4UkalO3mWTd8u5O0Q==",
    "registry": "npm",
    "packageName": "read-cmd-shim",
    "cacheIntegrity": "sha512-yILWifhaSEEytfXI76kB9xEEiG1AiozaCJZ83A87ytjRiN+jVibXjedjCRNjoZviinhG+4UkalO3mWTd8u5O0Q== sha1-ZAoItHOkkEPjlK4MejTdgixzubs="
  },
  "registry": "npm",
  "hash": "c882d689f85a484132b5f5c8efa901f71104886d408a8cda08967cdc0f3bcad8d188dfa35626d78de763091363a19be28a7846fb85246a53b79964ddf2ee4ed1"
}